// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schema/schema.proto

package gapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Value_Type int32

const (
	Value_STRING  Value_Type = 0
	Value_UINT    Value_Type = 1
	Value_FLOAT   Value_Type = 2
	Value_BOOLEAN Value_Type = 3
)

var Value_Type_name = map[int32]string{
	0: "STRING",
	1: "UINT",
	2: "FLOAT",
	3: "BOOLEAN",
}

var Value_Type_value = map[string]int32{
	"STRING":  0,
	"UINT":    1,
	"FLOAT":   2,
	"BOOLEAN": 3,
}

func (x Value_Type) String() string {
	return proto.EnumName(Value_Type_name, int32(x))
}

func (Value_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{23, 0}
}

type PipeSendRequest struct {
	DeviceID             string            `protobuf:"bytes,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	PipeID               string            `protobuf:"bytes,2,opt,name=pipeID,proto3" json:"pipeID,omitempty"`
	OutputID             string            `protobuf:"bytes,3,opt,name=outputID,proto3" json:"outputID,omitempty"`
	Message              map[string]*Value `protobuf:"bytes,4,rep,name=message,proto3" json:"message,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PipeSendRequest) Reset()         { *m = PipeSendRequest{} }
func (m *PipeSendRequest) String() string { return proto.CompactTextString(m) }
func (*PipeSendRequest) ProtoMessage()    {}
func (*PipeSendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{0}
}

func (m *PipeSendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeSendRequest.Unmarshal(m, b)
}
func (m *PipeSendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeSendRequest.Marshal(b, m, deterministic)
}
func (m *PipeSendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeSendRequest.Merge(m, src)
}
func (m *PipeSendRequest) XXX_Size() int {
	return xxx_messageInfo_PipeSendRequest.Size(m)
}
func (m *PipeSendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeSendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PipeSendRequest proto.InternalMessageInfo

func (m *PipeSendRequest) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *PipeSendRequest) GetPipeID() string {
	if m != nil {
		return m.PipeID
	}
	return ""
}

func (m *PipeSendRequest) GetOutputID() string {
	if m != nil {
		return m.OutputID
	}
	return ""
}

func (m *PipeSendRequest) GetMessage() map[string]*Value {
	if m != nil {
		return m.Message
	}
	return nil
}

type PipeSendResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PipeSendResponse) Reset()         { *m = PipeSendResponse{} }
func (m *PipeSendResponse) String() string { return proto.CompactTextString(m) }
func (*PipeSendResponse) ProtoMessage()    {}
func (*PipeSendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{1}
}

func (m *PipeSendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeSendResponse.Unmarshal(m, b)
}
func (m *PipeSendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeSendResponse.Marshal(b, m, deterministic)
}
func (m *PipeSendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeSendResponse.Merge(m, src)
}
func (m *PipeSendResponse) XXX_Size() int {
	return xxx_messageInfo_PipeSendResponse.Size(m)
}
func (m *PipeSendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeSendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PipeSendResponse proto.InternalMessageInfo

type PipeReceiveRequest struct {
	// string deviceID = 2;
	PipeTypeID           string   `protobuf:"bytes,1,opt,name=pipeTypeID,proto3" json:"pipeTypeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PipeReceiveRequest) Reset()         { *m = PipeReceiveRequest{} }
func (m *PipeReceiveRequest) String() string { return proto.CompactTextString(m) }
func (*PipeReceiveRequest) ProtoMessage()    {}
func (*PipeReceiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{2}
}

func (m *PipeReceiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeReceiveRequest.Unmarshal(m, b)
}
func (m *PipeReceiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeReceiveRequest.Marshal(b, m, deterministic)
}
func (m *PipeReceiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeReceiveRequest.Merge(m, src)
}
func (m *PipeReceiveRequest) XXX_Size() int {
	return xxx_messageInfo_PipeReceiveRequest.Size(m)
}
func (m *PipeReceiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeReceiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PipeReceiveRequest proto.InternalMessageInfo

func (m *PipeReceiveRequest) GetPipeTypeID() string {
	if m != nil {
		return m.PipeTypeID
	}
	return ""
}

type PipeReceiveResponse struct {
	DeviceID             string            `protobuf:"bytes,5,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	PipeTypeID           string            `protobuf:"bytes,4,opt,name=pipeTypeID,proto3" json:"pipeTypeID,omitempty"`
	PipeID               string            `protobuf:"bytes,3,opt,name=pipeID,proto3" json:"pipeID,omitempty"`
	InputID              string            `protobuf:"bytes,2,opt,name=inputID,proto3" json:"inputID,omitempty"`
	Message              map[string]*Value `protobuf:"bytes,1,rep,name=message,proto3" json:"message,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Params               map[string]*Value `protobuf:"bytes,6,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PipeReceiveResponse) Reset()         { *m = PipeReceiveResponse{} }
func (m *PipeReceiveResponse) String() string { return proto.CompactTextString(m) }
func (*PipeReceiveResponse) ProtoMessage()    {}
func (*PipeReceiveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{3}
}

func (m *PipeReceiveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeReceiveResponse.Unmarshal(m, b)
}
func (m *PipeReceiveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeReceiveResponse.Marshal(b, m, deterministic)
}
func (m *PipeReceiveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeReceiveResponse.Merge(m, src)
}
func (m *PipeReceiveResponse) XXX_Size() int {
	return xxx_messageInfo_PipeReceiveResponse.Size(m)
}
func (m *PipeReceiveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeReceiveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PipeReceiveResponse proto.InternalMessageInfo

func (m *PipeReceiveResponse) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *PipeReceiveResponse) GetPipeTypeID() string {
	if m != nil {
		return m.PipeTypeID
	}
	return ""
}

func (m *PipeReceiveResponse) GetPipeID() string {
	if m != nil {
		return m.PipeID
	}
	return ""
}

func (m *PipeReceiveResponse) GetInputID() string {
	if m != nil {
		return m.InputID
	}
	return ""
}

func (m *PipeReceiveResponse) GetMessage() map[string]*Value {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *PipeReceiveResponse) GetParams() map[string]*Value {
	if m != nil {
		return m.Params
	}
	return nil
}

type OnInitFlowRequest struct {
	DeviceID             string   `protobuf:"bytes,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Flows                []*Flow  `protobuf:"bytes,2,rep,name=flows,proto3" json:"flows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnInitFlowRequest) Reset()         { *m = OnInitFlowRequest{} }
func (m *OnInitFlowRequest) String() string { return proto.CompactTextString(m) }
func (*OnInitFlowRequest) ProtoMessage()    {}
func (*OnInitFlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{4}
}

func (m *OnInitFlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnInitFlowRequest.Unmarshal(m, b)
}
func (m *OnInitFlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnInitFlowRequest.Marshal(b, m, deterministic)
}
func (m *OnInitFlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnInitFlowRequest.Merge(m, src)
}
func (m *OnInitFlowRequest) XXX_Size() int {
	return xxx_messageInfo_OnInitFlowRequest.Size(m)
}
func (m *OnInitFlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OnInitFlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OnInitFlowRequest proto.InternalMessageInfo

func (m *OnInitFlowRequest) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *OnInitFlowRequest) GetFlows() []*Flow {
	if m != nil {
		return m.Flows
	}
	return nil
}

type OnInitFlowResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnInitFlowResponse) Reset()         { *m = OnInitFlowResponse{} }
func (m *OnInitFlowResponse) String() string { return proto.CompactTextString(m) }
func (*OnInitFlowResponse) ProtoMessage()    {}
func (*OnInitFlowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{5}
}

func (m *OnInitFlowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnInitFlowResponse.Unmarshal(m, b)
}
func (m *OnInitFlowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnInitFlowResponse.Marshal(b, m, deterministic)
}
func (m *OnInitFlowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnInitFlowResponse.Merge(m, src)
}
func (m *OnInitFlowResponse) XXX_Size() int {
	return xxx_messageInfo_OnInitFlowResponse.Size(m)
}
func (m *OnInitFlowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OnInitFlowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OnInitFlowResponse proto.InternalMessageInfo

type OnPipeInitRequest struct {
	PipeTypeID           string   `protobuf:"bytes,1,opt,name=pipeTypeID,proto3" json:"pipeTypeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnPipeInitRequest) Reset()         { *m = OnPipeInitRequest{} }
func (m *OnPipeInitRequest) String() string { return proto.CompactTextString(m) }
func (*OnPipeInitRequest) ProtoMessage()    {}
func (*OnPipeInitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{6}
}

func (m *OnPipeInitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnPipeInitRequest.Unmarshal(m, b)
}
func (m *OnPipeInitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnPipeInitRequest.Marshal(b, m, deterministic)
}
func (m *OnPipeInitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnPipeInitRequest.Merge(m, src)
}
func (m *OnPipeInitRequest) XXX_Size() int {
	return xxx_messageInfo_OnPipeInitRequest.Size(m)
}
func (m *OnPipeInitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OnPipeInitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OnPipeInitRequest proto.InternalMessageInfo

func (m *OnPipeInitRequest) GetPipeTypeID() string {
	if m != nil {
		return m.PipeTypeID
	}
	return ""
}

type OnPipeInitResponse struct {
	DeviceID string `protobuf:"bytes,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	// string flowID = 2;
	PipeID               string            `protobuf:"bytes,3,opt,name=pipeID,proto3" json:"pipeID,omitempty"`
	PipeTypeID           string            `protobuf:"bytes,4,opt,name=pipeTypeID,proto3" json:"pipeTypeID,omitempty"`
	Params               map[string]*Value `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OnPipeInitResponse) Reset()         { *m = OnPipeInitResponse{} }
func (m *OnPipeInitResponse) String() string { return proto.CompactTextString(m) }
func (*OnPipeInitResponse) ProtoMessage()    {}
func (*OnPipeInitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{7}
}

func (m *OnPipeInitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnPipeInitResponse.Unmarshal(m, b)
}
func (m *OnPipeInitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnPipeInitResponse.Marshal(b, m, deterministic)
}
func (m *OnPipeInitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnPipeInitResponse.Merge(m, src)
}
func (m *OnPipeInitResponse) XXX_Size() int {
	return xxx_messageInfo_OnPipeInitResponse.Size(m)
}
func (m *OnPipeInitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OnPipeInitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OnPipeInitResponse proto.InternalMessageInfo

func (m *OnPipeInitResponse) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *OnPipeInitResponse) GetPipeID() string {
	if m != nil {
		return m.PipeID
	}
	return ""
}

func (m *OnPipeInitResponse) GetPipeTypeID() string {
	if m != nil {
		return m.PipeTypeID
	}
	return ""
}

func (m *OnPipeInitResponse) GetParams() map[string]*Value {
	if m != nil {
		return m.Params
	}
	return nil
}

type RegDeviceRequest struct {
	DeviceTypeID         string   `protobuf:"bytes,1,opt,name=deviceTypeID,proto3" json:"deviceTypeID,omitempty"`
	UserID               string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegDeviceRequest) Reset()         { *m = RegDeviceRequest{} }
func (m *RegDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*RegDeviceRequest) ProtoMessage()    {}
func (*RegDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{8}
}

func (m *RegDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegDeviceRequest.Unmarshal(m, b)
}
func (m *RegDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegDeviceRequest.Marshal(b, m, deterministic)
}
func (m *RegDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegDeviceRequest.Merge(m, src)
}
func (m *RegDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_RegDeviceRequest.Size(m)
}
func (m *RegDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegDeviceRequest proto.InternalMessageInfo

func (m *RegDeviceRequest) GetDeviceTypeID() string {
	if m != nil {
		return m.DeviceTypeID
	}
	return ""
}

func (m *RegDeviceRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type RegDeviceResponse struct {
	DeviceID             string   `protobuf:"bytes,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegDeviceResponse) Reset()         { *m = RegDeviceResponse{} }
func (m *RegDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*RegDeviceResponse) ProtoMessage()    {}
func (*RegDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{9}
}

func (m *RegDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegDeviceResponse.Unmarshal(m, b)
}
func (m *RegDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegDeviceResponse.Marshal(b, m, deterministic)
}
func (m *RegDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegDeviceResponse.Merge(m, src)
}
func (m *RegDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_RegDeviceResponse.Size(m)
}
func (m *RegDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegDeviceResponse proto.InternalMessageInfo

func (m *RegDeviceResponse) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

// message AuthDeviceRequest {
// 	string deviceID = 1;
// }
// message AuthDeviceResponse {
// 	bool ok = 1;
// }
type SetDeviceOnlineRequest struct {
	DeviceID             string   `protobuf:"bytes,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Online               bool     `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetDeviceOnlineRequest) Reset()         { *m = SetDeviceOnlineRequest{} }
func (m *SetDeviceOnlineRequest) String() string { return proto.CompactTextString(m) }
func (*SetDeviceOnlineRequest) ProtoMessage()    {}
func (*SetDeviceOnlineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{10}
}

func (m *SetDeviceOnlineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDeviceOnlineRequest.Unmarshal(m, b)
}
func (m *SetDeviceOnlineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDeviceOnlineRequest.Marshal(b, m, deterministic)
}
func (m *SetDeviceOnlineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDeviceOnlineRequest.Merge(m, src)
}
func (m *SetDeviceOnlineRequest) XXX_Size() int {
	return xxx_messageInfo_SetDeviceOnlineRequest.Size(m)
}
func (m *SetDeviceOnlineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDeviceOnlineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetDeviceOnlineRequest proto.InternalMessageInfo

func (m *SetDeviceOnlineRequest) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *SetDeviceOnlineRequest) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

type SetDeviceOnlineResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetDeviceOnlineResponse) Reset()         { *m = SetDeviceOnlineResponse{} }
func (m *SetDeviceOnlineResponse) String() string { return proto.CompactTextString(m) }
func (*SetDeviceOnlineResponse) ProtoMessage()    {}
func (*SetDeviceOnlineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{11}
}

func (m *SetDeviceOnlineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDeviceOnlineResponse.Unmarshal(m, b)
}
func (m *SetDeviceOnlineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDeviceOnlineResponse.Marshal(b, m, deterministic)
}
func (m *SetDeviceOnlineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDeviceOnlineResponse.Merge(m, src)
}
func (m *SetDeviceOnlineResponse) XXX_Size() int {
	return xxx_messageInfo_SetDeviceOnlineResponse.Size(m)
}
func (m *SetDeviceOnlineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDeviceOnlineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetDeviceOnlineResponse proto.InternalMessageInfo

func (m *SetDeviceOnlineResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type UserRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{12}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type UserByEmailRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserByEmailRequest) Reset()         { *m = UserByEmailRequest{} }
func (m *UserByEmailRequest) String() string { return proto.CompactTextString(m) }
func (*UserByEmailRequest) ProtoMessage()    {}
func (*UserByEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{13}
}

func (m *UserByEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserByEmailRequest.Unmarshal(m, b)
}
func (m *UserByEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserByEmailRequest.Marshal(b, m, deterministic)
}
func (m *UserByEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserByEmailRequest.Merge(m, src)
}
func (m *UserByEmailRequest) XXX_Size() int {
	return xxx_messageInfo_UserByEmailRequest.Size(m)
}
func (m *UserByEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserByEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserByEmailRequest proto.InternalMessageInfo

func (m *UserByEmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type UserByTokenRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserByTokenRequest) Reset()         { *m = UserByTokenRequest{} }
func (m *UserByTokenRequest) String() string { return proto.CompactTextString(m) }
func (*UserByTokenRequest) ProtoMessage()    {}
func (*UserByTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{14}
}

func (m *UserByTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserByTokenRequest.Unmarshal(m, b)
}
func (m *UserByTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserByTokenRequest.Marshal(b, m, deterministic)
}
func (m *UserByTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserByTokenRequest.Merge(m, src)
}
func (m *UserByTokenRequest) XXX_Size() int {
	return xxx_messageInfo_UserByTokenRequest.Size(m)
}
func (m *UserByTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserByTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserByTokenRequest proto.InternalMessageInfo

func (m *UserByTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type DeviceRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceRequest) Reset()         { *m = DeviceRequest{} }
func (m *DeviceRequest) String() string { return proto.CompactTextString(m) }
func (*DeviceRequest) ProtoMessage()    {}
func (*DeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{15}
}

func (m *DeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRequest.Unmarshal(m, b)
}
func (m *DeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRequest.Marshal(b, m, deterministic)
}
func (m *DeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRequest.Merge(m, src)
}
func (m *DeviceRequest) XXX_Size() int {
	return xxx_messageInfo_DeviceRequest.Size(m)
}
func (m *DeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRequest proto.InternalMessageInfo

func (m *DeviceRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type DeviceTypeRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceTypeRequest) Reset()         { *m = DeviceTypeRequest{} }
func (m *DeviceTypeRequest) String() string { return proto.CompactTextString(m) }
func (*DeviceTypeRequest) ProtoMessage()    {}
func (*DeviceTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{16}
}

func (m *DeviceTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceTypeRequest.Unmarshal(m, b)
}
func (m *DeviceTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceTypeRequest.Marshal(b, m, deterministic)
}
func (m *DeviceTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceTypeRequest.Merge(m, src)
}
func (m *DeviceTypeRequest) XXX_Size() int {
	return xxx_messageInfo_DeviceTypeRequest.Size(m)
}
func (m *DeviceTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceTypeRequest proto.InternalMessageInfo

func (m *DeviceTypeRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type LoginRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Pass                 string   `protobuf:"bytes,2,opt,name=pass,proto3" json:"pass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{17}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginRequest) GetPass() string {
	if m != nil {
		return m.Pass
	}
	return ""
}

type CreateUserRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Pass                 string   `protobuf:"bytes,2,opt,name=pass,proto3" json:"pass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserRequest) Reset()         { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()    {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{18}
}

func (m *CreateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserRequest.Unmarshal(m, b)
}
func (m *CreateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserRequest.Marshal(b, m, deterministic)
}
func (m *CreateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest.Merge(m, src)
}
func (m *CreateUserRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserRequest.Size(m)
}
func (m *CreateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest proto.InternalMessageInfo

func (m *CreateUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateUserRequest) GetPass() string {
	if m != nil {
		return m.Pass
	}
	return ""
}

type SendResetPasswordLinkRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResetPasswordLinkRequest) Reset()         { *m = SendResetPasswordLinkRequest{} }
func (m *SendResetPasswordLinkRequest) String() string { return proto.CompactTextString(m) }
func (*SendResetPasswordLinkRequest) ProtoMessage()    {}
func (*SendResetPasswordLinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{19}
}

func (m *SendResetPasswordLinkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResetPasswordLinkRequest.Unmarshal(m, b)
}
func (m *SendResetPasswordLinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResetPasswordLinkRequest.Marshal(b, m, deterministic)
}
func (m *SendResetPasswordLinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResetPasswordLinkRequest.Merge(m, src)
}
func (m *SendResetPasswordLinkRequest) XXX_Size() int {
	return xxx_messageInfo_SendResetPasswordLinkRequest.Size(m)
}
func (m *SendResetPasswordLinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResetPasswordLinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendResetPasswordLinkRequest proto.InternalMessageInfo

func (m *SendResetPasswordLinkRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type SendResetPasswordLinkResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResetPasswordLinkResponse) Reset()         { *m = SendResetPasswordLinkResponse{} }
func (m *SendResetPasswordLinkResponse) String() string { return proto.CompactTextString(m) }
func (*SendResetPasswordLinkResponse) ProtoMessage()    {}
func (*SendResetPasswordLinkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{20}
}

func (m *SendResetPasswordLinkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResetPasswordLinkResponse.Unmarshal(m, b)
}
func (m *SendResetPasswordLinkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResetPasswordLinkResponse.Marshal(b, m, deterministic)
}
func (m *SendResetPasswordLinkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResetPasswordLinkResponse.Merge(m, src)
}
func (m *SendResetPasswordLinkResponse) XXX_Size() int {
	return xxx_messageInfo_SendResetPasswordLinkResponse.Size(m)
}
func (m *SendResetPasswordLinkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResetPasswordLinkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendResetPasswordLinkResponse proto.InternalMessageInfo

func (m *SendResetPasswordLinkResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type ResetPasswordRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	NewPass              string   `protobuf:"bytes,2,opt,name=newPass,proto3" json:"newPass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetPasswordRequest) Reset()         { *m = ResetPasswordRequest{} }
func (m *ResetPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ResetPasswordRequest) ProtoMessage()    {}
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{21}
}

func (m *ResetPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPasswordRequest.Unmarshal(m, b)
}
func (m *ResetPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPasswordRequest.Marshal(b, m, deterministic)
}
func (m *ResetPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPasswordRequest.Merge(m, src)
}
func (m *ResetPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ResetPasswordRequest.Size(m)
}
func (m *ResetPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPasswordRequest proto.InternalMessageInfo

func (m *ResetPasswordRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ResetPasswordRequest) GetNewPass() string {
	if m != nil {
		return m.NewPass
	}
	return ""
}

type ResetPasswordResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetPasswordResponse) Reset()         { *m = ResetPasswordResponse{} }
func (m *ResetPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*ResetPasswordResponse) ProtoMessage()    {}
func (*ResetPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{22}
}

func (m *ResetPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPasswordResponse.Unmarshal(m, b)
}
func (m *ResetPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPasswordResponse.Marshal(b, m, deterministic)
}
func (m *ResetPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPasswordResponse.Merge(m, src)
}
func (m *ResetPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_ResetPasswordResponse.Size(m)
}
func (m *ResetPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPasswordResponse proto.InternalMessageInfo

func (m *ResetPasswordResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type Value struct {
	Type                 Value_Type `protobuf:"varint,1,opt,name=type,proto3,enum=schema.Value_Type" json:"type,omitempty"`
	Value                []byte     `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{23}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

func (m *Value) GetType() Value_Type {
	if m != nil {
		return m.Type
	}
	return Value_STRING
}

func (m *Value) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type UnixTime struct {
	Sec                  int64    `protobuf:"varint,1,opt,name=sec,proto3" json:"sec,omitempty"`
	Nsec                 int64    `protobuf:"varint,2,opt,name=nsec,proto3" json:"nsec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnixTime) Reset()         { *m = UnixTime{} }
func (m *UnixTime) String() string { return proto.CompactTextString(m) }
func (*UnixTime) ProtoMessage()    {}
func (*UnixTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{24}
}

func (m *UnixTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnixTime.Unmarshal(m, b)
}
func (m *UnixTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnixTime.Marshal(b, m, deterministic)
}
func (m *UnixTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnixTime.Merge(m, src)
}
func (m *UnixTime) XXX_Size() int {
	return xxx_messageInfo_UnixTime.Size(m)
}
func (m *UnixTime) XXX_DiscardUnknown() {
	xxx_messageInfo_UnixTime.DiscardUnknown(m)
}

var xxx_messageInfo_UnixTime proto.InternalMessageInfo

func (m *UnixTime) GetSec() int64 {
	if m != nil {
		return m.Sec
	}
	return 0
}

func (m *UnixTime) GetNsec() int64 {
	if m != nil {
		return m.Nsec
	}
	return 0
}

type User struct {
	ID                   string     `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Email                *UserEmail `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt            *UnixTime  `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{25}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *User) GetEmail() *UserEmail {
	if m != nil {
		return m.Email
	}
	return nil
}

func (m *User) GetCreatedAt() *UnixTime {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type UserEmail struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Verified             bool     `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserEmail) Reset()         { *m = UserEmail{} }
func (m *UserEmail) String() string { return proto.CompactTextString(m) }
func (*UserEmail) ProtoMessage()    {}
func (*UserEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{26}
}

func (m *UserEmail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEmail.Unmarshal(m, b)
}
func (m *UserEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEmail.Marshal(b, m, deterministic)
}
func (m *UserEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEmail.Merge(m, src)
}
func (m *UserEmail) XXX_Size() int {
	return xxx_messageInfo_UserEmail.Size(m)
}
func (m *UserEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEmail.DiscardUnknown(m)
}

var xxx_messageInfo_UserEmail proto.InternalMessageInfo

func (m *UserEmail) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UserEmail) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

type Plugin struct {
	ID                   string      `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PipeTypes            []*PipeType `protobuf:"bytes,3,rep,name=pipeTypes,proto3" json:"pipeTypes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Plugin) Reset()         { *m = Plugin{} }
func (m *Plugin) String() string { return proto.CompactTextString(m) }
func (*Plugin) ProtoMessage()    {}
func (*Plugin) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{27}
}

func (m *Plugin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plugin.Unmarshal(m, b)
}
func (m *Plugin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plugin.Marshal(b, m, deterministic)
}
func (m *Plugin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plugin.Merge(m, src)
}
func (m *Plugin) XXX_Size() int {
	return xxx_messageInfo_Plugin.Size(m)
}
func (m *Plugin) XXX_DiscardUnknown() {
	xxx_messageInfo_Plugin.DiscardUnknown(m)
}

var xxx_messageInfo_Plugin proto.InternalMessageInfo

func (m *Plugin) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Plugin) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Plugin) GetPipeTypes() []*PipeType {
	if m != nil {
		return m.PipeTypes
	}
	return nil
}

type PipeType struct {
	ID                   string           `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Description          string           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Params               []*PipeTypeParam `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty"`
	Inputs               []string         `protobuf:"bytes,4,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs              []string         `protobuf:"bytes,5,rep,name=outputs,proto3" json:"outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PipeType) Reset()         { *m = PipeType{} }
func (m *PipeType) String() string { return proto.CompactTextString(m) }
func (*PipeType) ProtoMessage()    {}
func (*PipeType) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{28}
}

func (m *PipeType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeType.Unmarshal(m, b)
}
func (m *PipeType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeType.Marshal(b, m, deterministic)
}
func (m *PipeType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeType.Merge(m, src)
}
func (m *PipeType) XXX_Size() int {
	return xxx_messageInfo_PipeType.Size(m)
}
func (m *PipeType) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeType.DiscardUnknown(m)
}

var xxx_messageInfo_PipeType proto.InternalMessageInfo

func (m *PipeType) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *PipeType) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PipeType) GetParams() []*PipeTypeParam {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PipeType) GetInputs() []string {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *PipeType) GetOutputs() []string {
	if m != nil {
		return m.Outputs
	}
	return nil
}

type PipeTypeParam struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	DefaultValue         *Value   `protobuf:"bytes,3,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PipeTypeParam) Reset()         { *m = PipeTypeParam{} }
func (m *PipeTypeParam) String() string { return proto.CompactTextString(m) }
func (*PipeTypeParam) ProtoMessage()    {}
func (*PipeTypeParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{29}
}

func (m *PipeTypeParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeTypeParam.Unmarshal(m, b)
}
func (m *PipeTypeParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeTypeParam.Marshal(b, m, deterministic)
}
func (m *PipeTypeParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeTypeParam.Merge(m, src)
}
func (m *PipeTypeParam) XXX_Size() int {
	return xxx_messageInfo_PipeTypeParam.Size(m)
}
func (m *PipeTypeParam) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeTypeParam.DiscardUnknown(m)
}

var xxx_messageInfo_PipeTypeParam proto.InternalMessageInfo

func (m *PipeTypeParam) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *PipeTypeParam) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PipeTypeParam) GetDefaultValue() *Value {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

func (m *PipeTypeParam) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type DeviceType struct {
	ID                   string              `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Variables            *DeviceTypeVariable `protobuf:"bytes,3,opt,name=variables,proto3" json:"variables,omitempty"`
	Flow                 *Flow               `protobuf:"bytes,4,opt,name=flow,proto3" json:"flow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DeviceType) Reset()         { *m = DeviceType{} }
func (m *DeviceType) String() string { return proto.CompactTextString(m) }
func (*DeviceType) ProtoMessage()    {}
func (*DeviceType) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{30}
}

func (m *DeviceType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceType.Unmarshal(m, b)
}
func (m *DeviceType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceType.Marshal(b, m, deterministic)
}
func (m *DeviceType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceType.Merge(m, src)
}
func (m *DeviceType) XXX_Size() int {
	return xxx_messageInfo_DeviceType.Size(m)
}
func (m *DeviceType) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceType.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceType proto.InternalMessageInfo

func (m *DeviceType) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DeviceType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeviceType) GetVariables() *DeviceTypeVariable {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *DeviceType) GetFlow() *Flow {
	if m != nil {
		return m.Flow
	}
	return nil
}

type DeviceTypeVariable struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	DefaultValue         *Value   `protobuf:"bytes,3,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceTypeVariable) Reset()         { *m = DeviceTypeVariable{} }
func (m *DeviceTypeVariable) String() string { return proto.CompactTextString(m) }
func (*DeviceTypeVariable) ProtoMessage()    {}
func (*DeviceTypeVariable) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{31}
}

func (m *DeviceTypeVariable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceTypeVariable.Unmarshal(m, b)
}
func (m *DeviceTypeVariable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceTypeVariable.Marshal(b, m, deterministic)
}
func (m *DeviceTypeVariable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceTypeVariable.Merge(m, src)
}
func (m *DeviceTypeVariable) XXX_Size() int {
	return xxx_messageInfo_DeviceTypeVariable.Size(m)
}
func (m *DeviceTypeVariable) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceTypeVariable.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceTypeVariable proto.InternalMessageInfo

func (m *DeviceTypeVariable) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeviceTypeVariable) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DeviceTypeVariable) GetDefaultValue() *Value {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

func (m *DeviceTypeVariable) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Flow struct {
	Pipes                []*Pipe  `protobuf:"bytes,1,rep,name=pipes,proto3" json:"pipes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Flow) Reset()         { *m = Flow{} }
func (m *Flow) String() string { return proto.CompactTextString(m) }
func (*Flow) ProtoMessage()    {}
func (*Flow) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{32}
}

func (m *Flow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flow.Unmarshal(m, b)
}
func (m *Flow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flow.Marshal(b, m, deterministic)
}
func (m *Flow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flow.Merge(m, src)
}
func (m *Flow) XXX_Size() int {
	return xxx_messageInfo_Flow.Size(m)
}
func (m *Flow) XXX_DiscardUnknown() {
	xxx_messageInfo_Flow.DiscardUnknown(m)
}

var xxx_messageInfo_Flow proto.InternalMessageInfo

func (m *Flow) GetPipes() []*Pipe {
	if m != nil {
		return m.Pipes
	}
	return nil
}

type Pipe struct {
	ID                   string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PluginID             string            `protobuf:"bytes,2,opt,name=pluginID,proto3" json:"pluginID,omitempty"`
	PipeTypeID           string            `protobuf:"bytes,3,opt,name=pipeTypeID,proto3" json:"pipeTypeID,omitempty"`
	Params               map[string]*Value `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Binds                []*Bind           `protobuf:"bytes,5,rep,name=binds,proto3" json:"binds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Pipe) Reset()         { *m = Pipe{} }
func (m *Pipe) String() string { return proto.CompactTextString(m) }
func (*Pipe) ProtoMessage()    {}
func (*Pipe) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{33}
}

func (m *Pipe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pipe.Unmarshal(m, b)
}
func (m *Pipe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pipe.Marshal(b, m, deterministic)
}
func (m *Pipe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pipe.Merge(m, src)
}
func (m *Pipe) XXX_Size() int {
	return xxx_messageInfo_Pipe.Size(m)
}
func (m *Pipe) XXX_DiscardUnknown() {
	xxx_messageInfo_Pipe.DiscardUnknown(m)
}

var xxx_messageInfo_Pipe proto.InternalMessageInfo

func (m *Pipe) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Pipe) GetPluginID() string {
	if m != nil {
		return m.PluginID
	}
	return ""
}

func (m *Pipe) GetPipeTypeID() string {
	if m != nil {
		return m.PipeTypeID
	}
	return ""
}

func (m *Pipe) GetParams() map[string]*Value {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *Pipe) GetBinds() []*Bind {
	if m != nil {
		return m.Binds
	}
	return nil
}

type Bind struct {
	FromOutput           string   `protobuf:"bytes,1,opt,name=fromOutput,proto3" json:"fromOutput,omitempty"`
	ToPipe               string   `protobuf:"bytes,2,opt,name=toPipe,proto3" json:"toPipe,omitempty"`
	ToInput              string   `protobuf:"bytes,3,opt,name=toInput,proto3" json:"toInput,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bind) Reset()         { *m = Bind{} }
func (m *Bind) String() string { return proto.CompactTextString(m) }
func (*Bind) ProtoMessage()    {}
func (*Bind) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{34}
}

func (m *Bind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bind.Unmarshal(m, b)
}
func (m *Bind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bind.Marshal(b, m, deterministic)
}
func (m *Bind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bind.Merge(m, src)
}
func (m *Bind) XXX_Size() int {
	return xxx_messageInfo_Bind.Size(m)
}
func (m *Bind) XXX_DiscardUnknown() {
	xxx_messageInfo_Bind.DiscardUnknown(m)
}

var xxx_messageInfo_Bind proto.InternalMessageInfo

func (m *Bind) GetFromOutput() string {
	if m != nil {
		return m.FromOutput
	}
	return ""
}

func (m *Bind) GetToPipe() string {
	if m != nil {
		return m.ToPipe
	}
	return ""
}

func (m *Bind) GetToInput() string {
	if m != nil {
		return m.ToInput
	}
	return ""
}

type Device struct {
	ID                   string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DeviceTypeID         string            `protobuf:"bytes,3,opt,name=deviceTypeID,proto3" json:"deviceTypeID,omitempty"`
	UserID               string            `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID,omitempty"`
	Variables            []*DeviceVariable `protobuf:"bytes,5,rep,name=variables,proto3" json:"variables,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{35}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Device) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Device) GetDeviceTypeID() string {
	if m != nil {
		return m.DeviceTypeID
	}
	return ""
}

func (m *Device) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Device) GetVariables() []*DeviceVariable {
	if m != nil {
		return m.Variables
	}
	return nil
}

type DeviceVariable struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Value                *Value   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	PreviousValue        *Value   `protobuf:"bytes,3,opt,name=previousValue,proto3" json:"previousValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceVariable) Reset()         { *m = DeviceVariable{} }
func (m *DeviceVariable) String() string { return proto.CompactTextString(m) }
func (*DeviceVariable) ProtoMessage()    {}
func (*DeviceVariable) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{36}
}

func (m *DeviceVariable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceVariable.Unmarshal(m, b)
}
func (m *DeviceVariable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceVariable.Marshal(b, m, deterministic)
}
func (m *DeviceVariable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceVariable.Merge(m, src)
}
func (m *DeviceVariable) XXX_Size() int {
	return xxx_messageInfo_DeviceVariable.Size(m)
}
func (m *DeviceVariable) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceVariable.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceVariable proto.InternalMessageInfo

func (m *DeviceVariable) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeviceVariable) GetValue() *Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *DeviceVariable) GetPreviousValue() *Value {
	if m != nil {
		return m.PreviousValue
	}
	return nil
}

type Token struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	TargetID             string   `protobuf:"bytes,3,opt,name=targetID,proto3" json:"targetID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b0d2c3e7e0142d, []int{37}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Token) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Token) GetTargetID() string {
	if m != nil {
		return m.TargetID
	}
	return ""
}

func init() {
	proto.RegisterEnum("schema.Value_Type", Value_Type_name, Value_Type_value)
	proto.RegisterType((*PipeSendRequest)(nil), "schema.PipeSendRequest")
	proto.RegisterMapType((map[string]*Value)(nil), "schema.PipeSendRequest.MessageEntry")
	proto.RegisterType((*PipeSendResponse)(nil), "schema.PipeSendResponse")
	proto.RegisterType((*PipeReceiveRequest)(nil), "schema.PipeReceiveRequest")
	proto.RegisterType((*PipeReceiveResponse)(nil), "schema.PipeReceiveResponse")
	proto.RegisterMapType((map[string]*Value)(nil), "schema.PipeReceiveResponse.MessageEntry")
	proto.RegisterMapType((map[string]*Value)(nil), "schema.PipeReceiveResponse.ParamsEntry")
	proto.RegisterType((*OnInitFlowRequest)(nil), "schema.OnInitFlowRequest")
	proto.RegisterType((*OnInitFlowResponse)(nil), "schema.OnInitFlowResponse")
	proto.RegisterType((*OnPipeInitRequest)(nil), "schema.OnPipeInitRequest")
	proto.RegisterType((*OnPipeInitResponse)(nil), "schema.OnPipeInitResponse")
	proto.RegisterMapType((map[string]*Value)(nil), "schema.OnPipeInitResponse.ParamsEntry")
	proto.RegisterType((*RegDeviceRequest)(nil), "schema.RegDeviceRequest")
	proto.RegisterType((*RegDeviceResponse)(nil), "schema.RegDeviceResponse")
	proto.RegisterType((*SetDeviceOnlineRequest)(nil), "schema.SetDeviceOnlineRequest")
	proto.RegisterType((*SetDeviceOnlineResponse)(nil), "schema.SetDeviceOnlineResponse")
	proto.RegisterType((*UserRequest)(nil), "schema.UserRequest")
	proto.RegisterType((*UserByEmailRequest)(nil), "schema.UserByEmailRequest")
	proto.RegisterType((*UserByTokenRequest)(nil), "schema.UserByTokenRequest")
	proto.RegisterType((*DeviceRequest)(nil), "schema.DeviceRequest")
	proto.RegisterType((*DeviceTypeRequest)(nil), "schema.DeviceTypeRequest")
	proto.RegisterType((*LoginRequest)(nil), "schema.LoginRequest")
	proto.RegisterType((*CreateUserRequest)(nil), "schema.CreateUserRequest")
	proto.RegisterType((*SendResetPasswordLinkRequest)(nil), "schema.SendResetPasswordLinkRequest")
	proto.RegisterType((*SendResetPasswordLinkResponse)(nil), "schema.SendResetPasswordLinkResponse")
	proto.RegisterType((*ResetPasswordRequest)(nil), "schema.ResetPasswordRequest")
	proto.RegisterType((*ResetPasswordResponse)(nil), "schema.ResetPasswordResponse")
	proto.RegisterType((*Value)(nil), "schema.Value")
	proto.RegisterType((*UnixTime)(nil), "schema.UnixTime")
	proto.RegisterType((*User)(nil), "schema.User")
	proto.RegisterType((*UserEmail)(nil), "schema.UserEmail")
	proto.RegisterType((*Plugin)(nil), "schema.Plugin")
	proto.RegisterType((*PipeType)(nil), "schema.PipeType")
	proto.RegisterType((*PipeTypeParam)(nil), "schema.PipeTypeParam")
	proto.RegisterType((*DeviceType)(nil), "schema.DeviceType")
	proto.RegisterType((*DeviceTypeVariable)(nil), "schema.DeviceTypeVariable")
	proto.RegisterType((*Flow)(nil), "schema.Flow")
	proto.RegisterType((*Pipe)(nil), "schema.Pipe")
	proto.RegisterMapType((map[string]*Value)(nil), "schema.Pipe.ParamsEntry")
	proto.RegisterType((*Bind)(nil), "schema.Bind")
	proto.RegisterType((*Device)(nil), "schema.Device")
	proto.RegisterType((*DeviceVariable)(nil), "schema.DeviceVariable")
	proto.RegisterType((*Token)(nil), "schema.Token")
}

func init() { proto.RegisterFile("schema/schema.proto", fileDescriptor_98b0d2c3e7e0142d) }

var fileDescriptor_98b0d2c3e7e0142d = []byte{
	// 1431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x5f, 0x6f, 0x1b, 0x45,
	0x10, 0xe7, 0xec, 0xb3, 0x63, 0x8f, 0x9d, 0xd4, 0xd9, 0x26, 0xad, 0x7b, 0xf4, 0x4f, 0xb4, 0x2d,
	0x6d, 0x5a, 0x41, 0x12, 0xd2, 0x08, 0x2a, 0x10, 0x2d, 0x09, 0x49, 0xc1, 0x92, 0x89, 0xa3, 0x8b,
	0x5b, 0x21, 0xc4, 0xcb, 0xd5, 0xde, 0x98, 0x53, 0xec, 0xbb, 0xe3, 0xee, 0xec, 0x10, 0x21, 0xf1,
	0xcc, 0x03, 0x2f, 0x7c, 0x80, 0xf2, 0xc5, 0xf8, 0x0a, 0x3c, 0xf1, 0x09, 0xd0, 0xec, 0x9f, 0xfb,
	0x6b, 0xbb, 0x96, 0x08, 0x4f, 0xf1, 0xec, 0xcc, 0xce, 0xcc, 0xfe, 0x66, 0x76, 0xf6, 0x77, 0x81,
	0xeb, 0x41, 0xef, 0x47, 0x36, 0xb2, 0xb6, 0xc5, 0x9f, 0x2d, 0xcf, 0x77, 0x43, 0x97, 0x94, 0x85,
	0x44, 0xff, 0xd6, 0xe0, 0xda, 0x89, 0xed, 0xb1, 0x53, 0xe6, 0xf4, 0x4d, 0xf6, 0xd3, 0x98, 0x05,
	0x21, 0x31, 0xa0, 0xd2, 0x67, 0x13, 0xbb, 0xc7, 0x5a, 0x87, 0x4d, 0x6d, 0x43, 0xdb, 0xac, 0x9a,
	0x91, 0x4c, 0x6e, 0x40, 0xd9, 0xb3, 0x3d, 0xd4, 0x14, 0xb8, 0x46, 0x4a, 0xb8, 0xc7, 0x1d, 0x87,
	0xde, 0x38, 0x6c, 0x1d, 0x36, 0x8b, 0x62, 0x8f, 0x92, 0xc9, 0x73, 0x58, 0x1a, 0xb1, 0x20, 0xb0,
	0x06, 0xac, 0xa9, 0x6f, 0x14, 0x37, 0x6b, 0xbb, 0x0f, 0xb6, 0x64, 0x2e, 0x99, 0xc8, 0x5b, 0xdf,
	0x0a, 0xb3, 0x23, 0x27, 0xf4, 0x2f, 0x4d, 0xb5, 0xc9, 0x68, 0x41, 0x3d, 0xa9, 0x20, 0x0d, 0x28,
	0x9e, 0xb3, 0x4b, 0x99, 0x1a, 0xfe, 0x24, 0xf7, 0xa1, 0x34, 0xb1, 0x86, 0x63, 0xc6, 0x93, 0xaa,
	0xed, 0x2e, 0x2b, 0xff, 0xaf, 0x71, 0xd1, 0x14, 0xba, 0xcf, 0x0a, 0xcf, 0x34, 0x4a, 0xa0, 0x11,
	0xc7, 0x0c, 0x3c, 0xd7, 0x09, 0x18, 0xdd, 0x03, 0x82, 0x6b, 0x26, 0xeb, 0x31, 0x7b, 0xc2, 0x14,
	0x08, 0x77, 0x01, 0xf0, 0x68, 0xdd, 0x4b, 0x2f, 0x86, 0x21, 0xb1, 0x42, 0xdf, 0x16, 0xe1, 0x7a,
	0x6a, 0x9b, 0xf0, 0x96, 0x02, 0xaf, 0x94, 0x01, 0x2f, 0xed, 0x53, 0xcf, 0xfa, 0x4c, 0x80, 0x5b,
	0x4c, 0x81, 0xdb, 0x84, 0x25, 0xdb, 0x11, 0xd8, 0x0a, 0xd4, 0x95, 0x48, 0x0e, 0x62, 0x68, 0x35,
	0x0e, 0xed, 0x66, 0x12, 0xda, 0x4c, 0x6e, 0xd3, 0xe1, 0x25, 0x2f, 0xa0, 0xec, 0x59, 0xbe, 0x35,
	0x0a, 0x9a, 0x65, 0xee, 0xe2, 0xd1, 0x3c, 0x17, 0x27, 0xdc, 0x52, 0x78, 0x90, 0xdb, 0xae, 0xb0,
	0x3e, 0xc6, 0x37, 0x50, 0x4b, 0x44, 0xf8, 0x2f, 0x95, 0x3e, 0x85, 0xd5, 0x8e, 0xd3, 0x72, 0xec,
	0xf0, 0xe5, 0xd0, 0xbd, 0x58, 0xa4, 0xb3, 0x29, 0x94, 0xce, 0x86, 0xee, 0x45, 0xd0, 0x2c, 0x70,
	0x14, 0xea, 0xca, 0x33, 0xdf, 0x2f, 0x54, 0x74, 0x0d, 0x48, 0xd2, 0xa9, 0x6c, 0xa0, 0xa7, 0x18,
	0x0a, 0xc1, 0x42, 0xcd, 0xa2, 0xfd, 0xf3, 0x8f, 0x86, 0xbe, 0xe2, 0x5d, 0x53, 0xda, 0x67, 0xf6,
	0xdd, 0x4b, 0xb7, 0xc7, 0xbb, 0xda, 0xea, 0x79, 0x54, 0xe0, 0x12, 0x3f, 0xda, 0x43, 0x75, 0xb4,
	0x7c, 0xfc, 0xa9, 0xf5, 0xbd, 0xba, 0xa2, 0x1c, 0x43, 0xc3, 0x64, 0x83, 0x43, 0x7e, 0x20, 0x05,
	0x14, 0x85, 0xba, 0x38, 0x61, 0x0a, 0xaa, 0xd4, 0x1a, 0x9e, 0x7c, 0x1c, 0x30, 0x3f, 0x9e, 0x3a,
	0x42, 0xa2, 0xdb, 0xb0, 0x9a, 0xf0, 0xf7, 0x6e, 0x08, 0x69, 0x1b, 0x6e, 0x9c, 0xb2, 0x50, 0x6c,
	0xe8, 0x38, 0x43, 0xdb, 0x61, 0x0b, 0x0e, 0x3d, 0x97, 0x1b, 0xf3, 0xf0, 0x15, 0x53, 0x4a, 0xf4,
	0x31, 0xdc, 0xcc, 0x79, 0x93, 0x49, 0xac, 0x40, 0xc1, 0x3d, 0xe7, 0x8e, 0x2a, 0x66, 0xc1, 0x3d,
	0xa7, 0x77, 0xa0, 0xf6, 0x2a, 0x60, 0xbe, 0x8a, 0xb6, 0x02, 0x85, 0x28, 0x4e, 0xa1, 0x75, 0x48,
	0x9f, 0x00, 0x41, 0xf5, 0xc1, 0xe5, 0xd1, 0xc8, 0xb2, 0x87, 0xca, 0x6a, 0x0d, 0x4a, 0x0c, 0x65,
	0x69, 0x28, 0x84, 0xd8, 0xb6, 0xeb, 0x9e, 0x33, 0x27, 0x61, 0x1b, 0xa2, 0xac, 0x6c, 0xb9, 0x40,
	0xef, 0xc1, 0x72, 0x1a, 0xed, 0x6c, 0xe0, 0xfb, 0xb0, 0x7a, 0x18, 0x21, 0x3d, 0xcb, 0xe8, 0x19,
	0xd4, 0xdb, 0xee, 0xc0, 0x76, 0xe6, 0xe6, 0x45, 0x08, 0xe8, 0x9e, 0x15, 0x04, 0xb2, 0x44, 0xfc,
	0x37, 0xfd, 0x02, 0x56, 0xbf, 0xf2, 0x99, 0x15, 0xb2, 0xe4, 0xe1, 0x17, 0xdf, 0xbe, 0x07, 0xb7,
	0xe5, 0xa8, 0x66, 0xe1, 0x89, 0x15, 0x04, 0x17, 0xae, 0xdf, 0x6f, 0xdb, 0xce, 0xf9, 0x7c, 0x80,
	0xb6, 0xe1, 0xce, 0x8c, 0x5d, 0x33, 0x8a, 0xf3, 0x12, 0xd6, 0x52, 0xc6, 0x73, 0x31, 0xc5, 0x69,
	0xec, 0xb0, 0x8b, 0x93, 0x38, 0x57, 0x25, 0xd2, 0x47, 0xb0, 0x9e, 0xf1, 0x33, 0x23, 0xe0, 0x2f,
	0x50, 0xe2, 0x77, 0x83, 0x3c, 0x04, 0x3d, 0xbc, 0xf4, 0x18, 0x57, 0xad, 0xec, 0x92, 0xd4, 0xc5,
	0xd9, 0xe2, 0x25, 0xe1, 0x7a, 0xcc, 0x24, 0xbe, 0x61, 0x75, 0x79, 0xa5, 0xe8, 0x1e, 0xe8, 0x68,
	0x43, 0x00, 0xca, 0xa7, 0x5d, 0xb3, 0x75, 0xfc, 0x75, 0xe3, 0x3d, 0x52, 0x01, 0xfd, 0x55, 0xeb,
	0xb8, 0xdb, 0xd0, 0x48, 0x15, 0x4a, 0x2f, 0xdb, 0x9d, 0xfd, 0x6e, 0xa3, 0x40, 0x6a, 0xb0, 0x74,
	0xd0, 0xe9, 0xb4, 0x8f, 0xf6, 0x8f, 0x1b, 0x45, 0xba, 0x03, 0x95, 0x57, 0x8e, 0xfd, 0x73, 0xd7,
	0x1e, 0x31, 0xbc, 0xcb, 0x01, 0xeb, 0xf1, 0xf0, 0x45, 0x13, 0x7f, 0x62, 0x19, 0x1c, 0x5c, 0x2a,
	0xf0, 0x25, 0xfe, 0x9b, 0xba, 0xa0, 0x63, 0xfd, 0xb2, 0x7d, 0x41, 0x1e, 0x29, 0xf8, 0xc5, 0xbd,
	0x5f, 0x55, 0xe9, 0xa3, 0xb1, 0x68, 0x64, 0x59, 0xdb, 0x2d, 0xa8, 0xf6, 0x78, 0x1b, 0xf4, 0xf7,
	0x43, 0x3e, 0xbc, 0x6a, 0xbb, 0x8d, 0xc8, 0x58, 0xe6, 0x62, 0xc6, 0x26, 0x74, 0x1f, 0xaa, 0x91,
	0x0f, 0xc4, 0xdb, 0xea, 0xf7, 0x7d, 0x16, 0x04, 0x32, 0xb4, 0x12, 0xf1, 0xce, 0x4e, 0x98, 0x6f,
	0x9f, 0xd9, 0xac, 0x2f, 0x6f, 0x66, 0x24, 0xd3, 0x1f, 0xa0, 0x7c, 0x32, 0x1c, 0x0f, 0x6c, 0x27,
	0x97, 0x35, 0x9e, 0xd0, 0x1a, 0x31, 0xd5, 0x68, 0xf8, 0x1b, 0x13, 0x54, 0x03, 0x33, 0x68, 0x16,
	0xf9, 0x94, 0x6c, 0x24, 0x9f, 0x41, 0x5e, 0x8a, 0xd8, 0x84, 0xbe, 0xd5, 0xa0, 0xa2, 0xd6, 0x73,
	0x01, 0x36, 0xa0, 0xd6, 0x67, 0x41, 0xcf, 0xb7, 0xbd, 0xd0, 0x76, 0x1d, 0x19, 0x27, 0xb9, 0x44,
	0x3e, 0x8a, 0x26, 0xb2, 0x88, 0xb5, 0x9e, 0x8d, 0xc5, 0xe7, 0xad, 0x1a, 0xc0, 0x38, 0x7f, 0xf8,
	0x83, 0x1f, 0x70, 0xfe, 0x54, 0x35, 0xa5, 0x84, 0xc8, 0x08, 0x92, 0x25, 0x26, 0x7b, 0xd5, 0x54,
	0x22, 0xfd, 0x4d, 0x83, 0xe5, 0x94, 0xaf, 0x69, 0x28, 0xa0, 0x52, 0xa1, 0xc0, 0x0f, 0xf2, 0x31,
	0x8e, 0xe2, 0x33, 0x6b, 0x3c, 0x0c, 0x79, 0x03, 0xca, 0x4a, 0x65, 0xc6, 0x79, 0xca, 0x24, 0x7b,
	0x56, 0x3d, 0x77, 0x56, 0xfa, 0xbb, 0x06, 0x10, 0x8f, 0x98, 0x85, 0xaa, 0xf1, 0x0c, 0xaa, 0x13,
	0xcb, 0xb7, 0xad, 0x37, 0x43, 0x5e, 0x0d, 0x4c, 0xc2, 0x50, 0x49, 0xc4, 0xae, 0x5e, 0x4b, 0x13,
	0x33, 0x36, 0x26, 0x1b, 0xa0, 0xe3, 0x4b, 0xcd, 0xf3, 0xc8, 0xbe, 0xe1, 0x5c, 0x43, 0xff, 0xd0,
	0x80, 0xe4, 0x7d, 0x44, 0x69, 0x68, 0x89, 0x34, 0x88, 0xbc, 0x9c, 0x32, 0xb5, 0xf0, 0x7f, 0x83,
	0xe8, 0x09, 0xe8, 0x98, 0x21, 0x52, 0x10, 0x6c, 0xb1, 0x40, 0x72, 0xb9, 0x7a, 0x8a, 0x88, 0x09,
	0x15, 0xf2, 0x06, 0x1d, 0xe5, 0x1c, 0x90, 0x06, 0x54, 0x3c, 0xde, 0xf0, 0xd1, 0x2b, 0x19, 0xc9,
	0x19, 0x86, 0x50, 0xcc, 0x31, 0x84, 0x9d, 0xa8, 0x1f, 0x05, 0x41, 0x6f, 0x26, 0x23, 0x4f, 0xe3,
	0x04, 0x98, 0xea, 0x1b, 0xdb, 0xe9, 0x2b, 0x4a, 0x11, 0xa5, 0x7a, 0x60, 0x3b, 0x7d, 0x53, 0xa8,
	0xae, 0x90, 0x37, 0x7c, 0x07, 0x3a, 0x3a, 0xc6, 0x73, 0x9c, 0xf9, 0xee, 0xa8, 0xc3, 0xbb, 0x5c,
	0x91, 0xaa, 0x78, 0x05, 0x2f, 0x4a, 0xe8, 0x62, 0xce, 0x8a, 0x27, 0x08, 0x09, 0x2f, 0x4a, 0xe8,
	0xb6, 0xf0, 0xd2, 0xc8, 0xc3, 0x2b, 0x91, 0xfe, 0xa9, 0x41, 0x59, 0xb4, 0xc3, 0x42, 0x9d, 0x99,
	0x25, 0x2b, 0xc5, 0xb9, 0x64, 0x45, 0x4f, 0x92, 0x15, 0xb2, 0x97, 0xec, 0x6a, 0x01, 0xdb, 0x8d,
	0x74, 0x57, 0x4f, 0xe9, 0x68, 0xfa, 0x2b, 0xac, 0xa4, 0x95, 0x98, 0xd7, 0x71, 0xa2, 0x55, 0xf1,
	0xf7, 0x42, 0x48, 0x92, 0xa7, 0xb0, 0xec, 0xf9, 0x6c, 0x62, 0xbb, 0xe3, 0x60, 0x4e, 0xf3, 0xa6,
	0x6d, 0x68, 0x0b, 0x4a, 0x9c, 0x67, 0xe4, 0xe0, 0x49, 0x3d, 0x49, 0x55, 0x15, 0xc3, 0x80, 0x4a,
	0x68, 0xf9, 0x03, 0x96, 0xf8, 0x0e, 0x54, 0xf2, 0xee, 0x5f, 0x4b, 0x50, 0x3a, 0x9a, 0xd8, 0x6e,
	0x48, 0x5e, 0x88, 0xe9, 0x89, 0xaf, 0x34, 0xb9, 0x39, 0xe3, 0x63, 0xd0, 0x68, 0xe6, 0x15, 0xe2,
	0x39, 0xdd, 0xd4, 0x08, 0xb6, 0x56, 0xfc, 0x75, 0x42, 0x8c, 0xa9, 0x9f, 0x2c, 0xc2, 0xcd, 0xfb,
	0x73, 0x3e, 0x67, 0x76, 0x34, 0x72, 0x04, 0x10, 0x53, 0x7a, 0x72, 0x2b, 0xa6, 0xc6, 0x99, 0x6f,
	0x07, 0xc3, 0x98, 0xa6, 0x4a, 0xbb, 0x51, 0x6c, 0x3a, 0xe9, 0x26, 0xf3, 0x5d, 0x90, 0x74, 0x93,
	0x25, 0xdf, 0x3b, 0x1a, 0xf9, 0x12, 0xaa, 0x11, 0xa1, 0x25, 0x11, 0x00, 0x59, 0xce, 0x6c, 0xdc,
	0x9a, 0xa2, 0x91, 0x54, 0xc3, 0x84, 0x6b, 0x19, 0x4e, 0x4a, 0xee, 0x2a, 0xeb, 0xe9, 0xd4, 0xd7,
	0xb8, 0x37, 0x53, 0x2f, 0x7d, 0x3e, 0x96, 0xef, 0xff, 0xf5, 0xe4, 0x03, 0xaf, 0x76, 0xd7, 0x93,
	0x8b, 0xe4, 0x53, 0xc1, 0x73, 0x25, 0x91, 0x8d, 0x0b, 0x93, 0x67, 0xb7, 0xb3, 0x36, 0x8a, 0x6e,
	0xcb, 0x6c, 0x4c, 0x52, 0xdd, 0xcc, 0xc6, 0x0f, 0xa1, 0xc4, 0xc9, 0x29, 0x59, 0x53, 0xcb, 0x49,
	0xae, 0x6a, 0x44, 0xdd, 0x2d, 0xfc, 0x7e, 0x02, 0x10, 0x13, 0xd2, 0xb8, 0x4e, 0x39, 0x92, 0x9a,
	0xdd, 0xd7, 0x87, 0xf5, 0xa9, 0x9c, 0x92, 0x3c, 0x88, 0xc1, 0x9b, 0x4d, 0x54, 0x8d, 0x0f, 0xde,
	0x61, 0x25, 0x81, 0x6e, 0xc3, 0x72, 0x4a, 0x49, 0x6e, 0xc7, 0x85, 0xce, 0xf3, 0x53, 0xe3, 0xce,
	0x0c, 0xad, 0xf4, 0xb6, 0x1d, 0x8d, 0xb6, 0xf5, 0xf4, 0x9c, 0x51, 0xfb, 0x57, 0xd2, 0xcb, 0xe4,
	0xf3, 0xd4, 0x4b, 0x7d, 0x2b, 0xff, 0xe4, 0xaa, 0x8d, 0x24, 0xaf, 0x3a, 0x28, 0x7f, 0xaf, 0x0f,
	0x2c, 0xcf, 0x7e, 0x53, 0xe6, 0xff, 0x60, 0x7a, 0xfa, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5a,
	0x00, 0xf6, 0x74, 0x77, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EviotClient is the client API for Eviot service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EviotClient interface {
	// sending messages from the pipe
	PipeSend(ctx context.Context, opts ...grpc.CallOption) (Eviot_PipeSendClient, error)
	// receive messages from the pipe
	PipeReceive(ctx context.Context, in *PipeReceiveRequest, opts ...grpc.CallOption) (Eviot_PipeReceiveClient, error)
	// do need it?
	OnInitFlow(ctx context.Context, in *OnInitFlowRequest, opts ...grpc.CallOption) (Eviot_OnInitFlowClient, error)
	OnPipeInit(ctx context.Context, in *OnPipeInitRequest, opts ...grpc.CallOption) (Eviot_OnPipeInitClient, error)
	// device registration in the system
	RegDevice(ctx context.Context, in *RegDeviceRequest, opts ...grpc.CallOption) (*RegDeviceResponse, error)
	// device authorization in the system
	// rpc AuthDevice(AuthDeviceRequest) returns (AuthDeviceResponse);
	// set device status: online or offline
	SetDeviceOnline(ctx context.Context, in *SetDeviceOnlineRequest, opts ...grpc.CallOption) (*SetDeviceOnlineResponse, error)
	User(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*User, error)
	UserByEmail(ctx context.Context, in *UserByEmailRequest, opts ...grpc.CallOption) (*User, error)
	UserByToken(ctx context.Context, in *UserByTokenRequest, opts ...grpc.CallOption) (*User, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Token, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*Token, error)
	SendResetPasswordLink(ctx context.Context, in *SendResetPasswordLinkRequest, opts ...grpc.CallOption) (*SendResetPasswordLinkResponse, error)
	ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*ResetPasswordResponse, error)
	Device(ctx context.Context, in *DeviceRequest, opts ...grpc.CallOption) (*Device, error)
	DeviceType(ctx context.Context, in *DeviceTypeRequest, opts ...grpc.CallOption) (*DeviceType, error)
}

type eviotClient struct {
	cc *grpc.ClientConn
}

func NewEviotClient(cc *grpc.ClientConn) EviotClient {
	return &eviotClient{cc}
}

func (c *eviotClient) PipeSend(ctx context.Context, opts ...grpc.CallOption) (Eviot_PipeSendClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Eviot_serviceDesc.Streams[0], "/schema.Eviot/PipeSend", opts...)
	if err != nil {
		return nil, err
	}
	x := &eviotPipeSendClient{stream}
	return x, nil
}

type Eviot_PipeSendClient interface {
	Send(*PipeSendRequest) error
	CloseAndRecv() (*PipeSendResponse, error)
	grpc.ClientStream
}

type eviotPipeSendClient struct {
	grpc.ClientStream
}

func (x *eviotPipeSendClient) Send(m *PipeSendRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *eviotPipeSendClient) CloseAndRecv() (*PipeSendResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PipeSendResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *eviotClient) PipeReceive(ctx context.Context, in *PipeReceiveRequest, opts ...grpc.CallOption) (Eviot_PipeReceiveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Eviot_serviceDesc.Streams[1], "/schema.Eviot/PipeReceive", opts...)
	if err != nil {
		return nil, err
	}
	x := &eviotPipeReceiveClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Eviot_PipeReceiveClient interface {
	Recv() (*PipeReceiveResponse, error)
	grpc.ClientStream
}

type eviotPipeReceiveClient struct {
	grpc.ClientStream
}

func (x *eviotPipeReceiveClient) Recv() (*PipeReceiveResponse, error) {
	m := new(PipeReceiveResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *eviotClient) OnInitFlow(ctx context.Context, in *OnInitFlowRequest, opts ...grpc.CallOption) (Eviot_OnInitFlowClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Eviot_serviceDesc.Streams[2], "/schema.Eviot/OnInitFlow", opts...)
	if err != nil {
		return nil, err
	}
	x := &eviotOnInitFlowClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Eviot_OnInitFlowClient interface {
	Recv() (*OnInitFlowResponse, error)
	grpc.ClientStream
}

type eviotOnInitFlowClient struct {
	grpc.ClientStream
}

func (x *eviotOnInitFlowClient) Recv() (*OnInitFlowResponse, error) {
	m := new(OnInitFlowResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *eviotClient) OnPipeInit(ctx context.Context, in *OnPipeInitRequest, opts ...grpc.CallOption) (Eviot_OnPipeInitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Eviot_serviceDesc.Streams[3], "/schema.Eviot/OnPipeInit", opts...)
	if err != nil {
		return nil, err
	}
	x := &eviotOnPipeInitClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Eviot_OnPipeInitClient interface {
	Recv() (*OnPipeInitResponse, error)
	grpc.ClientStream
}

type eviotOnPipeInitClient struct {
	grpc.ClientStream
}

func (x *eviotOnPipeInitClient) Recv() (*OnPipeInitResponse, error) {
	m := new(OnPipeInitResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *eviotClient) RegDevice(ctx context.Context, in *RegDeviceRequest, opts ...grpc.CallOption) (*RegDeviceResponse, error) {
	out := new(RegDeviceResponse)
	err := c.cc.Invoke(ctx, "/schema.Eviot/RegDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotClient) SetDeviceOnline(ctx context.Context, in *SetDeviceOnlineRequest, opts ...grpc.CallOption) (*SetDeviceOnlineResponse, error) {
	out := new(SetDeviceOnlineResponse)
	err := c.cc.Invoke(ctx, "/schema.Eviot/SetDeviceOnline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotClient) User(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/schema.Eviot/User", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotClient) UserByEmail(ctx context.Context, in *UserByEmailRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/schema.Eviot/UserByEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotClient) UserByToken(ctx context.Context, in *UserByTokenRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/schema.Eviot/UserByToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/schema.Eviot/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/schema.Eviot/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotClient) SendResetPasswordLink(ctx context.Context, in *SendResetPasswordLinkRequest, opts ...grpc.CallOption) (*SendResetPasswordLinkResponse, error) {
	out := new(SendResetPasswordLinkResponse)
	err := c.cc.Invoke(ctx, "/schema.Eviot/SendResetPasswordLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotClient) ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*ResetPasswordResponse, error) {
	out := new(ResetPasswordResponse)
	err := c.cc.Invoke(ctx, "/schema.Eviot/ResetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotClient) Device(ctx context.Context, in *DeviceRequest, opts ...grpc.CallOption) (*Device, error) {
	out := new(Device)
	err := c.cc.Invoke(ctx, "/schema.Eviot/Device", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotClient) DeviceType(ctx context.Context, in *DeviceTypeRequest, opts ...grpc.CallOption) (*DeviceType, error) {
	out := new(DeviceType)
	err := c.cc.Invoke(ctx, "/schema.Eviot/DeviceType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EviotServer is the server API for Eviot service.
type EviotServer interface {
	// sending messages from the pipe
	PipeSend(Eviot_PipeSendServer) error
	// receive messages from the pipe
	PipeReceive(*PipeReceiveRequest, Eviot_PipeReceiveServer) error
	// do need it?
	OnInitFlow(*OnInitFlowRequest, Eviot_OnInitFlowServer) error
	OnPipeInit(*OnPipeInitRequest, Eviot_OnPipeInitServer) error
	// device registration in the system
	RegDevice(context.Context, *RegDeviceRequest) (*RegDeviceResponse, error)
	// device authorization in the system
	// rpc AuthDevice(AuthDeviceRequest) returns (AuthDeviceResponse);
	// set device status: online or offline
	SetDeviceOnline(context.Context, *SetDeviceOnlineRequest) (*SetDeviceOnlineResponse, error)
	User(context.Context, *UserRequest) (*User, error)
	UserByEmail(context.Context, *UserByEmailRequest) (*User, error)
	UserByToken(context.Context, *UserByTokenRequest) (*User, error)
	Login(context.Context, *LoginRequest) (*Token, error)
	CreateUser(context.Context, *CreateUserRequest) (*Token, error)
	SendResetPasswordLink(context.Context, *SendResetPasswordLinkRequest) (*SendResetPasswordLinkResponse, error)
	ResetPassword(context.Context, *ResetPasswordRequest) (*ResetPasswordResponse, error)
	Device(context.Context, *DeviceRequest) (*Device, error)
	DeviceType(context.Context, *DeviceTypeRequest) (*DeviceType, error)
}

// UnimplementedEviotServer can be embedded to have forward compatible implementations.
type UnimplementedEviotServer struct {
}

func (*UnimplementedEviotServer) PipeSend(srv Eviot_PipeSendServer) error {
	return status.Errorf(codes.Unimplemented, "method PipeSend not implemented")
}
func (*UnimplementedEviotServer) PipeReceive(req *PipeReceiveRequest, srv Eviot_PipeReceiveServer) error {
	return status.Errorf(codes.Unimplemented, "method PipeReceive not implemented")
}
func (*UnimplementedEviotServer) OnInitFlow(req *OnInitFlowRequest, srv Eviot_OnInitFlowServer) error {
	return status.Errorf(codes.Unimplemented, "method OnInitFlow not implemented")
}
func (*UnimplementedEviotServer) OnPipeInit(req *OnPipeInitRequest, srv Eviot_OnPipeInitServer) error {
	return status.Errorf(codes.Unimplemented, "method OnPipeInit not implemented")
}
func (*UnimplementedEviotServer) RegDevice(ctx context.Context, req *RegDeviceRequest) (*RegDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegDevice not implemented")
}
func (*UnimplementedEviotServer) SetDeviceOnline(ctx context.Context, req *SetDeviceOnlineRequest) (*SetDeviceOnlineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDeviceOnline not implemented")
}
func (*UnimplementedEviotServer) User(ctx context.Context, req *UserRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method User not implemented")
}
func (*UnimplementedEviotServer) UserByEmail(ctx context.Context, req *UserByEmailRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserByEmail not implemented")
}
func (*UnimplementedEviotServer) UserByToken(ctx context.Context, req *UserByTokenRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserByToken not implemented")
}
func (*UnimplementedEviotServer) Login(ctx context.Context, req *LoginRequest) (*Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedEviotServer) CreateUser(ctx context.Context, req *CreateUserRequest) (*Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedEviotServer) SendResetPasswordLink(ctx context.Context, req *SendResetPasswordLinkRequest) (*SendResetPasswordLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendResetPasswordLink not implemented")
}
func (*UnimplementedEviotServer) ResetPassword(ctx context.Context, req *ResetPasswordRequest) (*ResetPasswordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetPassword not implemented")
}
func (*UnimplementedEviotServer) Device(ctx context.Context, req *DeviceRequest) (*Device, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Device not implemented")
}
func (*UnimplementedEviotServer) DeviceType(ctx context.Context, req *DeviceTypeRequest) (*DeviceType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeviceType not implemented")
}

func RegisterEviotServer(s *grpc.Server, srv EviotServer) {
	s.RegisterService(&_Eviot_serviceDesc, srv)
}

func _Eviot_PipeSend_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(EviotServer).PipeSend(&eviotPipeSendServer{stream})
}

type Eviot_PipeSendServer interface {
	SendAndClose(*PipeSendResponse) error
	Recv() (*PipeSendRequest, error)
	grpc.ServerStream
}

type eviotPipeSendServer struct {
	grpc.ServerStream
}

func (x *eviotPipeSendServer) SendAndClose(m *PipeSendResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *eviotPipeSendServer) Recv() (*PipeSendRequest, error) {
	m := new(PipeSendRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Eviot_PipeReceive_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PipeReceiveRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EviotServer).PipeReceive(m, &eviotPipeReceiveServer{stream})
}

type Eviot_PipeReceiveServer interface {
	Send(*PipeReceiveResponse) error
	grpc.ServerStream
}

type eviotPipeReceiveServer struct {
	grpc.ServerStream
}

func (x *eviotPipeReceiveServer) Send(m *PipeReceiveResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Eviot_OnInitFlow_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OnInitFlowRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EviotServer).OnInitFlow(m, &eviotOnInitFlowServer{stream})
}

type Eviot_OnInitFlowServer interface {
	Send(*OnInitFlowResponse) error
	grpc.ServerStream
}

type eviotOnInitFlowServer struct {
	grpc.ServerStream
}

func (x *eviotOnInitFlowServer) Send(m *OnInitFlowResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Eviot_OnPipeInit_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OnPipeInitRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EviotServer).OnPipeInit(m, &eviotOnPipeInitServer{stream})
}

type Eviot_OnPipeInitServer interface {
	Send(*OnPipeInitResponse) error
	grpc.ServerStream
}

type eviotOnPipeInitServer struct {
	grpc.ServerStream
}

func (x *eviotOnPipeInitServer) Send(m *OnPipeInitResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Eviot_RegDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServer).RegDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.Eviot/RegDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServer).RegDevice(ctx, req.(*RegDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Eviot_SetDeviceOnline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDeviceOnlineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServer).SetDeviceOnline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.Eviot/SetDeviceOnline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServer).SetDeviceOnline(ctx, req.(*SetDeviceOnlineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Eviot_User_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServer).User(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.Eviot/User",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServer).User(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Eviot_UserByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserByEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServer).UserByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.Eviot/UserByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServer).UserByEmail(ctx, req.(*UserByEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Eviot_UserByToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserByTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServer).UserByToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.Eviot/UserByToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServer).UserByToken(ctx, req.(*UserByTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Eviot_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.Eviot/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Eviot_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.Eviot/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Eviot_SendResetPasswordLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendResetPasswordLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServer).SendResetPasswordLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.Eviot/SendResetPasswordLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServer).SendResetPasswordLink(ctx, req.(*SendResetPasswordLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Eviot_ResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServer).ResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.Eviot/ResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServer).ResetPassword(ctx, req.(*ResetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Eviot_Device_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServer).Device(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.Eviot/Device",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServer).Device(ctx, req.(*DeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Eviot_DeviceType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeviceTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServer).DeviceType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.Eviot/DeviceType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServer).DeviceType(ctx, req.(*DeviceTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Eviot_serviceDesc = grpc.ServiceDesc{
	ServiceName: "schema.Eviot",
	HandlerType: (*EviotServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegDevice",
			Handler:    _Eviot_RegDevice_Handler,
		},
		{
			MethodName: "SetDeviceOnline",
			Handler:    _Eviot_SetDeviceOnline_Handler,
		},
		{
			MethodName: "User",
			Handler:    _Eviot_User_Handler,
		},
		{
			MethodName: "UserByEmail",
			Handler:    _Eviot_UserByEmail_Handler,
		},
		{
			MethodName: "UserByToken",
			Handler:    _Eviot_UserByToken_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _Eviot_Login_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _Eviot_CreateUser_Handler,
		},
		{
			MethodName: "SendResetPasswordLink",
			Handler:    _Eviot_SendResetPasswordLink_Handler,
		},
		{
			MethodName: "ResetPassword",
			Handler:    _Eviot_ResetPassword_Handler,
		},
		{
			MethodName: "Device",
			Handler:    _Eviot_Device_Handler,
		},
		{
			MethodName: "DeviceType",
			Handler:    _Eviot_DeviceType_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PipeSend",
			Handler:       _Eviot_PipeSend_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "PipeReceive",
			Handler:       _Eviot_PipeReceive_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "OnInitFlow",
			Handler:       _Eviot_OnInitFlow_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "OnPipeInit",
			Handler:       _Eviot_OnPipeInit_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "schema/schema.proto",
}
