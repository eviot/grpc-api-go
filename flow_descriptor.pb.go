// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flow_descriptor.proto

package gapi

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FlowUIVariableType int32

const (
	FlowUIVariableType_UNDEFINED FlowUIVariableType = 0
	FlowUIVariableType_BUTTON    FlowUIVariableType = 1
)

var FlowUIVariableType_name = map[int32]string{
	0: "UNDEFINED",
	1: "BUTTON",
}

var FlowUIVariableType_value = map[string]int32{
	"UNDEFINED": 0,
	"BUTTON":    1,
}

func (x FlowUIVariableType) String() string {
	return proto.EnumName(FlowUIVariableType_name, int32(x))
}

func (FlowUIVariableType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1e0f8e9197cd596d, []int{0}
}

type FlowDescriptor struct {
	Id                   string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                      `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Variables            []*FlowVariableDescriptor   `protobuf:"bytes,2,rep,name=variables,proto3" json:"variables,omitempty"`
	UiVariables          []*FlowUIVariableDescriptor `protobuf:"bytes,8,rep,name=ui_variables,json=uiVariables,proto3" json:"ui_variables,omitempty"`
	Pipes                []*Pipe                     `protobuf:"bytes,3,rep,name=pipes,proto3" json:"pipes,omitempty"`
	UserId               string                      `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt            *UnixTime                   `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *UnixTime                   `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *FlowDescriptor) Reset()         { *m = FlowDescriptor{} }
func (m *FlowDescriptor) String() string { return proto.CompactTextString(m) }
func (*FlowDescriptor) ProtoMessage()    {}
func (*FlowDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e0f8e9197cd596d, []int{0}
}

func (m *FlowDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowDescriptor.Unmarshal(m, b)
}
func (m *FlowDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowDescriptor.Marshal(b, m, deterministic)
}
func (m *FlowDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowDescriptor.Merge(m, src)
}
func (m *FlowDescriptor) XXX_Size() int {
	return xxx_messageInfo_FlowDescriptor.Size(m)
}
func (m *FlowDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_FlowDescriptor proto.InternalMessageInfo

func (m *FlowDescriptor) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FlowDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FlowDescriptor) GetVariables() []*FlowVariableDescriptor {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *FlowDescriptor) GetUiVariables() []*FlowUIVariableDescriptor {
	if m != nil {
		return m.UiVariables
	}
	return nil
}

func (m *FlowDescriptor) GetPipes() []*Pipe {
	if m != nil {
		return m.Pipes
	}
	return nil
}

func (m *FlowDescriptor) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *FlowDescriptor) GetCreatedAt() *UnixTime {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *FlowDescriptor) GetUpdatedAt() *UnixTime {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type FlowVariableDescriptor struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 VarType  `protobuf:"varint,2,opt,name=type,proto3,enum=schema.VarType" json:"type,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DefaultValue         *Any     `protobuf:"bytes,4,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlowVariableDescriptor) Reset()         { *m = FlowVariableDescriptor{} }
func (m *FlowVariableDescriptor) String() string { return proto.CompactTextString(m) }
func (*FlowVariableDescriptor) ProtoMessage()    {}
func (*FlowVariableDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e0f8e9197cd596d, []int{1}
}

func (m *FlowVariableDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowVariableDescriptor.Unmarshal(m, b)
}
func (m *FlowVariableDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowVariableDescriptor.Marshal(b, m, deterministic)
}
func (m *FlowVariableDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowVariableDescriptor.Merge(m, src)
}
func (m *FlowVariableDescriptor) XXX_Size() int {
	return xxx_messageInfo_FlowVariableDescriptor.Size(m)
}
func (m *FlowVariableDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowVariableDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_FlowVariableDescriptor proto.InternalMessageInfo

func (m *FlowVariableDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FlowVariableDescriptor) GetType() VarType {
	if m != nil {
		return m.Type
	}
	return VarType_INT
}

func (m *FlowVariableDescriptor) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *FlowVariableDescriptor) GetDefaultValue() *Any {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

type FlowUIVariableDescriptor struct {
	Name                 string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 FlowUIVariableType `protobuf:"varint,3,opt,name=type,proto3,enum=schema.FlowUIVariableType" json:"type,omitempty"`
	Tags                 []string           `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	Value                *Any               `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FlowUIVariableDescriptor) Reset()         { *m = FlowUIVariableDescriptor{} }
func (m *FlowUIVariableDescriptor) String() string { return proto.CompactTextString(m) }
func (*FlowUIVariableDescriptor) ProtoMessage()    {}
func (*FlowUIVariableDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e0f8e9197cd596d, []int{2}
}

func (m *FlowUIVariableDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowUIVariableDescriptor.Unmarshal(m, b)
}
func (m *FlowUIVariableDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowUIVariableDescriptor.Marshal(b, m, deterministic)
}
func (m *FlowUIVariableDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowUIVariableDescriptor.Merge(m, src)
}
func (m *FlowUIVariableDescriptor) XXX_Size() int {
	return xxx_messageInfo_FlowUIVariableDescriptor.Size(m)
}
func (m *FlowUIVariableDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowUIVariableDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_FlowUIVariableDescriptor proto.InternalMessageInfo

func (m *FlowUIVariableDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FlowUIVariableDescriptor) GetType() FlowUIVariableType {
	if m != nil {
		return m.Type
	}
	return FlowUIVariableType_UNDEFINED
}

func (m *FlowUIVariableDescriptor) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *FlowUIVariableDescriptor) GetValue() *Any {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterEnum("schema.FlowUIVariableType", FlowUIVariableType_name, FlowUIVariableType_value)
	proto.RegisterType((*FlowDescriptor)(nil), "schema.FlowDescriptor")
	proto.RegisterType((*FlowVariableDescriptor)(nil), "schema.FlowVariableDescriptor")
	proto.RegisterType((*FlowUIVariableDescriptor)(nil), "schema.FlowUIVariableDescriptor")
}

func init() { proto.RegisterFile("flow_descriptor.proto", fileDescriptor_1e0f8e9197cd596d) }

var fileDescriptor_1e0f8e9197cd596d = []byte{
	// 435 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x8e, 0xda, 0x30,
	0x10, 0x86, 0xeb, 0x10, 0xb2, 0xcd, 0x84, 0x65, 0x91, 0xa5, 0xb6, 0x16, 0x87, 0x2a, 0xa5, 0x17,
	0xd4, 0x03, 0x5b, 0xd1, 0x6b, 0x2f, 0x6c, 0xd9, 0x95, 0xb8, 0xd0, 0x2a, 0x02, 0x0e, 0xbd, 0x44,
	0x5e, 0xec, 0xdd, 0x5a, 0x0a, 0x89, 0xe5, 0x38, 0x2c, 0x3c, 0x48, 0x1f, 0xa1, 0xaf, 0xd4, 0xe7,
	0xa9, 0xe2, 0xc4, 0x10, 0xa9, 0xe1, 0x36, 0xf6, 0x3f, 0xff, 0xa7, 0xdf, 0xe3, 0x81, 0x37, 0x4f,
	0x49, 0xf6, 0x12, 0x33, 0x9e, 0x6f, 0x95, 0x90, 0x3a, 0x53, 0x13, 0xa9, 0x32, 0x9d, 0x61, 0x2f,
	0xdf, 0xfe, 0xe2, 0x3b, 0x3a, 0xbc, 0x29, 0x52, 0x71, 0x88, 0xb5, 0xd8, 0xf1, 0x4a, 0x18, 0x82,
	0x14, 0xd2, 0xd6, 0x3e, 0x4d, 0x8f, 0x75, 0xd9, 0xdf, 0x53, 0x15, 0xeb, 0xa3, 0x95, 0x46, 0x7f,
	0x1d, 0xe8, 0x3f, 0x24, 0xd9, 0xcb, 0xfc, 0x04, 0xc6, 0x7d, 0x70, 0x04, 0x23, 0x28, 0x44, 0x63,
	0x3f, 0x72, 0x04, 0xc3, 0x18, 0xdc, 0x94, 0xee, 0x38, 0xb9, 0x32, 0x37, 0xa6, 0xc6, 0x5f, 0xc1,
	0xdf, 0x53, 0x25, 0xe8, 0x63, 0xc2, 0x73, 0xe2, 0x84, 0x9d, 0x71, 0x30, 0x7d, 0x3f, 0xa9, 0xa2,
	0x4c, 0x4a, 0xdc, 0xa6, 0x16, 0xcf, 0xd8, 0xe8, 0x6c, 0xc0, 0xdf, 0xa0, 0x57, 0x88, 0xf8, 0x0c,
	0x78, 0x6d, 0x00, 0x61, 0x13, 0xb0, 0x5e, 0xb4, 0x20, 0x82, 0x42, 0x6c, 0x4e, 0x90, 0x11, 0x74,
	0xcb, 0x27, 0xe6, 0xa4, 0x63, 0xdc, 0x3d, 0xeb, 0xfe, 0x21, 0x24, 0x8f, 0x2a, 0x09, 0xbf, 0x83,
	0xab, 0x22, 0xe7, 0x2a, 0x16, 0x8c, 0xb8, 0x26, 0xbd, 0x57, 0x1e, 0x17, 0x0c, 0xdf, 0x02, 0x6c,
	0x15, 0xa7, 0x9a, 0xb3, 0x98, 0x6a, 0xd2, 0x0d, 0xd1, 0x38, 0x98, 0x0e, 0x2c, 0x61, 0x9d, 0x8a,
	0xc3, 0x4a, 0xec, 0x78, 0xe4, 0xd7, 0x3d, 0x33, 0x5d, 0x1a, 0x0a, 0xc9, 0xac, 0xc1, 0xbb, 0x64,
	0xa8, 0x7b, 0x66, 0x7a, 0xf4, 0x07, 0xc1, 0xdb, 0xf6, 0x49, 0x9c, 0x06, 0x8a, 0x1a, 0x03, 0xfd,
	0x08, 0x6e, 0xf9, 0x2b, 0xc4, 0x09, 0xd1, 0xb8, 0x3f, 0xbd, 0xb1, 0xe4, 0x0d, 0x55, 0xab, 0xa3,
	0xe4, 0x91, 0x11, 0x71, 0x08, 0x81, 0x5d, 0x00, 0x91, 0xa5, 0xa4, 0x63, 0xfc, 0xcd, 0x2b, 0xfc,
	0x19, 0xae, 0x19, 0x7f, 0xa2, 0x45, 0xa2, 0xe3, 0x3d, 0x4d, 0x0a, 0x6e, 0x9e, 0x1d, 0x4c, 0x03,
	0xcb, 0x9b, 0xa5, 0xc7, 0xa8, 0x57, 0x77, 0x6c, 0xca, 0x86, 0xd1, 0x6f, 0x04, 0xe4, 0xd2, 0xc0,
	0x5b, 0x93, 0x4e, 0xea, 0xa4, 0x1d, 0x93, 0x74, 0xd8, 0xfe, 0x69, 0x8d, 0xd0, 0x18, 0x5c, 0x4d,
	0x9f, 0xab, 0x2d, 0xf1, 0x23, 0x53, 0xe3, 0x0f, 0xd0, 0xbd, 0x18, 0xaf, 0x52, 0x3e, 0xdd, 0x02,
	0xfe, 0x1f, 0x89, 0xaf, 0xc1, 0x5f, 0x2f, 0xe7, 0xf7, 0x0f, 0x8b, 0xe5, 0xfd, 0x7c, 0xf0, 0x0a,
	0x03, 0x78, 0x77, 0xeb, 0xd5, 0xea, 0xfb, 0x72, 0x80, 0xee, 0xbc, 0x9f, 0xee, 0x33, 0x95, 0xe2,
	0xd1, 0x33, 0x8b, 0xfd, 0xe5, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xea, 0x51, 0x20, 0xf2, 0x31,
	0x03, 0x00, 0x00,
}
