// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugin_service.proto

package gapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetPluginReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPluginReq) Reset()         { *m = GetPluginReq{} }
func (m *GetPluginReq) String() string { return proto.CompactTextString(m) }
func (*GetPluginReq) ProtoMessage()    {}
func (*GetPluginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b792d6030e82303, []int{0}
}

func (m *GetPluginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPluginReq.Unmarshal(m, b)
}
func (m *GetPluginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPluginReq.Marshal(b, m, deterministic)
}
func (m *GetPluginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPluginReq.Merge(m, src)
}
func (m *GetPluginReq) XXX_Size() int {
	return xxx_messageInfo_GetPluginReq.Size(m)
}
func (m *GetPluginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPluginReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPluginReq proto.InternalMessageInfo

func (m *GetPluginReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AddPluginReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PluginUri            string   `protobuf:"bytes,2,opt,name=plugin_uri,json=pluginUri,proto3" json:"plugin_uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPluginReq) Reset()         { *m = AddPluginReq{} }
func (m *AddPluginReq) String() string { return proto.CompactTextString(m) }
func (*AddPluginReq) ProtoMessage()    {}
func (*AddPluginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b792d6030e82303, []int{1}
}

func (m *AddPluginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPluginReq.Unmarshal(m, b)
}
func (m *AddPluginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPluginReq.Marshal(b, m, deterministic)
}
func (m *AddPluginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPluginReq.Merge(m, src)
}
func (m *AddPluginReq) XXX_Size() int {
	return xxx_messageInfo_AddPluginReq.Size(m)
}
func (m *AddPluginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPluginReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddPluginReq proto.InternalMessageInfo

func (m *AddPluginReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddPluginReq) GetPluginUri() string {
	if m != nil {
		return m.PluginUri
	}
	return ""
}

type AddPluginRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPluginRes) Reset()         { *m = AddPluginRes{} }
func (m *AddPluginRes) String() string { return proto.CompactTextString(m) }
func (*AddPluginRes) ProtoMessage()    {}
func (*AddPluginRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b792d6030e82303, []int{2}
}

func (m *AddPluginRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPluginRes.Unmarshal(m, b)
}
func (m *AddPluginRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPluginRes.Marshal(b, m, deterministic)
}
func (m *AddPluginRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPluginRes.Merge(m, src)
}
func (m *AddPluginRes) XXX_Size() int {
	return xxx_messageInfo_AddPluginRes.Size(m)
}
func (m *AddPluginRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPluginRes.DiscardUnknown(m)
}

var xxx_messageInfo_AddPluginRes proto.InternalMessageInfo

func (m *AddPluginRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AddPluginRes) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UpdatePluginReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PluginUri            string   `protobuf:"bytes,3,opt,name=plugin_uri,json=pluginUri,proto3" json:"plugin_uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePluginReq) Reset()         { *m = UpdatePluginReq{} }
func (m *UpdatePluginReq) String() string { return proto.CompactTextString(m) }
func (*UpdatePluginReq) ProtoMessage()    {}
func (*UpdatePluginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b792d6030e82303, []int{3}
}

func (m *UpdatePluginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePluginReq.Unmarshal(m, b)
}
func (m *UpdatePluginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePluginReq.Marshal(b, m, deterministic)
}
func (m *UpdatePluginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePluginReq.Merge(m, src)
}
func (m *UpdatePluginReq) XXX_Size() int {
	return xxx_messageInfo_UpdatePluginReq.Size(m)
}
func (m *UpdatePluginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePluginReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePluginReq proto.InternalMessageInfo

func (m *UpdatePluginReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdatePluginReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdatePluginReq) GetPluginUri() string {
	if m != nil {
		return m.PluginUri
	}
	return ""
}

type UpdatePluginRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePluginRes) Reset()         { *m = UpdatePluginRes{} }
func (m *UpdatePluginRes) String() string { return proto.CompactTextString(m) }
func (*UpdatePluginRes) ProtoMessage()    {}
func (*UpdatePluginRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b792d6030e82303, []int{4}
}

func (m *UpdatePluginRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePluginRes.Unmarshal(m, b)
}
func (m *UpdatePluginRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePluginRes.Marshal(b, m, deterministic)
}
func (m *UpdatePluginRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePluginRes.Merge(m, src)
}
func (m *UpdatePluginRes) XXX_Size() int {
	return xxx_messageInfo_UpdatePluginRes.Size(m)
}
func (m *UpdatePluginRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePluginRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePluginRes proto.InternalMessageInfo

func (m *UpdatePluginRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type RemovePluginReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePluginReq) Reset()         { *m = RemovePluginReq{} }
func (m *RemovePluginReq) String() string { return proto.CompactTextString(m) }
func (*RemovePluginReq) ProtoMessage()    {}
func (*RemovePluginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b792d6030e82303, []int{5}
}

func (m *RemovePluginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePluginReq.Unmarshal(m, b)
}
func (m *RemovePluginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePluginReq.Marshal(b, m, deterministic)
}
func (m *RemovePluginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePluginReq.Merge(m, src)
}
func (m *RemovePluginReq) XXX_Size() int {
	return xxx_messageInfo_RemovePluginReq.Size(m)
}
func (m *RemovePluginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePluginReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePluginReq proto.InternalMessageInfo

func (m *RemovePluginReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemovePluginRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePluginRes) Reset()         { *m = RemovePluginRes{} }
func (m *RemovePluginRes) String() string { return proto.CompactTextString(m) }
func (*RemovePluginRes) ProtoMessage()    {}
func (*RemovePluginRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b792d6030e82303, []int{6}
}

func (m *RemovePluginRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePluginRes.Unmarshal(m, b)
}
func (m *RemovePluginRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePluginRes.Marshal(b, m, deterministic)
}
func (m *RemovePluginRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePluginRes.Merge(m, src)
}
func (m *RemovePluginRes) XXX_Size() int {
	return xxx_messageInfo_RemovePluginRes.Size(m)
}
func (m *RemovePluginRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePluginRes.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePluginRes proto.InternalMessageInfo

func (m *RemovePluginRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type ListPluginsReq struct {
	Filter               *ListPluginsReq_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Sort                 *ListPluginsReq_Sort   `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Page                 *Page                  `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListPluginsReq) Reset()         { *m = ListPluginsReq{} }
func (m *ListPluginsReq) String() string { return proto.CompactTextString(m) }
func (*ListPluginsReq) ProtoMessage()    {}
func (*ListPluginsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b792d6030e82303, []int{7}
}

func (m *ListPluginsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPluginsReq.Unmarshal(m, b)
}
func (m *ListPluginsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPluginsReq.Marshal(b, m, deterministic)
}
func (m *ListPluginsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPluginsReq.Merge(m, src)
}
func (m *ListPluginsReq) XXX_Size() int {
	return xxx_messageInfo_ListPluginsReq.Size(m)
}
func (m *ListPluginsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPluginsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListPluginsReq proto.InternalMessageInfo

func (m *ListPluginsReq) GetFilter() *ListPluginsReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ListPluginsReq) GetSort() *ListPluginsReq_Sort {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *ListPluginsReq) GetPage() *Page {
	if m != nil {
		return m.Page
	}
	return nil
}

type ListPluginsReq_Filter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPluginsReq_Filter) Reset()         { *m = ListPluginsReq_Filter{} }
func (m *ListPluginsReq_Filter) String() string { return proto.CompactTextString(m) }
func (*ListPluginsReq_Filter) ProtoMessage()    {}
func (*ListPluginsReq_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b792d6030e82303, []int{7, 0}
}

func (m *ListPluginsReq_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPluginsReq_Filter.Unmarshal(m, b)
}
func (m *ListPluginsReq_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPluginsReq_Filter.Marshal(b, m, deterministic)
}
func (m *ListPluginsReq_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPluginsReq_Filter.Merge(m, src)
}
func (m *ListPluginsReq_Filter) XXX_Size() int {
	return xxx_messageInfo_ListPluginsReq_Filter.Size(m)
}
func (m *ListPluginsReq_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPluginsReq_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListPluginsReq_Filter proto.InternalMessageInfo

func (m *ListPluginsReq_Filter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListPluginsReq_Filter) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ListPluginsReq_Sort struct {
	Name                 SortDirection `protobuf:"varint,2,opt,name=name,proto3,enum=schema.SortDirection" json:"name,omitempty"`
	CreatedAt            SortDirection `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3,enum=schema.SortDirection" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListPluginsReq_Sort) Reset()         { *m = ListPluginsReq_Sort{} }
func (m *ListPluginsReq_Sort) String() string { return proto.CompactTextString(m) }
func (*ListPluginsReq_Sort) ProtoMessage()    {}
func (*ListPluginsReq_Sort) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b792d6030e82303, []int{7, 1}
}

func (m *ListPluginsReq_Sort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPluginsReq_Sort.Unmarshal(m, b)
}
func (m *ListPluginsReq_Sort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPluginsReq_Sort.Marshal(b, m, deterministic)
}
func (m *ListPluginsReq_Sort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPluginsReq_Sort.Merge(m, src)
}
func (m *ListPluginsReq_Sort) XXX_Size() int {
	return xxx_messageInfo_ListPluginsReq_Sort.Size(m)
}
func (m *ListPluginsReq_Sort) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPluginsReq_Sort.DiscardUnknown(m)
}

var xxx_messageInfo_ListPluginsReq_Sort proto.InternalMessageInfo

func (m *ListPluginsReq_Sort) GetName() SortDirection {
	if m != nil {
		return m.Name
	}
	return SortDirection_NO_SORT
}

func (m *ListPluginsReq_Sort) GetCreatedAt() SortDirection {
	if m != nil {
		return m.CreatedAt
	}
	return SortDirection_NO_SORT
}

type ListPluginsRes struct {
	Plugins              []*Plugin `protobuf:"bytes,1,rep,name=plugins,proto3" json:"plugins,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListPluginsRes) Reset()         { *m = ListPluginsRes{} }
func (m *ListPluginsRes) String() string { return proto.CompactTextString(m) }
func (*ListPluginsRes) ProtoMessage()    {}
func (*ListPluginsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b792d6030e82303, []int{8}
}

func (m *ListPluginsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPluginsRes.Unmarshal(m, b)
}
func (m *ListPluginsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPluginsRes.Marshal(b, m, deterministic)
}
func (m *ListPluginsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPluginsRes.Merge(m, src)
}
func (m *ListPluginsRes) XXX_Size() int {
	return xxx_messageInfo_ListPluginsRes.Size(m)
}
func (m *ListPluginsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPluginsRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListPluginsRes proto.InternalMessageInfo

func (m *ListPluginsRes) GetPlugins() []*Plugin {
	if m != nil {
		return m.Plugins
	}
	return nil
}

func init() {
	proto.RegisterType((*GetPluginReq)(nil), "schema.GetPluginReq")
	proto.RegisterType((*AddPluginReq)(nil), "schema.AddPluginReq")
	proto.RegisterType((*AddPluginRes)(nil), "schema.AddPluginRes")
	proto.RegisterType((*UpdatePluginReq)(nil), "schema.UpdatePluginReq")
	proto.RegisterType((*UpdatePluginRes)(nil), "schema.UpdatePluginRes")
	proto.RegisterType((*RemovePluginReq)(nil), "schema.RemovePluginReq")
	proto.RegisterType((*RemovePluginRes)(nil), "schema.RemovePluginRes")
	proto.RegisterType((*ListPluginsReq)(nil), "schema.ListPluginsReq")
	proto.RegisterType((*ListPluginsReq_Filter)(nil), "schema.ListPluginsReq.Filter")
	proto.RegisterType((*ListPluginsReq_Sort)(nil), "schema.ListPluginsReq.Sort")
	proto.RegisterType((*ListPluginsRes)(nil), "schema.ListPluginsRes")
}

func init() { proto.RegisterFile("plugin_service.proto", fileDescriptor_0b792d6030e82303) }

var fileDescriptor_0b792d6030e82303 = []byte{
	// 456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x55, 0xb6, 0xc6, 0xc5, 0x13, 0x37, 0x48, 0xab, 0x42, 0xad, 0x45, 0x45, 0x21, 0xa7, 0x70,
	0x31, 0x22, 0x50, 0x21, 0x21, 0x21, 0x11, 0x84, 0x40, 0x48, 0x1c, 0x2a, 0x97, 0x5e, 0xb8, 0x44,
	0x8b, 0x3d, 0xb8, 0xab, 0x26, 0x59, 0xb3, 0xbb, 0xe9, 0xc7, 0x71, 0xe0, 0xdb, 0x2a, 0xef, 0xda,
	0x8e, 0xeb, 0xd8, 0xb7, 0x78, 0xde, 0x9b, 0xf7, 0x26, 0x33, 0xcf, 0x86, 0xd3, 0x62, 0xbd, 0xcb,
	0xc5, 0x76, 0xa5, 0x51, 0xdd, 0x89, 0x14, 0xe3, 0x42, 0x49, 0x23, 0xa9, 0xaf, 0xd3, 0x1b, 0xdc,
	0x70, 0x16, 0x3a, 0xd4, 0x55, 0xd9, 0xc9, 0x0d, 0xae, 0x0b, 0x54, 0xda, 0x3d, 0xce, 0x5e, 0x40,
	0xf8, 0x0d, 0xcd, 0xa5, 0x65, 0x24, 0xf8, 0x97, 0x4e, 0x80, 0x88, 0x2c, 0x1a, 0x4d, 0x47, 0xf3,
	0x20, 0x21, 0x22, 0x9b, 0x2d, 0x21, 0x5c, 0x66, 0xd9, 0x1e, 0xa7, 0xe0, 0x6d, 0xf9, 0x06, 0x2b,
	0x86, 0xfd, 0x4d, 0xcf, 0x01, 0xaa, 0x01, 0x76, 0x4a, 0x44, 0xc4, 0x22, 0x81, 0xab, 0x5c, 0x2b,
	0x31, 0x8b, 0x1f, 0x48, 0xe8, 0xd2, 0x42, 0xde, 0x5a, 0x81, 0xc7, 0x09, 0x91, 0xb7, 0x95, 0x25,
	0x69, 0x2c, 0x7f, 0xc2, 0x93, 0xeb, 0x22, 0xe3, 0x06, 0x07, 0xa7, 0x6a, 0xa6, 0x20, 0x83, 0x53,
	0x1c, 0x75, 0xa7, 0x78, 0xd9, 0x55, 0x3d, 0x18, 0xa4, 0xa4, 0x24, 0xb8, 0x91, 0x77, 0xc3, 0xc6,
	0x87, 0x94, 0x43, 0x95, 0x7f, 0x04, 0x26, 0x3f, 0x84, 0xae, 0x76, 0xaa, 0x4b, 0x95, 0x0b, 0xf0,
	0xff, 0x88, 0xb5, 0x41, 0x65, 0x69, 0xe3, 0xc5, 0x79, 0xec, 0x4e, 0x13, 0x3f, 0xe4, 0xc5, 0x5f,
	0x2d, 0x29, 0xa9, 0xc8, 0xf4, 0x35, 0x78, 0x5a, 0x2a, 0x13, 0x79, 0xb6, 0xe9, 0xf9, 0x40, 0xd3,
	0x95, 0x54, 0x26, 0xb1, 0x44, 0x3a, 0x05, 0xaf, 0xe0, 0x39, 0x46, 0x8f, 0x6c, 0x43, 0x58, 0x37,
	0x5c, 0xf2, 0x1c, 0x13, 0x8b, 0xb0, 0x0b, 0xf0, 0x9d, 0x49, 0xef, 0x21, 0xcf, 0xe0, 0x78, 0xa7,
	0x51, 0xad, 0x9a, 0x73, 0xf8, 0xe5, 0xe3, 0xf7, 0x8c, 0xe5, 0xe0, 0x95, 0x36, 0xf4, 0x55, 0x6b,
	0xef, 0x93, 0xc5, 0xd3, 0xda, 0xa0, 0xc4, 0xbe, 0x08, 0x85, 0xa9, 0x11, 0x72, 0x5b, 0x69, 0xbd,
	0x03, 0x48, 0x15, 0x72, 0x83, 0xd9, 0x8a, 0x1b, 0xeb, 0x32, 0xd8, 0x10, 0x54, 0xc4, 0xa5, 0x99,
	0x7d, 0xe8, 0xec, 0x4e, 0xd3, 0x39, 0x1c, 0xbb, 0x23, 0xea, 0x68, 0x34, 0x3d, 0x9a, 0x8f, 0x17,
	0x93, 0xe6, 0x6f, 0xb9, 0x13, 0xd4, 0xf0, 0xe2, 0x3f, 0x81, 0x13, 0x57, 0xbb, 0x72, 0xef, 0x01,
	0x7d, 0x03, 0x41, 0x13, 0x6e, 0x7a, 0x5a, 0xf7, 0xb5, 0xf3, 0xce, 0x3a, 0x6a, 0xf4, 0x3d, 0x04,
	0x4d, 0x58, 0xf7, 0x2d, 0xed, 0x57, 0x80, 0xf5, 0x55, 0x35, 0xfd, 0x04, 0x61, 0x3b, 0x5f, 0xf4,
	0xac, 0x66, 0x75, 0xb2, 0xcc, 0x06, 0x00, 0xab, 0xd0, 0xce, 0xd6, 0x5e, 0xa1, 0x13, 0x4a, 0x36,
	0x00, 0x68, 0xfa, 0x11, 0xc6, 0xad, 0xed, 0xd1, 0x67, 0xfd, 0x89, 0x61, 0xfd, 0x75, 0xfd, 0xd9,
	0xff, 0xe5, 0xe5, 0xbc, 0x10, 0xbf, 0x7d, 0xfb, 0x69, 0x78, 0x7b, 0x1f, 0x00, 0x00, 0xff, 0xff,
	0x85, 0x07, 0xa8, 0xe9, 0x57, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PluginServiceClient is the client API for PluginService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PluginServiceClient interface {
	GetPlugin(ctx context.Context, in *GetPluginReq, opts ...grpc.CallOption) (*Plugin, error)
	AddPlugin(ctx context.Context, in *AddPluginReq, opts ...grpc.CallOption) (*AddPluginRes, error)
	UpdatePlugin(ctx context.Context, in *UpdatePluginReq, opts ...grpc.CallOption) (*UpdatePluginRes, error)
	RemovePlugin(ctx context.Context, in *RemovePluginReq, opts ...grpc.CallOption) (*RemovePluginRes, error)
	ListPlugins(ctx context.Context, in *ListPluginsReq, opts ...grpc.CallOption) (*ListPluginsRes, error)
}

type pluginServiceClient struct {
	cc *grpc.ClientConn
}

func NewPluginServiceClient(cc *grpc.ClientConn) PluginServiceClient {
	return &pluginServiceClient{cc}
}

func (c *pluginServiceClient) GetPlugin(ctx context.Context, in *GetPluginReq, opts ...grpc.CallOption) (*Plugin, error) {
	out := new(Plugin)
	err := c.cc.Invoke(ctx, "/schema.PluginService/GetPlugin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginServiceClient) AddPlugin(ctx context.Context, in *AddPluginReq, opts ...grpc.CallOption) (*AddPluginRes, error) {
	out := new(AddPluginRes)
	err := c.cc.Invoke(ctx, "/schema.PluginService/AddPlugin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginServiceClient) UpdatePlugin(ctx context.Context, in *UpdatePluginReq, opts ...grpc.CallOption) (*UpdatePluginRes, error) {
	out := new(UpdatePluginRes)
	err := c.cc.Invoke(ctx, "/schema.PluginService/UpdatePlugin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginServiceClient) RemovePlugin(ctx context.Context, in *RemovePluginReq, opts ...grpc.CallOption) (*RemovePluginRes, error) {
	out := new(RemovePluginRes)
	err := c.cc.Invoke(ctx, "/schema.PluginService/RemovePlugin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginServiceClient) ListPlugins(ctx context.Context, in *ListPluginsReq, opts ...grpc.CallOption) (*ListPluginsRes, error) {
	out := new(ListPluginsRes)
	err := c.cc.Invoke(ctx, "/schema.PluginService/ListPlugins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PluginServiceServer is the server API for PluginService service.
type PluginServiceServer interface {
	GetPlugin(context.Context, *GetPluginReq) (*Plugin, error)
	AddPlugin(context.Context, *AddPluginReq) (*AddPluginRes, error)
	UpdatePlugin(context.Context, *UpdatePluginReq) (*UpdatePluginRes, error)
	RemovePlugin(context.Context, *RemovePluginReq) (*RemovePluginRes, error)
	ListPlugins(context.Context, *ListPluginsReq) (*ListPluginsRes, error)
}

// UnimplementedPluginServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPluginServiceServer struct {
}

func (*UnimplementedPluginServiceServer) GetPlugin(ctx context.Context, req *GetPluginReq) (*Plugin, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlugin not implemented")
}
func (*UnimplementedPluginServiceServer) AddPlugin(ctx context.Context, req *AddPluginReq) (*AddPluginRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPlugin not implemented")
}
func (*UnimplementedPluginServiceServer) UpdatePlugin(ctx context.Context, req *UpdatePluginReq) (*UpdatePluginRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePlugin not implemented")
}
func (*UnimplementedPluginServiceServer) RemovePlugin(ctx context.Context, req *RemovePluginReq) (*RemovePluginRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePlugin not implemented")
}
func (*UnimplementedPluginServiceServer) ListPlugins(ctx context.Context, req *ListPluginsReq) (*ListPluginsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPlugins not implemented")
}

func RegisterPluginServiceServer(s *grpc.Server, srv PluginServiceServer) {
	s.RegisterService(&_PluginService_serviceDesc, srv)
}

func _PluginService_GetPlugin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPluginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServiceServer).GetPlugin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.PluginService/GetPlugin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServiceServer).GetPlugin(ctx, req.(*GetPluginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PluginService_AddPlugin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPluginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServiceServer).AddPlugin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.PluginService/AddPlugin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServiceServer).AddPlugin(ctx, req.(*AddPluginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PluginService_UpdatePlugin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePluginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServiceServer).UpdatePlugin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.PluginService/UpdatePlugin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServiceServer).UpdatePlugin(ctx, req.(*UpdatePluginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PluginService_RemovePlugin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePluginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServiceServer).RemovePlugin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.PluginService/RemovePlugin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServiceServer).RemovePlugin(ctx, req.(*RemovePluginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PluginService_ListPlugins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPluginsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServiceServer).ListPlugins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.PluginService/ListPlugins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServiceServer).ListPlugins(ctx, req.(*ListPluginsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PluginService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "schema.PluginService",
	HandlerType: (*PluginServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPlugin",
			Handler:    _PluginService_GetPlugin_Handler,
		},
		{
			MethodName: "AddPlugin",
			Handler:    _PluginService_AddPlugin_Handler,
		},
		{
			MethodName: "UpdatePlugin",
			Handler:    _PluginService_UpdatePlugin_Handler,
		},
		{
			MethodName: "RemovePlugin",
			Handler:    _PluginService_RemovePlugin_Handler,
		},
		{
			MethodName: "ListPlugins",
			Handler:    _PluginService_ListPlugins_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "plugin_service.proto",
}
