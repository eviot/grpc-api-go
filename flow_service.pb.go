// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flow_service.proto

package gapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetFlowReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFlowReq) Reset()         { *m = GetFlowReq{} }
func (m *GetFlowReq) String() string { return proto.CompactTextString(m) }
func (*GetFlowReq) ProtoMessage()    {}
func (*GetFlowReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{0}
}

func (m *GetFlowReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlowReq.Unmarshal(m, b)
}
func (m *GetFlowReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlowReq.Marshal(b, m, deterministic)
}
func (m *GetFlowReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlowReq.Merge(m, src)
}
func (m *GetFlowReq) XXX_Size() int {
	return xxx_messageInfo_GetFlowReq.Size(m)
}
func (m *GetFlowReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlowReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlowReq proto.InternalMessageInfo

func (m *GetFlowReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AddFlowReq struct {
	FlowDescriptorId     string   `protobuf:"bytes,1,opt,name=flow_descriptor_id,json=flowDescriptorId,proto3" json:"flow_descriptor_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFlowReq) Reset()         { *m = AddFlowReq{} }
func (m *AddFlowReq) String() string { return proto.CompactTextString(m) }
func (*AddFlowReq) ProtoMessage()    {}
func (*AddFlowReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{1}
}

func (m *AddFlowReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFlowReq.Unmarshal(m, b)
}
func (m *AddFlowReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFlowReq.Marshal(b, m, deterministic)
}
func (m *AddFlowReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFlowReq.Merge(m, src)
}
func (m *AddFlowReq) XXX_Size() int {
	return xxx_messageInfo_AddFlowReq.Size(m)
}
func (m *AddFlowReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFlowReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddFlowReq proto.InternalMessageInfo

func (m *AddFlowReq) GetFlowDescriptorId() string {
	if m != nil {
		return m.FlowDescriptorId
	}
	return ""
}

type AddFlowRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFlowRes) Reset()         { *m = AddFlowRes{} }
func (m *AddFlowRes) String() string { return proto.CompactTextString(m) }
func (*AddFlowRes) ProtoMessage()    {}
func (*AddFlowRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{2}
}

func (m *AddFlowRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFlowRes.Unmarshal(m, b)
}
func (m *AddFlowRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFlowRes.Marshal(b, m, deterministic)
}
func (m *AddFlowRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFlowRes.Merge(m, src)
}
func (m *AddFlowRes) XXX_Size() int {
	return xxx_messageInfo_AddFlowRes.Size(m)
}
func (m *AddFlowRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFlowRes.DiscardUnknown(m)
}

var xxx_messageInfo_AddFlowRes proto.InternalMessageInfo

func (m *AddFlowRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AddFlowRes) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SetFlowStatusReq struct {
	FlowId               string     `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	Status               FlowStatus `protobuf:"varint,2,opt,name=status,proto3,enum=schema.FlowStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SetFlowStatusReq) Reset()         { *m = SetFlowStatusReq{} }
func (m *SetFlowStatusReq) String() string { return proto.CompactTextString(m) }
func (*SetFlowStatusReq) ProtoMessage()    {}
func (*SetFlowStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{3}
}

func (m *SetFlowStatusReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFlowStatusReq.Unmarshal(m, b)
}
func (m *SetFlowStatusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFlowStatusReq.Marshal(b, m, deterministic)
}
func (m *SetFlowStatusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFlowStatusReq.Merge(m, src)
}
func (m *SetFlowStatusReq) XXX_Size() int {
	return xxx_messageInfo_SetFlowStatusReq.Size(m)
}
func (m *SetFlowStatusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFlowStatusReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetFlowStatusReq proto.InternalMessageInfo

func (m *SetFlowStatusReq) GetFlowId() string {
	if m != nil {
		return m.FlowId
	}
	return ""
}

func (m *SetFlowStatusReq) GetStatus() FlowStatus {
	if m != nil {
		return m.Status
	}
	return FlowStatus_STOPPED
}

type SetFlowStatusRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFlowStatusRes) Reset()         { *m = SetFlowStatusRes{} }
func (m *SetFlowStatusRes) String() string { return proto.CompactTextString(m) }
func (*SetFlowStatusRes) ProtoMessage()    {}
func (*SetFlowStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{4}
}

func (m *SetFlowStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFlowStatusRes.Unmarshal(m, b)
}
func (m *SetFlowStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFlowStatusRes.Marshal(b, m, deterministic)
}
func (m *SetFlowStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFlowStatusRes.Merge(m, src)
}
func (m *SetFlowStatusRes) XXX_Size() int {
	return xxx_messageInfo_SetFlowStatusRes.Size(m)
}
func (m *SetFlowStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFlowStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_SetFlowStatusRes proto.InternalMessageInfo

func (m *SetFlowStatusRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type SetFlowVariableReq struct {
	FlowId               string   `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value                *Any     `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFlowVariableReq) Reset()         { *m = SetFlowVariableReq{} }
func (m *SetFlowVariableReq) String() string { return proto.CompactTextString(m) }
func (*SetFlowVariableReq) ProtoMessage()    {}
func (*SetFlowVariableReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{5}
}

func (m *SetFlowVariableReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFlowVariableReq.Unmarshal(m, b)
}
func (m *SetFlowVariableReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFlowVariableReq.Marshal(b, m, deterministic)
}
func (m *SetFlowVariableReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFlowVariableReq.Merge(m, src)
}
func (m *SetFlowVariableReq) XXX_Size() int {
	return xxx_messageInfo_SetFlowVariableReq.Size(m)
}
func (m *SetFlowVariableReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFlowVariableReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetFlowVariableReq proto.InternalMessageInfo

func (m *SetFlowVariableReq) GetFlowId() string {
	if m != nil {
		return m.FlowId
	}
	return ""
}

func (m *SetFlowVariableReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SetFlowVariableReq) GetValue() *Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type SetFlowVariableRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFlowVariableRes) Reset()         { *m = SetFlowVariableRes{} }
func (m *SetFlowVariableRes) String() string { return proto.CompactTextString(m) }
func (*SetFlowVariableRes) ProtoMessage()    {}
func (*SetFlowVariableRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{6}
}

func (m *SetFlowVariableRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFlowVariableRes.Unmarshal(m, b)
}
func (m *SetFlowVariableRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFlowVariableRes.Marshal(b, m, deterministic)
}
func (m *SetFlowVariableRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFlowVariableRes.Merge(m, src)
}
func (m *SetFlowVariableRes) XXX_Size() int {
	return xxx_messageInfo_SetFlowVariableRes.Size(m)
}
func (m *SetFlowVariableRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFlowVariableRes.DiscardUnknown(m)
}

var xxx_messageInfo_SetFlowVariableRes proto.InternalMessageInfo

func (m *SetFlowVariableRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type GetFlowVariableReq struct {
	FlowId               string   `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFlowVariableReq) Reset()         { *m = GetFlowVariableReq{} }
func (m *GetFlowVariableReq) String() string { return proto.CompactTextString(m) }
func (*GetFlowVariableReq) ProtoMessage()    {}
func (*GetFlowVariableReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{7}
}

func (m *GetFlowVariableReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlowVariableReq.Unmarshal(m, b)
}
func (m *GetFlowVariableReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlowVariableReq.Marshal(b, m, deterministic)
}
func (m *GetFlowVariableReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlowVariableReq.Merge(m, src)
}
func (m *GetFlowVariableReq) XXX_Size() int {
	return xxx_messageInfo_GetFlowVariableReq.Size(m)
}
func (m *GetFlowVariableReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlowVariableReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlowVariableReq proto.InternalMessageInfo

func (m *GetFlowVariableReq) GetFlowId() string {
	if m != nil {
		return m.FlowId
	}
	return ""
}

func (m *GetFlowVariableReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetFlowVariableRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Value                *Any     `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFlowVariableRes) Reset()         { *m = GetFlowVariableRes{} }
func (m *GetFlowVariableRes) String() string { return proto.CompactTextString(m) }
func (*GetFlowVariableRes) ProtoMessage()    {}
func (*GetFlowVariableRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{8}
}

func (m *GetFlowVariableRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlowVariableRes.Unmarshal(m, b)
}
func (m *GetFlowVariableRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlowVariableRes.Marshal(b, m, deterministic)
}
func (m *GetFlowVariableRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlowVariableRes.Merge(m, src)
}
func (m *GetFlowVariableRes) XXX_Size() int {
	return xxx_messageInfo_GetFlowVariableRes.Size(m)
}
func (m *GetFlowVariableRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlowVariableRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlowVariableRes proto.InternalMessageInfo

func (m *GetFlowVariableRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *GetFlowVariableRes) GetValue() *Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type WatchFlowVariableReq struct {
	FlowId               string   `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	VarName              string   `protobuf:"bytes,2,opt,name=var_name,json=varName,proto3" json:"var_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchFlowVariableReq) Reset()         { *m = WatchFlowVariableReq{} }
func (m *WatchFlowVariableReq) String() string { return proto.CompactTextString(m) }
func (*WatchFlowVariableReq) ProtoMessage()    {}
func (*WatchFlowVariableReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{9}
}

func (m *WatchFlowVariableReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchFlowVariableReq.Unmarshal(m, b)
}
func (m *WatchFlowVariableReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchFlowVariableReq.Marshal(b, m, deterministic)
}
func (m *WatchFlowVariableReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchFlowVariableReq.Merge(m, src)
}
func (m *WatchFlowVariableReq) XXX_Size() int {
	return xxx_messageInfo_WatchFlowVariableReq.Size(m)
}
func (m *WatchFlowVariableReq) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchFlowVariableReq.DiscardUnknown(m)
}

var xxx_messageInfo_WatchFlowVariableReq proto.InternalMessageInfo

func (m *WatchFlowVariableReq) GetFlowId() string {
	if m != nil {
		return m.FlowId
	}
	return ""
}

func (m *WatchFlowVariableReq) GetVarName() string {
	if m != nil {
		return m.VarName
	}
	return ""
}

type WatchFlowVariableRes struct {
	// variable value
	Value                *Any     `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchFlowVariableRes) Reset()         { *m = WatchFlowVariableRes{} }
func (m *WatchFlowVariableRes) String() string { return proto.CompactTextString(m) }
func (*WatchFlowVariableRes) ProtoMessage()    {}
func (*WatchFlowVariableRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{10}
}

func (m *WatchFlowVariableRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchFlowVariableRes.Unmarshal(m, b)
}
func (m *WatchFlowVariableRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchFlowVariableRes.Marshal(b, m, deterministic)
}
func (m *WatchFlowVariableRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchFlowVariableRes.Merge(m, src)
}
func (m *WatchFlowVariableRes) XXX_Size() int {
	return xxx_messageInfo_WatchFlowVariableRes.Size(m)
}
func (m *WatchFlowVariableRes) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchFlowVariableRes.DiscardUnknown(m)
}

var xxx_messageInfo_WatchFlowVariableRes proto.InternalMessageInfo

func (m *WatchFlowVariableRes) GetValue() *Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type RemoveFlowReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveFlowReq) Reset()         { *m = RemoveFlowReq{} }
func (m *RemoveFlowReq) String() string { return proto.CompactTextString(m) }
func (*RemoveFlowReq) ProtoMessage()    {}
func (*RemoveFlowReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{11}
}

func (m *RemoveFlowReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveFlowReq.Unmarshal(m, b)
}
func (m *RemoveFlowReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveFlowReq.Marshal(b, m, deterministic)
}
func (m *RemoveFlowReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveFlowReq.Merge(m, src)
}
func (m *RemoveFlowReq) XXX_Size() int {
	return xxx_messageInfo_RemoveFlowReq.Size(m)
}
func (m *RemoveFlowReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveFlowReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveFlowReq proto.InternalMessageInfo

func (m *RemoveFlowReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemoveFlowRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveFlowRes) Reset()         { *m = RemoveFlowRes{} }
func (m *RemoveFlowRes) String() string { return proto.CompactTextString(m) }
func (*RemoveFlowRes) ProtoMessage()    {}
func (*RemoveFlowRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{12}
}

func (m *RemoveFlowRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveFlowRes.Unmarshal(m, b)
}
func (m *RemoveFlowRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveFlowRes.Marshal(b, m, deterministic)
}
func (m *RemoveFlowRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveFlowRes.Merge(m, src)
}
func (m *RemoveFlowRes) XXX_Size() int {
	return xxx_messageInfo_RemoveFlowRes.Size(m)
}
func (m *RemoveFlowRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveFlowRes.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveFlowRes proto.InternalMessageInfo

func (m *RemoveFlowRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type StartFlowReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartFlowReq) Reset()         { *m = StartFlowReq{} }
func (m *StartFlowReq) String() string { return proto.CompactTextString(m) }
func (*StartFlowReq) ProtoMessage()    {}
func (*StartFlowReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{13}
}

func (m *StartFlowReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFlowReq.Unmarshal(m, b)
}
func (m *StartFlowReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFlowReq.Marshal(b, m, deterministic)
}
func (m *StartFlowReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFlowReq.Merge(m, src)
}
func (m *StartFlowReq) XXX_Size() int {
	return xxx_messageInfo_StartFlowReq.Size(m)
}
func (m *StartFlowReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFlowReq.DiscardUnknown(m)
}

var xxx_messageInfo_StartFlowReq proto.InternalMessageInfo

func (m *StartFlowReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StartFlowRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartFlowRes) Reset()         { *m = StartFlowRes{} }
func (m *StartFlowRes) String() string { return proto.CompactTextString(m) }
func (*StartFlowRes) ProtoMessage()    {}
func (*StartFlowRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{14}
}

func (m *StartFlowRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFlowRes.Unmarshal(m, b)
}
func (m *StartFlowRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFlowRes.Marshal(b, m, deterministic)
}
func (m *StartFlowRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFlowRes.Merge(m, src)
}
func (m *StartFlowRes) XXX_Size() int {
	return xxx_messageInfo_StartFlowRes.Size(m)
}
func (m *StartFlowRes) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFlowRes.DiscardUnknown(m)
}

var xxx_messageInfo_StartFlowRes proto.InternalMessageInfo

type StopFlowReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopFlowReq) Reset()         { *m = StopFlowReq{} }
func (m *StopFlowReq) String() string { return proto.CompactTextString(m) }
func (*StopFlowReq) ProtoMessage()    {}
func (*StopFlowReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{15}
}

func (m *StopFlowReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopFlowReq.Unmarshal(m, b)
}
func (m *StopFlowReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopFlowReq.Marshal(b, m, deterministic)
}
func (m *StopFlowReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopFlowReq.Merge(m, src)
}
func (m *StopFlowReq) XXX_Size() int {
	return xxx_messageInfo_StopFlowReq.Size(m)
}
func (m *StopFlowReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StopFlowReq.DiscardUnknown(m)
}

var xxx_messageInfo_StopFlowReq proto.InternalMessageInfo

func (m *StopFlowReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StopFlowRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopFlowRes) Reset()         { *m = StopFlowRes{} }
func (m *StopFlowRes) String() string { return proto.CompactTextString(m) }
func (*StopFlowRes) ProtoMessage()    {}
func (*StopFlowRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{16}
}

func (m *StopFlowRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopFlowRes.Unmarshal(m, b)
}
func (m *StopFlowRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopFlowRes.Marshal(b, m, deterministic)
}
func (m *StopFlowRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopFlowRes.Merge(m, src)
}
func (m *StopFlowRes) XXX_Size() int {
	return xxx_messageInfo_StopFlowRes.Size(m)
}
func (m *StopFlowRes) XXX_DiscardUnknown() {
	xxx_messageInfo_StopFlowRes.DiscardUnknown(m)
}

var xxx_messageInfo_StopFlowRes proto.InternalMessageInfo

type SendFlowUIReq struct {
	FlowId               string   `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	UiName               string   `protobuf:"bytes,2,opt,name=ui_name,json=uiName,proto3" json:"ui_name,omitempty"`
	Value                *Any     `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendFlowUIReq) Reset()         { *m = SendFlowUIReq{} }
func (m *SendFlowUIReq) String() string { return proto.CompactTextString(m) }
func (*SendFlowUIReq) ProtoMessage()    {}
func (*SendFlowUIReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{17}
}

func (m *SendFlowUIReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendFlowUIReq.Unmarshal(m, b)
}
func (m *SendFlowUIReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendFlowUIReq.Marshal(b, m, deterministic)
}
func (m *SendFlowUIReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendFlowUIReq.Merge(m, src)
}
func (m *SendFlowUIReq) XXX_Size() int {
	return xxx_messageInfo_SendFlowUIReq.Size(m)
}
func (m *SendFlowUIReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendFlowUIReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendFlowUIReq proto.InternalMessageInfo

func (m *SendFlowUIReq) GetFlowId() string {
	if m != nil {
		return m.FlowId
	}
	return ""
}

func (m *SendFlowUIReq) GetUiName() string {
	if m != nil {
		return m.UiName
	}
	return ""
}

func (m *SendFlowUIReq) GetValue() *Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type SendFlowUIRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendFlowUIRes) Reset()         { *m = SendFlowUIRes{} }
func (m *SendFlowUIRes) String() string { return proto.CompactTextString(m) }
func (*SendFlowUIRes) ProtoMessage()    {}
func (*SendFlowUIRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{18}
}

func (m *SendFlowUIRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendFlowUIRes.Unmarshal(m, b)
}
func (m *SendFlowUIRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendFlowUIRes.Marshal(b, m, deterministic)
}
func (m *SendFlowUIRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendFlowUIRes.Merge(m, src)
}
func (m *SendFlowUIRes) XXX_Size() int {
	return xxx_messageInfo_SendFlowUIRes.Size(m)
}
func (m *SendFlowUIRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SendFlowUIRes.DiscardUnknown(m)
}

var xxx_messageInfo_SendFlowUIRes proto.InternalMessageInfo

type WatchFlowUIReq struct {
	FlowId               string   `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	UiName               string   `protobuf:"bytes,2,opt,name=ui_name,json=uiName,proto3" json:"ui_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchFlowUIReq) Reset()         { *m = WatchFlowUIReq{} }
func (m *WatchFlowUIReq) String() string { return proto.CompactTextString(m) }
func (*WatchFlowUIReq) ProtoMessage()    {}
func (*WatchFlowUIReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{19}
}

func (m *WatchFlowUIReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchFlowUIReq.Unmarshal(m, b)
}
func (m *WatchFlowUIReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchFlowUIReq.Marshal(b, m, deterministic)
}
func (m *WatchFlowUIReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchFlowUIReq.Merge(m, src)
}
func (m *WatchFlowUIReq) XXX_Size() int {
	return xxx_messageInfo_WatchFlowUIReq.Size(m)
}
func (m *WatchFlowUIReq) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchFlowUIReq.DiscardUnknown(m)
}

var xxx_messageInfo_WatchFlowUIReq proto.InternalMessageInfo

func (m *WatchFlowUIReq) GetFlowId() string {
	if m != nil {
		return m.FlowId
	}
	return ""
}

func (m *WatchFlowUIReq) GetUiName() string {
	if m != nil {
		return m.UiName
	}
	return ""
}

type WatchFlowUIRes struct {
	Value                *Any     `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchFlowUIRes) Reset()         { *m = WatchFlowUIRes{} }
func (m *WatchFlowUIRes) String() string { return proto.CompactTextString(m) }
func (*WatchFlowUIRes) ProtoMessage()    {}
func (*WatchFlowUIRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a3bdaf13df4afbd, []int{20}
}

func (m *WatchFlowUIRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchFlowUIRes.Unmarshal(m, b)
}
func (m *WatchFlowUIRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchFlowUIRes.Marshal(b, m, deterministic)
}
func (m *WatchFlowUIRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchFlowUIRes.Merge(m, src)
}
func (m *WatchFlowUIRes) XXX_Size() int {
	return xxx_messageInfo_WatchFlowUIRes.Size(m)
}
func (m *WatchFlowUIRes) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchFlowUIRes.DiscardUnknown(m)
}

var xxx_messageInfo_WatchFlowUIRes proto.InternalMessageInfo

func (m *WatchFlowUIRes) GetValue() *Any {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*GetFlowReq)(nil), "schema.GetFlowReq")
	proto.RegisterType((*AddFlowReq)(nil), "schema.AddFlowReq")
	proto.RegisterType((*AddFlowRes)(nil), "schema.AddFlowRes")
	proto.RegisterType((*SetFlowStatusReq)(nil), "schema.SetFlowStatusReq")
	proto.RegisterType((*SetFlowStatusRes)(nil), "schema.SetFlowStatusRes")
	proto.RegisterType((*SetFlowVariableReq)(nil), "schema.SetFlowVariableReq")
	proto.RegisterType((*SetFlowVariableRes)(nil), "schema.SetFlowVariableRes")
	proto.RegisterType((*GetFlowVariableReq)(nil), "schema.GetFlowVariableReq")
	proto.RegisterType((*GetFlowVariableRes)(nil), "schema.GetFlowVariableRes")
	proto.RegisterType((*WatchFlowVariableReq)(nil), "schema.WatchFlowVariableReq")
	proto.RegisterType((*WatchFlowVariableRes)(nil), "schema.WatchFlowVariableRes")
	proto.RegisterType((*RemoveFlowReq)(nil), "schema.RemoveFlowReq")
	proto.RegisterType((*RemoveFlowRes)(nil), "schema.RemoveFlowRes")
	proto.RegisterType((*StartFlowReq)(nil), "schema.StartFlowReq")
	proto.RegisterType((*StartFlowRes)(nil), "schema.StartFlowRes")
	proto.RegisterType((*StopFlowReq)(nil), "schema.StopFlowReq")
	proto.RegisterType((*StopFlowRes)(nil), "schema.StopFlowRes")
	proto.RegisterType((*SendFlowUIReq)(nil), "schema.SendFlowUIReq")
	proto.RegisterType((*SendFlowUIRes)(nil), "schema.SendFlowUIRes")
	proto.RegisterType((*WatchFlowUIReq)(nil), "schema.WatchFlowUIReq")
	proto.RegisterType((*WatchFlowUIRes)(nil), "schema.WatchFlowUIRes")
}

func init() { proto.RegisterFile("flow_service.proto", fileDescriptor_3a3bdaf13df4afbd) }

var fileDescriptor_3a3bdaf13df4afbd = []byte{
	// 574 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x55, 0x42, 0xeb, 0x24, 0xe3, 0x26, 0x2d, 0x43, 0xa1, 0x61, 0x55, 0xa0, 0xac, 0x38, 0x54,
	0x50, 0x45, 0x90, 0x22, 0x21, 0x7a, 0x41, 0x29, 0x88, 0x28, 0x1c, 0x2a, 0x61, 0x0b, 0x2a, 0x71,
	0x89, 0xb6, 0xf1, 0x42, 0xad, 0x26, 0x71, 0xf0, 0x3a, 0xae, 0xfa, 0xfb, 0xf8, 0x63, 0xc8, 0x5f,
	0xeb, 0x8d, 0xbd, 0x8e, 0x22, 0xb8, 0x39, 0x33, 0x6f, 0xe7, 0x3d, 0xaf, 0xdf, 0x9b, 0x00, 0xfe,
	0x9c, 0x7a, 0xb7, 0x63, 0xc1, 0xfd, 0xd0, 0x9d, 0xf0, 0xde, 0xc2, 0xf7, 0x02, 0x0f, 0x0d, 0x31,
	0xb9, 0xe6, 0x33, 0x46, 0x20, 0xea, 0x25, 0x35, 0xd2, 0x62, 0xf3, 0xbb, 0xe4, 0x91, 0x1e, 0x02,
	0x0c, 0x79, 0xf0, 0x79, 0xea, 0xdd, 0x5a, 0xfc, 0x37, 0x76, 0xa0, 0xee, 0x3a, 0xdd, 0xda, 0x51,
	0xed, 0xb8, 0x65, 0xd5, 0x5d, 0x87, 0x9e, 0x01, 0x0c, 0x1c, 0x27, 0xeb, 0x9e, 0xa4, 0x04, 0x0e,
	0x17, 0x13, 0xdf, 0x5d, 0x04, 0x9e, 0x3f, 0x96, 0xe8, 0xbd, 0xa8, 0xf3, 0x49, 0x36, 0x46, 0x0e,
	0x3d, 0x51, 0xce, 0x8a, 0x68, 0xb2, 0x77, 0x13, 0x63, 0x9b, 0x56, 0xdd, 0xbb, 0x49, 0x99, 0xea,
	0x92, 0xe9, 0x12, 0xf6, 0xec, 0x44, 0x87, 0x1d, 0xb0, 0x60, 0x29, 0x22, 0xbe, 0x03, 0x68, 0xc4,
	0x7c, 0x92, 0xc4, 0x88, 0x7e, 0x8e, 0x1c, 0x7c, 0x09, 0x86, 0x88, 0x51, 0xf1, 0x80, 0x4e, 0x1f,
	0x7b, 0xc9, 0x4b, 0xf6, 0x94, 0xf3, 0x29, 0x82, 0xd2, 0xd2, 0xe0, 0x92, 0x18, 0xea, 0x00, 0xa6,
	0x98, 0xef, 0xcc, 0x77, 0xd9, 0xd5, 0x94, 0xaf, 0xa5, 0x47, 0xd8, 0x9a, 0xb3, 0x19, 0x4f, 0xd5,
	0xc7, 0xcf, 0xf8, 0x1c, 0xb6, 0x43, 0x36, 0x5d, 0xf2, 0xee, 0xbd, 0xa3, 0xda, 0xb1, 0xd9, 0x37,
	0x33, 0x45, 0x83, 0xf9, 0x9d, 0x95, 0x74, 0xe8, 0x0b, 0x0d, 0x4b, 0x59, 0xcb, 0x00, 0x70, 0xf8,
	0x7f, 0x5a, 0xe8, 0x50, 0x33, 0xa2, 0xfc, 0x05, 0xa4, 0xe2, 0x7a, 0xa5, 0xe2, 0x2f, 0xb0, 0x7f,
	0xc9, 0x82, 0xc9, 0xf5, 0xc6, 0x6a, 0x1e, 0x43, 0x33, 0x64, 0xfe, 0x58, 0x51, 0xd4, 0x08, 0x99,
	0x7f, 0x11, 0x89, 0x7a, 0xaf, 0x9d, 0x25, 0x72, 0x19, 0xb5, 0x4a, 0x19, 0xcf, 0xa0, 0x6d, 0xf1,
	0x99, 0x17, 0xf2, 0x2a, 0x9b, 0x16, 0x00, 0xe5, 0x4b, 0x7d, 0x0a, 0x3b, 0x76, 0xc0, 0xfc, 0x4a,
	0x9f, 0x77, 0x56, 0xfa, 0x82, 0x3e, 0x01, 0xd3, 0x0e, 0xbc, 0x45, 0x15, 0xbc, 0xad, 0xb6, 0x05,
	0x75, 0xa0, 0x6d, 0xf3, 0x79, 0x6c, 0xf5, 0x6f, 0xa3, 0xb5, 0xf7, 0x73, 0x00, 0x8d, 0xa5, 0xab,
	0x5e, 0x8f, 0xb1, 0x74, 0x2f, 0x36, 0xb4, 0xcf, 0xee, 0x2a, 0x8b, 0xa0, 0xe7, 0xd0, 0x91, 0x37,
	0xfa, 0x8f, 0xbc, 0xf4, 0xb4, 0x30, 0x63, 0x93, 0xef, 0xd1, 0xff, 0xb3, 0x0d, 0x66, 0x1c, 0xa8,
	0x64, 0xd1, 0xe0, 0x2b, 0x68, 0xa4, 0x7e, 0x43, 0x99, 0xc4, 0x7c, 0xa9, 0x90, 0x1d, 0x35, 0x9d,
	0xf8, 0x06, 0x1a, 0xe9, 0x5a, 0xc8, 0xc1, 0xf9, 0x8e, 0x21, 0xe5, 0x9a, 0xc0, 0x33, 0x80, 0xfc,
	0xf3, 0xe2, 0xc3, 0x0c, 0xb1, 0xe2, 0x09, 0xa2, 0x2d, 0x0b, 0x1c, 0xc1, 0x6e, 0x21, 0x0b, 0x48,
	0x0a, 0x1a, 0x15, 0x67, 0x93, 0xea, 0x5e, 0x3c, 0xca, 0xae, 0x1a, 0x65, 0xaf, 0x19, 0xa5, 0x09,
	0xfd, 0x57, 0xb8, 0x5f, 0x0a, 0x03, 0x1e, 0x66, 0x07, 0x74, 0x99, 0x23, 0xeb, 0xba, 0xe2, 0x75,
	0x2d, 0xba, 0xa4, 0xdc, 0x1e, 0xf9, 0x25, 0xad, 0x18, 0x93, 0x68, 0xcb, 0x02, 0x3f, 0x80, 0xa9,
	0xb8, 0x00, 0x1f, 0x95, 0xa8, 0x92, 0xd3, 0xfa, 0x7a, 0x44, 0xfe, 0x31, 0xf2, 0xa6, 0xb2, 0x64,
	0xb1, 0x5b, 0x78, 0x79, 0xb9, 0xd4, 0x49, 0x55, 0x47, 0xe0, 0x3b, 0x68, 0xc9, 0x10, 0xe2, 0xbe,
	0x84, 0x29, 0xb9, 0x25, 0xba, 0xaa, 0xc0, 0xb7, 0xd0, 0xcc, 0xe2, 0x88, 0x0f, 0x72, 0x84, 0xcc,
	0x2f, 0xd1, 0x14, 0xc5, 0xb9, 0xf1, 0x63, 0xeb, 0x17, 0x5b, 0xb8, 0x57, 0x46, 0xfc, 0x47, 0x78,
	0xfa, 0x37, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x3a, 0x30, 0x21, 0x3d, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FlowServiceClient is the client API for FlowService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FlowServiceClient interface {
	GetFlow(ctx context.Context, in *GetFlowReq, opts ...grpc.CallOption) (*Flow, error)
	AddFlow(ctx context.Context, in *AddFlowReq, opts ...grpc.CallOption) (*AddFlowRes, error)
	RemoveFlow(ctx context.Context, in *RemoveFlowReq, opts ...grpc.CallOption) (*RemoveFlowRes, error)
	GetFlowVariable(ctx context.Context, in *GetFlowVariableReq, opts ...grpc.CallOption) (*GetFlowVariableRes, error)
	SetFlowVariable(ctx context.Context, in *SetFlowVariableReq, opts ...grpc.CallOption) (*SetFlowVariableRes, error)
	WatchFlowVariable(ctx context.Context, in *WatchFlowVariableReq, opts ...grpc.CallOption) (FlowService_WatchFlowVariableClient, error)
	// rpc ListFlowUI (ListFlowUIReq) returns (ListFlowUIRes);
	SendFlowUI(ctx context.Context, in *SendFlowUIReq, opts ...grpc.CallOption) (*SendFlowUIRes, error)
	WatchFlowUI(ctx context.Context, in *WatchFlowUIReq, opts ...grpc.CallOption) (FlowService_WatchFlowUIClient, error)
	SetFlowStatus(ctx context.Context, in *SetFlowStatusReq, opts ...grpc.CallOption) (*SetFlowStatusRes, error)
	StartFlow(ctx context.Context, in *StartFlowReq, opts ...grpc.CallOption) (*StartFlowRes, error)
	// unimplemented
	StopFlow(ctx context.Context, in *StopFlowReq, opts ...grpc.CallOption) (*StopFlowRes, error)
}

type flowServiceClient struct {
	cc *grpc.ClientConn
}

func NewFlowServiceClient(cc *grpc.ClientConn) FlowServiceClient {
	return &flowServiceClient{cc}
}

func (c *flowServiceClient) GetFlow(ctx context.Context, in *GetFlowReq, opts ...grpc.CallOption) (*Flow, error) {
	out := new(Flow)
	err := c.cc.Invoke(ctx, "/schema.FlowService/GetFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowServiceClient) AddFlow(ctx context.Context, in *AddFlowReq, opts ...grpc.CallOption) (*AddFlowRes, error) {
	out := new(AddFlowRes)
	err := c.cc.Invoke(ctx, "/schema.FlowService/AddFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowServiceClient) RemoveFlow(ctx context.Context, in *RemoveFlowReq, opts ...grpc.CallOption) (*RemoveFlowRes, error) {
	out := new(RemoveFlowRes)
	err := c.cc.Invoke(ctx, "/schema.FlowService/RemoveFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowServiceClient) GetFlowVariable(ctx context.Context, in *GetFlowVariableReq, opts ...grpc.CallOption) (*GetFlowVariableRes, error) {
	out := new(GetFlowVariableRes)
	err := c.cc.Invoke(ctx, "/schema.FlowService/GetFlowVariable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowServiceClient) SetFlowVariable(ctx context.Context, in *SetFlowVariableReq, opts ...grpc.CallOption) (*SetFlowVariableRes, error) {
	out := new(SetFlowVariableRes)
	err := c.cc.Invoke(ctx, "/schema.FlowService/SetFlowVariable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowServiceClient) WatchFlowVariable(ctx context.Context, in *WatchFlowVariableReq, opts ...grpc.CallOption) (FlowService_WatchFlowVariableClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FlowService_serviceDesc.Streams[0], "/schema.FlowService/WatchFlowVariable", opts...)
	if err != nil {
		return nil, err
	}
	x := &flowServiceWatchFlowVariableClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FlowService_WatchFlowVariableClient interface {
	Recv() (*WatchFlowVariableRes, error)
	grpc.ClientStream
}

type flowServiceWatchFlowVariableClient struct {
	grpc.ClientStream
}

func (x *flowServiceWatchFlowVariableClient) Recv() (*WatchFlowVariableRes, error) {
	m := new(WatchFlowVariableRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *flowServiceClient) SendFlowUI(ctx context.Context, in *SendFlowUIReq, opts ...grpc.CallOption) (*SendFlowUIRes, error) {
	out := new(SendFlowUIRes)
	err := c.cc.Invoke(ctx, "/schema.FlowService/SendFlowUI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowServiceClient) WatchFlowUI(ctx context.Context, in *WatchFlowUIReq, opts ...grpc.CallOption) (FlowService_WatchFlowUIClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FlowService_serviceDesc.Streams[1], "/schema.FlowService/WatchFlowUI", opts...)
	if err != nil {
		return nil, err
	}
	x := &flowServiceWatchFlowUIClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FlowService_WatchFlowUIClient interface {
	Recv() (*WatchFlowUIRes, error)
	grpc.ClientStream
}

type flowServiceWatchFlowUIClient struct {
	grpc.ClientStream
}

func (x *flowServiceWatchFlowUIClient) Recv() (*WatchFlowUIRes, error) {
	m := new(WatchFlowUIRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *flowServiceClient) SetFlowStatus(ctx context.Context, in *SetFlowStatusReq, opts ...grpc.CallOption) (*SetFlowStatusRes, error) {
	out := new(SetFlowStatusRes)
	err := c.cc.Invoke(ctx, "/schema.FlowService/SetFlowStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowServiceClient) StartFlow(ctx context.Context, in *StartFlowReq, opts ...grpc.CallOption) (*StartFlowRes, error) {
	out := new(StartFlowRes)
	err := c.cc.Invoke(ctx, "/schema.FlowService/StartFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowServiceClient) StopFlow(ctx context.Context, in *StopFlowReq, opts ...grpc.CallOption) (*StopFlowRes, error) {
	out := new(StopFlowRes)
	err := c.cc.Invoke(ctx, "/schema.FlowService/StopFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FlowServiceServer is the server API for FlowService service.
type FlowServiceServer interface {
	GetFlow(context.Context, *GetFlowReq) (*Flow, error)
	AddFlow(context.Context, *AddFlowReq) (*AddFlowRes, error)
	RemoveFlow(context.Context, *RemoveFlowReq) (*RemoveFlowRes, error)
	GetFlowVariable(context.Context, *GetFlowVariableReq) (*GetFlowVariableRes, error)
	SetFlowVariable(context.Context, *SetFlowVariableReq) (*SetFlowVariableRes, error)
	WatchFlowVariable(*WatchFlowVariableReq, FlowService_WatchFlowVariableServer) error
	// rpc ListFlowUI (ListFlowUIReq) returns (ListFlowUIRes);
	SendFlowUI(context.Context, *SendFlowUIReq) (*SendFlowUIRes, error)
	WatchFlowUI(*WatchFlowUIReq, FlowService_WatchFlowUIServer) error
	SetFlowStatus(context.Context, *SetFlowStatusReq) (*SetFlowStatusRes, error)
	StartFlow(context.Context, *StartFlowReq) (*StartFlowRes, error)
	// unimplemented
	StopFlow(context.Context, *StopFlowReq) (*StopFlowRes, error)
}

// UnimplementedFlowServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFlowServiceServer struct {
}

func (*UnimplementedFlowServiceServer) GetFlow(ctx context.Context, req *GetFlowReq) (*Flow, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFlow not implemented")
}
func (*UnimplementedFlowServiceServer) AddFlow(ctx context.Context, req *AddFlowReq) (*AddFlowRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFlow not implemented")
}
func (*UnimplementedFlowServiceServer) RemoveFlow(ctx context.Context, req *RemoveFlowReq) (*RemoveFlowRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFlow not implemented")
}
func (*UnimplementedFlowServiceServer) GetFlowVariable(ctx context.Context, req *GetFlowVariableReq) (*GetFlowVariableRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFlowVariable not implemented")
}
func (*UnimplementedFlowServiceServer) SetFlowVariable(ctx context.Context, req *SetFlowVariableReq) (*SetFlowVariableRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetFlowVariable not implemented")
}
func (*UnimplementedFlowServiceServer) WatchFlowVariable(req *WatchFlowVariableReq, srv FlowService_WatchFlowVariableServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchFlowVariable not implemented")
}
func (*UnimplementedFlowServiceServer) SendFlowUI(ctx context.Context, req *SendFlowUIReq) (*SendFlowUIRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendFlowUI not implemented")
}
func (*UnimplementedFlowServiceServer) WatchFlowUI(req *WatchFlowUIReq, srv FlowService_WatchFlowUIServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchFlowUI not implemented")
}
func (*UnimplementedFlowServiceServer) SetFlowStatus(ctx context.Context, req *SetFlowStatusReq) (*SetFlowStatusRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetFlowStatus not implemented")
}
func (*UnimplementedFlowServiceServer) StartFlow(ctx context.Context, req *StartFlowReq) (*StartFlowRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartFlow not implemented")
}
func (*UnimplementedFlowServiceServer) StopFlow(ctx context.Context, req *StopFlowReq) (*StopFlowRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopFlow not implemented")
}

func RegisterFlowServiceServer(s *grpc.Server, srv FlowServiceServer) {
	s.RegisterService(&_FlowService_serviceDesc, srv)
}

func _FlowService_GetFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFlowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).GetFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.FlowService/GetFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).GetFlow(ctx, req.(*GetFlowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowService_AddFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFlowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).AddFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.FlowService/AddFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).AddFlow(ctx, req.(*AddFlowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowService_RemoveFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveFlowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).RemoveFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.FlowService/RemoveFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).RemoveFlow(ctx, req.(*RemoveFlowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowService_GetFlowVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFlowVariableReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).GetFlowVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.FlowService/GetFlowVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).GetFlowVariable(ctx, req.(*GetFlowVariableReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowService_SetFlowVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetFlowVariableReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).SetFlowVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.FlowService/SetFlowVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).SetFlowVariable(ctx, req.(*SetFlowVariableReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowService_WatchFlowVariable_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchFlowVariableReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FlowServiceServer).WatchFlowVariable(m, &flowServiceWatchFlowVariableServer{stream})
}

type FlowService_WatchFlowVariableServer interface {
	Send(*WatchFlowVariableRes) error
	grpc.ServerStream
}

type flowServiceWatchFlowVariableServer struct {
	grpc.ServerStream
}

func (x *flowServiceWatchFlowVariableServer) Send(m *WatchFlowVariableRes) error {
	return x.ServerStream.SendMsg(m)
}

func _FlowService_SendFlowUI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendFlowUIReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).SendFlowUI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.FlowService/SendFlowUI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).SendFlowUI(ctx, req.(*SendFlowUIReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowService_WatchFlowUI_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchFlowUIReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FlowServiceServer).WatchFlowUI(m, &flowServiceWatchFlowUIServer{stream})
}

type FlowService_WatchFlowUIServer interface {
	Send(*WatchFlowUIRes) error
	grpc.ServerStream
}

type flowServiceWatchFlowUIServer struct {
	grpc.ServerStream
}

func (x *flowServiceWatchFlowUIServer) Send(m *WatchFlowUIRes) error {
	return x.ServerStream.SendMsg(m)
}

func _FlowService_SetFlowStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetFlowStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).SetFlowStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.FlowService/SetFlowStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).SetFlowStatus(ctx, req.(*SetFlowStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowService_StartFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartFlowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).StartFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.FlowService/StartFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).StartFlow(ctx, req.(*StartFlowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowService_StopFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopFlowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).StopFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.FlowService/StopFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).StopFlow(ctx, req.(*StopFlowReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _FlowService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "schema.FlowService",
	HandlerType: (*FlowServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFlow",
			Handler:    _FlowService_GetFlow_Handler,
		},
		{
			MethodName: "AddFlow",
			Handler:    _FlowService_AddFlow_Handler,
		},
		{
			MethodName: "RemoveFlow",
			Handler:    _FlowService_RemoveFlow_Handler,
		},
		{
			MethodName: "GetFlowVariable",
			Handler:    _FlowService_GetFlowVariable_Handler,
		},
		{
			MethodName: "SetFlowVariable",
			Handler:    _FlowService_SetFlowVariable_Handler,
		},
		{
			MethodName: "SendFlowUI",
			Handler:    _FlowService_SendFlowUI_Handler,
		},
		{
			MethodName: "SetFlowStatus",
			Handler:    _FlowService_SetFlowStatus_Handler,
		},
		{
			MethodName: "StartFlow",
			Handler:    _FlowService_StartFlow_Handler,
		},
		{
			MethodName: "StopFlow",
			Handler:    _FlowService_StopFlow_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchFlowVariable",
			Handler:       _FlowService_WatchFlowVariable_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "WatchFlowUI",
			Handler:       _FlowService_WatchFlowUI_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "flow_service.proto",
}
