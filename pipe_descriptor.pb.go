// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pipe_descriptor.proto

package gapi

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PipeDescriptorParam_Type int32

const (
	PipeDescriptorParam_Unknown PipeDescriptorParam_Type = 0
	PipeDescriptorParam_Int     PipeDescriptorParam_Type = 1
	PipeDescriptorParam_String  PipeDescriptorParam_Type = 2
	PipeDescriptorParam_Bool    PipeDescriptorParam_Type = 3
	PipeDescriptorParam_JSON    PipeDescriptorParam_Type = 4
	PipeDescriptorParam_JS      PipeDescriptorParam_Type = 5
)

var PipeDescriptorParam_Type_name = map[int32]string{
	0: "Unknown",
	1: "Int",
	2: "String",
	3: "Bool",
	4: "JSON",
	5: "JS",
}

var PipeDescriptorParam_Type_value = map[string]int32{
	"Unknown": 0,
	"Int":     1,
	"String":  2,
	"Bool":    3,
	"JSON":    4,
	"JS":      5,
}

func (x PipeDescriptorParam_Type) String() string {
	return proto.EnumName(PipeDescriptorParam_Type_name, int32(x))
}

func (PipeDescriptorParam_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c37d283b047c79a9, []int{1, 0}
}

type PipeDescriptorParamView_Type int32

const (
	PipeDescriptorParamView_Unknown PipeDescriptorParamView_Type = 0
)

var PipeDescriptorParamView_Type_name = map[int32]string{
	0: "Unknown",
}

var PipeDescriptorParamView_Type_value = map[string]int32{
	"Unknown": 0,
}

func (x PipeDescriptorParamView_Type) String() string {
	return proto.EnumName(PipeDescriptorParamView_Type_name, int32(x))
}

func (PipeDescriptorParamView_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c37d283b047c79a9, []int{2, 0}
}

type PipeDescriptor struct {
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PluginId             string                 `protobuf:"bytes,3,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	Description          string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Color                string                 `protobuf:"bytes,9,opt,name=color,proto3" json:"color,omitempty"`
	TextAlign            string                 `protobuf:"bytes,10,opt,name=text_align,json=textAlign,proto3" json:"text_align,omitempty"`
	Params               []*PipeDescriptorParam `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty"`
	Inputs               []string               `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty"`
	InputsExp            string                 `protobuf:"bytes,11,opt,name=inputs_exp,json=inputsExp,proto3" json:"inputs_exp,omitempty"`
	Outputs              []string               `protobuf:"bytes,7,rep,name=outputs,proto3" json:"outputs,omitempty"`
	OutputsExp           string                 `protobuf:"bytes,12,opt,name=outputs_exp,json=outputsExp,proto3" json:"outputs_exp,omitempty"`
	NeedInit             bool                   `protobuf:"varint,8,opt,name=need_init,json=needInit,proto3" json:"need_init,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PipeDescriptor) Reset()         { *m = PipeDescriptor{} }
func (m *PipeDescriptor) String() string { return proto.CompactTextString(m) }
func (*PipeDescriptor) ProtoMessage()    {}
func (*PipeDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_c37d283b047c79a9, []int{0}
}

func (m *PipeDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeDescriptor.Unmarshal(m, b)
}
func (m *PipeDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeDescriptor.Marshal(b, m, deterministic)
}
func (m *PipeDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeDescriptor.Merge(m, src)
}
func (m *PipeDescriptor) XXX_Size() int {
	return xxx_messageInfo_PipeDescriptor.Size(m)
}
func (m *PipeDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_PipeDescriptor proto.InternalMessageInfo

func (m *PipeDescriptor) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PipeDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PipeDescriptor) GetPluginId() string {
	if m != nil {
		return m.PluginId
	}
	return ""
}

func (m *PipeDescriptor) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PipeDescriptor) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *PipeDescriptor) GetTextAlign() string {
	if m != nil {
		return m.TextAlign
	}
	return ""
}

func (m *PipeDescriptor) GetParams() []*PipeDescriptorParam {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PipeDescriptor) GetInputs() []string {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *PipeDescriptor) GetInputsExp() string {
	if m != nil {
		return m.InputsExp
	}
	return ""
}

func (m *PipeDescriptor) GetOutputs() []string {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *PipeDescriptor) GetOutputsExp() string {
	if m != nil {
		return m.OutputsExp
	}
	return ""
}

func (m *PipeDescriptor) GetNeedInit() bool {
	if m != nil {
		return m.NeedInit
	}
	return false
}

type PipeDescriptorParam struct {
	Name                 string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type                 PipeDescriptorParam_Type `protobuf:"varint,3,opt,name=type,proto3,enum=schema.PipeDescriptorParam_Type" json:"type,omitempty"`
	DefaultValue         *Any                     `protobuf:"bytes,4,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PipeDescriptorParam) Reset()         { *m = PipeDescriptorParam{} }
func (m *PipeDescriptorParam) String() string { return proto.CompactTextString(m) }
func (*PipeDescriptorParam) ProtoMessage()    {}
func (*PipeDescriptorParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_c37d283b047c79a9, []int{1}
}

func (m *PipeDescriptorParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeDescriptorParam.Unmarshal(m, b)
}
func (m *PipeDescriptorParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeDescriptorParam.Marshal(b, m, deterministic)
}
func (m *PipeDescriptorParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeDescriptorParam.Merge(m, src)
}
func (m *PipeDescriptorParam) XXX_Size() int {
	return xxx_messageInfo_PipeDescriptorParam.Size(m)
}
func (m *PipeDescriptorParam) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeDescriptorParam.DiscardUnknown(m)
}

var xxx_messageInfo_PipeDescriptorParam proto.InternalMessageInfo

func (m *PipeDescriptorParam) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PipeDescriptorParam) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PipeDescriptorParam) GetType() PipeDescriptorParam_Type {
	if m != nil {
		return m.Type
	}
	return PipeDescriptorParam_Unknown
}

func (m *PipeDescriptorParam) GetDefaultValue() *Any {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

type PipeDescriptorParamView struct {
	Title                string                       `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string                       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type                 PipeDescriptorParamView_Type `protobuf:"varint,3,opt,name=type,proto3,enum=schema.PipeDescriptorParamView_Type" json:"type,omitempty"`
	Min                  int32                        `protobuf:"varint,4,opt,name=min,proto3" json:"min,omitempty"`
	Max                  int32                        `protobuf:"varint,5,opt,name=max,proto3" json:"max,omitempty"`
	Values               []*Any                       `protobuf:"bytes,6,rep,name=values,proto3" json:"values,omitempty"`
	Map                  map[string]*Any              `protobuf:"bytes,7,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Input                bool                         `protobuf:"varint,8,opt,name=input,proto3" json:"input,omitempty"`
	Output               bool                         `protobuf:"varint,9,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *PipeDescriptorParamView) Reset()         { *m = PipeDescriptorParamView{} }
func (m *PipeDescriptorParamView) String() string { return proto.CompactTextString(m) }
func (*PipeDescriptorParamView) ProtoMessage()    {}
func (*PipeDescriptorParamView) Descriptor() ([]byte, []int) {
	return fileDescriptor_c37d283b047c79a9, []int{2}
}

func (m *PipeDescriptorParamView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeDescriptorParamView.Unmarshal(m, b)
}
func (m *PipeDescriptorParamView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeDescriptorParamView.Marshal(b, m, deterministic)
}
func (m *PipeDescriptorParamView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeDescriptorParamView.Merge(m, src)
}
func (m *PipeDescriptorParamView) XXX_Size() int {
	return xxx_messageInfo_PipeDescriptorParamView.Size(m)
}
func (m *PipeDescriptorParamView) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeDescriptorParamView.DiscardUnknown(m)
}

var xxx_messageInfo_PipeDescriptorParamView proto.InternalMessageInfo

func (m *PipeDescriptorParamView) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PipeDescriptorParamView) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PipeDescriptorParamView) GetType() PipeDescriptorParamView_Type {
	if m != nil {
		return m.Type
	}
	return PipeDescriptorParamView_Unknown
}

func (m *PipeDescriptorParamView) GetMin() int32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *PipeDescriptorParamView) GetMax() int32 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *PipeDescriptorParamView) GetValues() []*Any {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *PipeDescriptorParamView) GetMap() map[string]*Any {
	if m != nil {
		return m.Map
	}
	return nil
}

func (m *PipeDescriptorParamView) GetInput() bool {
	if m != nil {
		return m.Input
	}
	return false
}

func (m *PipeDescriptorParamView) GetOutput() bool {
	if m != nil {
		return m.Output
	}
	return false
}

func init() {
	proto.RegisterEnum("schema.PipeDescriptorParam_Type", PipeDescriptorParam_Type_name, PipeDescriptorParam_Type_value)
	proto.RegisterEnum("schema.PipeDescriptorParamView_Type", PipeDescriptorParamView_Type_name, PipeDescriptorParamView_Type_value)
	proto.RegisterType((*PipeDescriptor)(nil), "schema.PipeDescriptor")
	proto.RegisterType((*PipeDescriptorParam)(nil), "schema.PipeDescriptorParam")
	proto.RegisterType((*PipeDescriptorParamView)(nil), "schema.PipeDescriptorParamView")
	proto.RegisterMapType((map[string]*Any)(nil), "schema.PipeDescriptorParamView.MapEntry")
}

func init() { proto.RegisterFile("pipe_descriptor.proto", fileDescriptor_c37d283b047c79a9) }

var fileDescriptor_c37d283b047c79a9 = []byte{
	// 548 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x9f, 0xb1, 0xc7, 0xa5, 0xb2, 0xa6, 0x7c, 0xac, 0x5a, 0x21, 0x4c, 0xe0, 0x90, 0x53,
	0x84, 0x52, 0x0e, 0x55, 0x6f, 0x2d, 0xed, 0xa1, 0x95, 0x80, 0xca, 0x81, 0x1e, 0xb8, 0x58, 0x4b,
	0xbc, 0x84, 0x55, 0x9d, 0xf5, 0xca, 0xd9, 0xd0, 0xf8, 0x9f, 0xf0, 0x23, 0xf9, 0x03, 0xdc, 0xd0,
	0xee, 0x3a, 0x55, 0xda, 0x46, 0x85, 0xdb, 0xcc, 0x9b, 0x79, 0x9a, 0xd9, 0x37, 0xcf, 0x86, 0xa7,
	0x92, 0x4b, 0x56, 0x94, 0x6c, 0x3e, 0x69, 0xb8, 0x54, 0x75, 0x33, 0x94, 0x4d, 0xad, 0x6a, 0x0c,
	0xe7, 0x93, 0x1f, 0x6c, 0x46, 0x77, 0x63, 0x2a, 0x5a, 0x0b, 0xf5, 0x7f, 0xbb, 0xb0, 0x7d, 0xc1,
	0x25, 0x3b, 0xb9, 0xe9, 0xc5, 0x6d, 0x70, 0x79, 0x49, 0x9c, 0xcc, 0x19, 0xc4, 0xb9, 0xcb, 0x4b,
	0x44, 0xf0, 0x05, 0x9d, 0x31, 0xe2, 0x1a, 0xc4, 0xc4, 0xb8, 0x07, 0xb1, 0xac, 0x16, 0x53, 0x2e,
	0x0a, 0x5e, 0x12, 0xcf, 0x14, 0x22, 0x0b, 0x9c, 0x95, 0x98, 0x41, 0xb2, 0x1a, 0xcd, 0x6b, 0x41,
	0x7c, 0x53, 0x5e, 0x87, 0xf0, 0x09, 0x04, 0x93, 0xba, 0xaa, 0x1b, 0x12, 0x9b, 0x9a, 0x4d, 0xf0,
	0x05, 0x80, 0x62, 0x4b, 0x55, 0xd0, 0x8a, 0x4f, 0x05, 0x01, 0x53, 0x8a, 0x35, 0x72, 0xa4, 0x01,
	0xdc, 0x87, 0x50, 0xd2, 0x86, 0xce, 0xe6, 0x24, 0xc8, 0xbc, 0x41, 0x32, 0xda, 0x1b, 0xda, 0xe7,
	0x0c, 0x6f, 0xef, 0x7f, 0xa1, 0x7b, 0xf2, 0xae, 0x15, 0x9f, 0x41, 0xc8, 0x85, 0x5c, 0xa8, 0x39,
	0x09, 0x33, 0x6f, 0x10, 0xe7, 0x5d, 0xa6, 0x67, 0xd9, 0xa8, 0x60, 0x4b, 0x49, 0x12, 0x3b, 0xcb,
	0x22, 0xa7, 0x4b, 0x89, 0x04, 0x7a, 0xf5, 0x42, 0x19, 0x5e, 0xcf, 0xf0, 0x56, 0x29, 0xbe, 0x84,
	0xa4, 0x0b, 0x0d, 0x73, 0xcb, 0x30, 0xa1, 0x83, 0x34, 0x75, 0x0f, 0x62, 0xc1, 0x58, 0x59, 0x70,
	0xc1, 0x15, 0x89, 0x32, 0x67, 0x10, 0xe5, 0x91, 0x06, 0xce, 0x04, 0x57, 0xfd, 0x3f, 0x0e, 0xec,
	0x6c, 0x58, 0xf7, 0x46, 0x63, 0x67, 0x4d, 0xe3, 0x3b, 0x32, 0xba, 0xf7, 0x65, 0x7c, 0x07, 0xbe,
	0x6a, 0x25, 0x33, 0x07, 0xd8, 0x1e, 0x65, 0x0f, 0xe8, 0x31, 0xfc, 0xdc, 0x4a, 0x96, 0x9b, 0x6e,
	0x7c, 0x0b, 0x8f, 0x4b, 0xf6, 0x9d, 0x2e, 0x2a, 0x55, 0xfc, 0xa4, 0xd5, 0x82, 0x99, 0x03, 0x25,
	0xa3, 0x64, 0x45, 0x3f, 0x12, 0x6d, 0xbe, 0xd5, 0x75, 0x5c, 0xea, 0x86, 0xfe, 0x09, 0xf8, 0x9a,
	0x8f, 0x09, 0xf4, 0xbe, 0x88, 0x2b, 0x51, 0x5f, 0x8b, 0xf4, 0x11, 0xf6, 0xc0, 0x3b, 0x13, 0x2a,
	0x75, 0x10, 0x20, 0x1c, 0xab, 0x86, 0x8b, 0x69, 0xea, 0x62, 0x04, 0xfe, 0x71, 0x5d, 0x57, 0xa9,
	0xa7, 0xa3, 0xf3, 0xf1, 0xa7, 0x8f, 0xa9, 0x8f, 0x21, 0xb8, 0xe7, 0xe3, 0x34, 0xe8, 0xff, 0xf2,
	0xe0, 0xf9, 0x86, 0xd5, 0x2e, 0x39, 0xbb, 0xd6, 0x86, 0x50, 0x5c, 0x55, 0x2b, 0x01, 0x6c, 0xf2,
	0x1f, 0x0a, 0x1c, 0xdc, 0x52, 0xe0, 0xcd, 0x03, 0x0a, 0xe8, 0x31, 0xeb, 0x2a, 0xa4, 0xe0, 0xcd,
	0xb8, 0x35, 0x67, 0x90, 0xeb, 0xd0, 0x20, 0x74, 0x49, 0x82, 0x0e, 0xa1, 0x4b, 0x7c, 0x0d, 0xa1,
	0x51, 0xc8, 0x9a, 0xe7, 0x8e, 0x44, 0x5d, 0x09, 0x0f, 0x35, 0x4d, 0x1a, 0x9b, 0x24, 0xa3, 0xc1,
	0xbf, 0x36, 0xf8, 0x40, 0xe5, 0xa9, 0x50, 0x4d, 0xab, 0x07, 0x48, 0xfd, 0x6c, 0xe3, 0xb9, 0xce,
	0x27, 0x36, 0xd1, 0x9e, 0xb5, 0x7e, 0x32, 0x9f, 0x47, 0x94, 0x77, 0xd9, 0xee, 0x7b, 0x88, 0x56,
	0x74, 0xbd, 0xec, 0x15, 0x6b, 0x3b, 0xb9, 0x74, 0x88, 0xaf, 0x20, 0xb0, 0xe7, 0x74, 0xef, 0x9f,
	0xd3, 0x56, 0x0e, 0xdd, 0x03, 0xa7, 0xbf, 0xb3, 0xe1, 0x96, 0xc7, 0xe1, 0x57, 0x7f, 0x4a, 0x25,
	0xff, 0x16, 0x9a, 0x9f, 0xc2, 0xfe, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xee, 0x6d, 0x1a, 0x34,
	0x40, 0x04, 0x00, 0x00,
}
