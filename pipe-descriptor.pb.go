// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pipe-descriptor.proto

package gapi

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PipeDescriptor struct {
	ID                   string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PluginID             string                 `protobuf:"bytes,3,opt,name=pluginID,proto3" json:"pluginID,omitempty"`
	Description          string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Params               []*PipeDescriptorParam `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty"`
	Inputs               []string               `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs              []string               `protobuf:"bytes,7,rep,name=outputs,proto3" json:"outputs,omitempty"`
	NeedInit             bool                   `protobuf:"varint,8,opt,name=needInit,proto3" json:"needInit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PipeDescriptor) Reset()         { *m = PipeDescriptor{} }
func (m *PipeDescriptor) String() string { return proto.CompactTextString(m) }
func (*PipeDescriptor) ProtoMessage()    {}
func (*PipeDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba94fe1adeb77bc0, []int{0}
}

func (m *PipeDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeDescriptor.Unmarshal(m, b)
}
func (m *PipeDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeDescriptor.Marshal(b, m, deterministic)
}
func (m *PipeDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeDescriptor.Merge(m, src)
}
func (m *PipeDescriptor) XXX_Size() int {
	return xxx_messageInfo_PipeDescriptor.Size(m)
}
func (m *PipeDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_PipeDescriptor proto.InternalMessageInfo

func (m *PipeDescriptor) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *PipeDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PipeDescriptor) GetPluginID() string {
	if m != nil {
		return m.PluginID
	}
	return ""
}

func (m *PipeDescriptor) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PipeDescriptor) GetParams() []*PipeDescriptorParam {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PipeDescriptor) GetInputs() []string {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *PipeDescriptor) GetOutputs() []string {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *PipeDescriptor) GetNeedInit() bool {
	if m != nil {
		return m.NeedInit
	}
	return false
}

type PipeDescriptorParam struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type                 VarType  `protobuf:"varint,3,opt,name=type,proto3,enum=schema.VarType" json:"type,omitempty"`
	DefaultValue         *Value   `protobuf:"bytes,4,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PipeDescriptorParam) Reset()         { *m = PipeDescriptorParam{} }
func (m *PipeDescriptorParam) String() string { return proto.CompactTextString(m) }
func (*PipeDescriptorParam) ProtoMessage()    {}
func (*PipeDescriptorParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba94fe1adeb77bc0, []int{1}
}

func (m *PipeDescriptorParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeDescriptorParam.Unmarshal(m, b)
}
func (m *PipeDescriptorParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeDescriptorParam.Marshal(b, m, deterministic)
}
func (m *PipeDescriptorParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeDescriptorParam.Merge(m, src)
}
func (m *PipeDescriptorParam) XXX_Size() int {
	return xxx_messageInfo_PipeDescriptorParam.Size(m)
}
func (m *PipeDescriptorParam) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeDescriptorParam.DiscardUnknown(m)
}

var xxx_messageInfo_PipeDescriptorParam proto.InternalMessageInfo

func (m *PipeDescriptorParam) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PipeDescriptorParam) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PipeDescriptorParam) GetType() VarType {
	if m != nil {
		return m.Type
	}
	return VarType_INT
}

func (m *PipeDescriptorParam) GetDefaultValue() *Value {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

func init() {
	proto.RegisterType((*PipeDescriptor)(nil), "schema.PipeDescriptor")
	proto.RegisterType((*PipeDescriptorParam)(nil), "schema.PipeDescriptorParam")
}

func init() { proto.RegisterFile("pipe-descriptor.proto", fileDescriptor_ba94fe1adeb77bc0) }

var fileDescriptor_ba94fe1adeb77bc0 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xbd, 0x4e, 0xeb, 0x30,
	0x18, 0x95, 0xd3, 0x5c, 0xb7, 0xfd, 0x72, 0x09, 0x92, 0x11, 0xc8, 0x2a, 0x4b, 0x54, 0x96, 0x2c,
	0xad, 0x44, 0xfb, 0x06, 0x28, 0x4b, 0xb6, 0xca, 0x42, 0x1d, 0xd8, 0x4c, 0x63, 0x8a, 0xa5, 0xc4,
	0xb1, 0x1c, 0xbb, 0x52, 0x9f, 0x87, 0x67, 0x64, 0x47, 0x71, 0x93, 0xd0, 0x02, 0x5b, 0xce, 0x4f,
	0xe4, 0x73, 0xce, 0x07, 0xb7, 0x5a, 0x6a, 0xb1, 0x28, 0x44, 0xb3, 0x33, 0x52, 0xdb, 0xda, 0x2c,
	0xb5, 0xa9, 0x6d, 0x4d, 0x70, 0xb3, 0x7b, 0x17, 0x15, 0x9f, 0x45, 0x07, 0x5e, 0x3a, 0x71, 0x22,
	0x67, 0xf1, 0x81, 0x9b, 0x85, 0x3d, 0xea, 0x0e, 0xcf, 0x3f, 0x11, 0xc4, 0x1b, 0xa9, 0x45, 0x36,
	0xfc, 0x4d, 0x62, 0x08, 0xf2, 0x8c, 0xa2, 0x04, 0xa5, 0x53, 0x16, 0xe4, 0x19, 0x21, 0x10, 0x2a,
	0x5e, 0x09, 0x1a, 0x78, 0xc6, 0x7f, 0x93, 0x19, 0x4c, 0x74, 0xe9, 0xf6, 0x52, 0xe5, 0x19, 0x1d,
	0x79, 0x7e, 0xc0, 0x24, 0x81, 0xa8, 0xcf, 0x22, 0x6b, 0x45, 0x43, 0x2f, 0x9f, 0x53, 0x64, 0x0d,
	0x58, 0x73, 0xc3, 0xab, 0x86, 0xfe, 0x4b, 0x46, 0x69, 0xb4, 0xba, 0x5f, 0x9e, 0xa2, 0x2e, 0x2f,
	0x93, 0x6c, 0x5a, 0x0f, 0xeb, 0xac, 0xe4, 0x0e, 0xb0, 0x54, 0xda, 0xd9, 0x86, 0xe2, 0x64, 0x94,
	0x4e, 0x59, 0x87, 0x08, 0x85, 0x71, 0xed, 0xac, 0x17, 0xc6, 0x5e, 0xe8, 0x61, 0x1b, 0x52, 0x09,
	0x51, 0xe4, 0x4a, 0x5a, 0x3a, 0x49, 0x50, 0x3a, 0x61, 0x03, 0x9e, 0x7f, 0x20, 0xb8, 0xf9, 0xe3,
	0xb5, 0xa1, 0x2c, 0x3a, 0x2b, 0xfb, 0xa3, 0x50, 0xf0, 0xbb, 0xd0, 0x03, 0x84, 0xed, 0xa6, 0x7e,
	0x8a, 0x78, 0x75, 0xdd, 0xd7, 0xd9, 0x72, 0xf3, 0x7c, 0xd4, 0x82, 0x79, 0x91, 0x3c, 0xc2, 0xff,
	0x42, 0xbc, 0x71, 0x57, 0xda, 0x6d, 0x7b, 0x10, 0x3f, 0x4c, 0xb4, 0xba, 0xfa, 0x36, 0x97, 0x4e,
	0xb0, 0x0b, 0xcb, 0x13, 0x7e, 0x09, 0xf7, 0x5c, 0xcb, 0x57, 0xec, 0x8f, 0xb5, 0xfe, 0x0a, 0x00,
	0x00, 0xff, 0xff, 0x2a, 0xf0, 0xb5, 0x95, 0xea, 0x01, 0x00, 0x00,
}
