// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flow.proto

package gapi

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FlowStatus int32

const (
	FlowStatus_STOPPED  FlowStatus = 0
	FlowStatus_STARTING FlowStatus = 1
	FlowStatus_RUNNING  FlowStatus = 2
)

var FlowStatus_name = map[int32]string{
	0: "STOPPED",
	1: "STARTING",
	2: "RUNNING",
}

var FlowStatus_value = map[string]int32{
	"STOPPED":  0,
	"STARTING": 1,
	"RUNNING":  2,
}

func (x FlowStatus) String() string {
	return proto.EnumName(FlowStatus_name, int32(x))
}

func (FlowStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bb3fc33c49933823, []int{0}
}

type Flow struct {
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	FlowDescriptorId     string          `protobuf:"bytes,3,opt,name=flow_descriptor_id,json=flowDescriptorId,proto3" json:"flow_descriptor_id,omitempty"`
	Status               FlowStatus      `protobuf:"varint,4,opt,name=status,proto3,enum=schema.FlowStatus" json:"status,omitempty"`
	CreatedAt            *UnixTime       `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *UnixTime       `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Variables            map[string]*Any `protobuf:"bytes,7,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UiVariables          map[string]*Any `protobuf:"bytes,8,rep,name=ui_variables,json=uiVariables,proto3" json:"ui_variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Flow) Reset()         { *m = Flow{} }
func (m *Flow) String() string { return proto.CompactTextString(m) }
func (*Flow) ProtoMessage()    {}
func (*Flow) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb3fc33c49933823, []int{0}
}

func (m *Flow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flow.Unmarshal(m, b)
}
func (m *Flow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flow.Marshal(b, m, deterministic)
}
func (m *Flow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flow.Merge(m, src)
}
func (m *Flow) XXX_Size() int {
	return xxx_messageInfo_Flow.Size(m)
}
func (m *Flow) XXX_DiscardUnknown() {
	xxx_messageInfo_Flow.DiscardUnknown(m)
}

var xxx_messageInfo_Flow proto.InternalMessageInfo

func (m *Flow) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Flow) GetFlowDescriptorId() string {
	if m != nil {
		return m.FlowDescriptorId
	}
	return ""
}

func (m *Flow) GetStatus() FlowStatus {
	if m != nil {
		return m.Status
	}
	return FlowStatus_STOPPED
}

func (m *Flow) GetCreatedAt() *UnixTime {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Flow) GetUpdatedAt() *UnixTime {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Flow) GetVariables() map[string]*Any {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *Flow) GetUiVariables() map[string]*Any {
	if m != nil {
		return m.UiVariables
	}
	return nil
}

func init() {
	proto.RegisterEnum("schema.FlowStatus", FlowStatus_name, FlowStatus_value)
	proto.RegisterType((*Flow)(nil), "schema.Flow")
	proto.RegisterMapType((map[string]*Any)(nil), "schema.Flow.UiVariablesEntry")
	proto.RegisterMapType((map[string]*Any)(nil), "schema.Flow.VariablesEntry")
}

func init() { proto.RegisterFile("flow.proto", fileDescriptor_bb3fc33c49933823) }

var fileDescriptor_bb3fc33c49933823 = []byte{
	// 355 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xc1, 0x4e, 0xab, 0x40,
	0x14, 0x86, 0x2f, 0xd0, 0xd2, 0x72, 0x68, 0x7a, 0xc9, 0xac, 0x08, 0xc6, 0x04, 0x5d, 0x91, 0xc6,
	0x60, 0x82, 0x2e, 0xd4, 0x95, 0x98, 0x56, 0xd3, 0x98, 0xd4, 0x86, 0x52, 0x17, 0x6e, 0xc8, 0xb4,
	0x8c, 0x3a, 0x91, 0x02, 0x81, 0xa1, 0x2d, 0x4f, 0xec, 0x6b, 0x18, 0xa0, 0x88, 0x6d, 0xe2, 0xc6,
	0xdd, 0xc0, 0xf7, 0x7f, 0xff, 0x21, 0x87, 0x01, 0x78, 0x0d, 0xa2, 0x8d, 0x19, 0x27, 0x11, 0x8b,
	0x90, 0x98, 0x2e, 0xdf, 0xc9, 0x0a, 0x6b, 0xff, 0xb3, 0x90, 0x6e, 0x3d, 0x46, 0x57, 0xa4, 0x02,
	0x9a, 0x84, 0xc3, 0xbc, 0x3a, 0x9e, 0x7e, 0x0a, 0xd0, 0xba, 0x0f, 0xa2, 0x0d, 0xea, 0x03, 0x4f,
	0x7d, 0x95, 0xd7, 0x39, 0x43, 0x72, 0x78, 0xea, 0xa3, 0x33, 0x40, 0x45, 0x95, 0xe7, 0x93, 0x74,
	0x99, 0xd0, 0x98, 0x45, 0x89, 0x47, 0x7d, 0x55, 0x28, 0xb9, 0x52, 0x90, 0xe1, 0x37, 0x18, 0xfb,
	0x68, 0x00, 0x62, 0xca, 0x30, 0xcb, 0x52, 0xb5, 0xa5, 0x73, 0x46, 0xdf, 0x42, 0x66, 0x35, 0xdb,
	0x2c, 0xba, 0x67, 0x25, 0x71, 0x76, 0x09, 0x74, 0x0e, 0xb0, 0x4c, 0x08, 0x66, 0xc4, 0xf7, 0x30,
	0x53, 0xdb, 0x3a, 0x67, 0xc8, 0x96, 0x52, 0xe7, 0xe7, 0x21, 0xdd, 0xba, 0x74, 0x45, 0x1c, 0x69,
	0x97, 0xb1, 0x59, 0x21, 0x64, 0xb1, 0x5f, 0x0b, 0xe2, 0x6f, 0xc2, 0x2e, 0x63, 0x33, 0x74, 0x0d,
	0xd2, 0x1a, 0x27, 0x14, 0x2f, 0x02, 0x92, 0xaa, 0x1d, 0x5d, 0x30, 0x64, 0xeb, 0xe8, 0xe7, 0x07,
	0x99, 0xcf, 0x35, 0x1d, 0x85, 0x2c, 0xc9, 0x9d, 0x26, 0x8d, 0x6e, 0xa1, 0x97, 0x51, 0xaf, 0xb1,
	0xbb, 0xa5, 0x7d, 0xbc, 0x67, 0xcf, 0xe9, 0x81, 0x2f, 0x67, 0xcd, 0x1b, 0x6d, 0x0c, 0xfd, 0x7d,
	0x8c, 0x14, 0x10, 0x3e, 0x48, 0xae, 0x72, 0xe5, 0xee, 0x8a, 0x23, 0x3a, 0x81, 0xf6, 0x1a, 0x07,
	0x19, 0x29, 0xf7, 0x2d, 0x5b, 0x72, 0x5d, 0x6f, 0x87, 0xb9, 0x53, 0x91, 0x1b, 0xfe, 0x8a, 0xd3,
	0x1e, 0x41, 0x39, 0x9c, 0xf5, 0xe7, 0xb2, 0xc1, 0x25, 0x40, 0xf3, 0x33, 0x90, 0x0c, 0x9d, 0x99,
	0xfb, 0x34, 0x9d, 0x8e, 0x86, 0xca, 0x3f, 0xd4, 0x83, 0xee, 0xcc, 0xb5, 0x1d, 0x77, 0x3c, 0x79,
	0x50, 0xb8, 0x02, 0x39, 0xf3, 0xc9, 0xa4, 0x78, 0xe0, 0xef, 0xc4, 0x97, 0xd6, 0x1b, 0x8e, 0xe9,
	0x42, 0x2c, 0xaf, 0xcb, 0xc5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x35, 0x34, 0xb9, 0x60,
	0x02, 0x00, 0x00,
}
