// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eviot_service.proto

package gapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetTokenReq struct {
	// Types that are valid to be assigned to Filter:
	//	*GetTokenReq_Value
	//	*GetTokenReq_TargetId
	//	*GetTokenReq_UserId
	Filter               isGetTokenReq_Filter `protobuf_oneof:"filter"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetTokenReq) Reset()         { *m = GetTokenReq{} }
func (m *GetTokenReq) String() string { return proto.CompactTextString(m) }
func (*GetTokenReq) ProtoMessage()    {}
func (*GetTokenReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{0}
}

func (m *GetTokenReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenReq.Unmarshal(m, b)
}
func (m *GetTokenReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenReq.Marshal(b, m, deterministic)
}
func (m *GetTokenReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenReq.Merge(m, src)
}
func (m *GetTokenReq) XXX_Size() int {
	return xxx_messageInfo_GetTokenReq.Size(m)
}
func (m *GetTokenReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenReq proto.InternalMessageInfo

type isGetTokenReq_Filter interface {
	isGetTokenReq_Filter()
}

type GetTokenReq_Value struct {
	Value string `protobuf:"bytes,1,opt,name=value,proto3,oneof"`
}

type GetTokenReq_TargetId struct {
	TargetId string `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3,oneof"`
}

type GetTokenReq_UserId struct {
	UserId string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3,oneof"`
}

func (*GetTokenReq_Value) isGetTokenReq_Filter() {}

func (*GetTokenReq_TargetId) isGetTokenReq_Filter() {}

func (*GetTokenReq_UserId) isGetTokenReq_Filter() {}

func (m *GetTokenReq) GetFilter() isGetTokenReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *GetTokenReq) GetValue() string {
	if x, ok := m.GetFilter().(*GetTokenReq_Value); ok {
		return x.Value
	}
	return ""
}

func (m *GetTokenReq) GetTargetId() string {
	if x, ok := m.GetFilter().(*GetTokenReq_TargetId); ok {
		return x.TargetId
	}
	return ""
}

func (m *GetTokenReq) GetUserId() string {
	if x, ok := m.GetFilter().(*GetTokenReq_UserId); ok {
		return x.UserId
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetTokenReq) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetTokenReq_Value)(nil),
		(*GetTokenReq_TargetId)(nil),
		(*GetTokenReq_UserId)(nil),
	}
}

type StartFlowReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartFlowReq) Reset()         { *m = StartFlowReq{} }
func (m *StartFlowReq) String() string { return proto.CompactTextString(m) }
func (*StartFlowReq) ProtoMessage()    {}
func (*StartFlowReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{1}
}

func (m *StartFlowReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFlowReq.Unmarshal(m, b)
}
func (m *StartFlowReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFlowReq.Marshal(b, m, deterministic)
}
func (m *StartFlowReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFlowReq.Merge(m, src)
}
func (m *StartFlowReq) XXX_Size() int {
	return xxx_messageInfo_StartFlowReq.Size(m)
}
func (m *StartFlowReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFlowReq.DiscardUnknown(m)
}

var xxx_messageInfo_StartFlowReq proto.InternalMessageInfo

func (m *StartFlowReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StartFlowRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartFlowRes) Reset()         { *m = StartFlowRes{} }
func (m *StartFlowRes) String() string { return proto.CompactTextString(m) }
func (*StartFlowRes) ProtoMessage()    {}
func (*StartFlowRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{2}
}

func (m *StartFlowRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFlowRes.Unmarshal(m, b)
}
func (m *StartFlowRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFlowRes.Marshal(b, m, deterministic)
}
func (m *StartFlowRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFlowRes.Merge(m, src)
}
func (m *StartFlowRes) XXX_Size() int {
	return xxx_messageInfo_StartFlowRes.Size(m)
}
func (m *StartFlowRes) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFlowRes.DiscardUnknown(m)
}

var xxx_messageInfo_StartFlowRes proto.InternalMessageInfo

type StopFlowReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopFlowReq) Reset()         { *m = StopFlowReq{} }
func (m *StopFlowReq) String() string { return proto.CompactTextString(m) }
func (*StopFlowReq) ProtoMessage()    {}
func (*StopFlowReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{3}
}

func (m *StopFlowReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopFlowReq.Unmarshal(m, b)
}
func (m *StopFlowReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopFlowReq.Marshal(b, m, deterministic)
}
func (m *StopFlowReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopFlowReq.Merge(m, src)
}
func (m *StopFlowReq) XXX_Size() int {
	return xxx_messageInfo_StopFlowReq.Size(m)
}
func (m *StopFlowReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StopFlowReq.DiscardUnknown(m)
}

var xxx_messageInfo_StopFlowReq proto.InternalMessageInfo

func (m *StopFlowReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StopFlowRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopFlowRes) Reset()         { *m = StopFlowRes{} }
func (m *StopFlowRes) String() string { return proto.CompactTextString(m) }
func (*StopFlowRes) ProtoMessage()    {}
func (*StopFlowRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{4}
}

func (m *StopFlowRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopFlowRes.Unmarshal(m, b)
}
func (m *StopFlowRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopFlowRes.Marshal(b, m, deterministic)
}
func (m *StopFlowRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopFlowRes.Merge(m, src)
}
func (m *StopFlowRes) XXX_Size() int {
	return xxx_messageInfo_StopFlowRes.Size(m)
}
func (m *StopFlowRes) XXX_DiscardUnknown() {
	xxx_messageInfo_StopFlowRes.DiscardUnknown(m)
}

var xxx_messageInfo_StopFlowRes proto.InternalMessageInfo

type GetPluginReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPluginReq) Reset()         { *m = GetPluginReq{} }
func (m *GetPluginReq) String() string { return proto.CompactTextString(m) }
func (*GetPluginReq) ProtoMessage()    {}
func (*GetPluginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{5}
}

func (m *GetPluginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPluginReq.Unmarshal(m, b)
}
func (m *GetPluginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPluginReq.Marshal(b, m, deterministic)
}
func (m *GetPluginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPluginReq.Merge(m, src)
}
func (m *GetPluginReq) XXX_Size() int {
	return xxx_messageInfo_GetPluginReq.Size(m)
}
func (m *GetPluginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPluginReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPluginReq proto.InternalMessageInfo

func (m *GetPluginReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AddPluginReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PluginUri            string   `protobuf:"bytes,2,opt,name=plugin_uri,json=pluginUri,proto3" json:"plugin_uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPluginReq) Reset()         { *m = AddPluginReq{} }
func (m *AddPluginReq) String() string { return proto.CompactTextString(m) }
func (*AddPluginReq) ProtoMessage()    {}
func (*AddPluginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{6}
}

func (m *AddPluginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPluginReq.Unmarshal(m, b)
}
func (m *AddPluginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPluginReq.Marshal(b, m, deterministic)
}
func (m *AddPluginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPluginReq.Merge(m, src)
}
func (m *AddPluginReq) XXX_Size() int {
	return xxx_messageInfo_AddPluginReq.Size(m)
}
func (m *AddPluginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPluginReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddPluginReq proto.InternalMessageInfo

func (m *AddPluginReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddPluginReq) GetPluginUri() string {
	if m != nil {
		return m.PluginUri
	}
	return ""
}

type AddPluginRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPluginRes) Reset()         { *m = AddPluginRes{} }
func (m *AddPluginRes) String() string { return proto.CompactTextString(m) }
func (*AddPluginRes) ProtoMessage()    {}
func (*AddPluginRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{7}
}

func (m *AddPluginRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPluginRes.Unmarshal(m, b)
}
func (m *AddPluginRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPluginRes.Marshal(b, m, deterministic)
}
func (m *AddPluginRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPluginRes.Merge(m, src)
}
func (m *AddPluginRes) XXX_Size() int {
	return xxx_messageInfo_AddPluginRes.Size(m)
}
func (m *AddPluginRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPluginRes.DiscardUnknown(m)
}

var xxx_messageInfo_AddPluginRes proto.InternalMessageInfo

func (m *AddPluginRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AddPluginRes) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UpdatePluginReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PluginUri            string   `protobuf:"bytes,3,opt,name=plugin_uri,json=pluginUri,proto3" json:"plugin_uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePluginReq) Reset()         { *m = UpdatePluginReq{} }
func (m *UpdatePluginReq) String() string { return proto.CompactTextString(m) }
func (*UpdatePluginReq) ProtoMessage()    {}
func (*UpdatePluginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{8}
}

func (m *UpdatePluginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePluginReq.Unmarshal(m, b)
}
func (m *UpdatePluginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePluginReq.Marshal(b, m, deterministic)
}
func (m *UpdatePluginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePluginReq.Merge(m, src)
}
func (m *UpdatePluginReq) XXX_Size() int {
	return xxx_messageInfo_UpdatePluginReq.Size(m)
}
func (m *UpdatePluginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePluginReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePluginReq proto.InternalMessageInfo

func (m *UpdatePluginReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdatePluginReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdatePluginReq) GetPluginUri() string {
	if m != nil {
		return m.PluginUri
	}
	return ""
}

type UpdatePluginRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePluginRes) Reset()         { *m = UpdatePluginRes{} }
func (m *UpdatePluginRes) String() string { return proto.CompactTextString(m) }
func (*UpdatePluginRes) ProtoMessage()    {}
func (*UpdatePluginRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{9}
}

func (m *UpdatePluginRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePluginRes.Unmarshal(m, b)
}
func (m *UpdatePluginRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePluginRes.Marshal(b, m, deterministic)
}
func (m *UpdatePluginRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePluginRes.Merge(m, src)
}
func (m *UpdatePluginRes) XXX_Size() int {
	return xxx_messageInfo_UpdatePluginRes.Size(m)
}
func (m *UpdatePluginRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePluginRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePluginRes proto.InternalMessageInfo

func (m *UpdatePluginRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type RemovePluginReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePluginReq) Reset()         { *m = RemovePluginReq{} }
func (m *RemovePluginReq) String() string { return proto.CompactTextString(m) }
func (*RemovePluginReq) ProtoMessage()    {}
func (*RemovePluginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{10}
}

func (m *RemovePluginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePluginReq.Unmarshal(m, b)
}
func (m *RemovePluginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePluginReq.Marshal(b, m, deterministic)
}
func (m *RemovePluginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePluginReq.Merge(m, src)
}
func (m *RemovePluginReq) XXX_Size() int {
	return xxx_messageInfo_RemovePluginReq.Size(m)
}
func (m *RemovePluginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePluginReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePluginReq proto.InternalMessageInfo

func (m *RemovePluginReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemovePluginRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePluginRes) Reset()         { *m = RemovePluginRes{} }
func (m *RemovePluginRes) String() string { return proto.CompactTextString(m) }
func (*RemovePluginRes) ProtoMessage()    {}
func (*RemovePluginRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{11}
}

func (m *RemovePluginRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePluginRes.Unmarshal(m, b)
}
func (m *RemovePluginRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePluginRes.Marshal(b, m, deterministic)
}
func (m *RemovePluginRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePluginRes.Merge(m, src)
}
func (m *RemovePluginRes) XXX_Size() int {
	return xxx_messageInfo_RemovePluginRes.Size(m)
}
func (m *RemovePluginRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePluginRes.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePluginRes proto.InternalMessageInfo

func (m *RemovePluginRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type ListPluginsReq struct {
	Filter               *ListPluginsReq_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Sort                 *ListPluginsReq_Sort   `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Page                 *Page                  `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListPluginsReq) Reset()         { *m = ListPluginsReq{} }
func (m *ListPluginsReq) String() string { return proto.CompactTextString(m) }
func (*ListPluginsReq) ProtoMessage()    {}
func (*ListPluginsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{12}
}

func (m *ListPluginsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPluginsReq.Unmarshal(m, b)
}
func (m *ListPluginsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPluginsReq.Marshal(b, m, deterministic)
}
func (m *ListPluginsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPluginsReq.Merge(m, src)
}
func (m *ListPluginsReq) XXX_Size() int {
	return xxx_messageInfo_ListPluginsReq.Size(m)
}
func (m *ListPluginsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPluginsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListPluginsReq proto.InternalMessageInfo

func (m *ListPluginsReq) GetFilter() *ListPluginsReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ListPluginsReq) GetSort() *ListPluginsReq_Sort {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *ListPluginsReq) GetPage() *Page {
	if m != nil {
		return m.Page
	}
	return nil
}

type ListPluginsReq_Filter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPluginsReq_Filter) Reset()         { *m = ListPluginsReq_Filter{} }
func (m *ListPluginsReq_Filter) String() string { return proto.CompactTextString(m) }
func (*ListPluginsReq_Filter) ProtoMessage()    {}
func (*ListPluginsReq_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{12, 0}
}

func (m *ListPluginsReq_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPluginsReq_Filter.Unmarshal(m, b)
}
func (m *ListPluginsReq_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPluginsReq_Filter.Marshal(b, m, deterministic)
}
func (m *ListPluginsReq_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPluginsReq_Filter.Merge(m, src)
}
func (m *ListPluginsReq_Filter) XXX_Size() int {
	return xxx_messageInfo_ListPluginsReq_Filter.Size(m)
}
func (m *ListPluginsReq_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPluginsReq_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListPluginsReq_Filter proto.InternalMessageInfo

func (m *ListPluginsReq_Filter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListPluginsReq_Filter) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ListPluginsReq_Sort struct {
	Name                 SortDirection `protobuf:"varint,2,opt,name=name,proto3,enum=schema.SortDirection" json:"name,omitempty"`
	CreatedAt            SortDirection `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3,enum=schema.SortDirection" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListPluginsReq_Sort) Reset()         { *m = ListPluginsReq_Sort{} }
func (m *ListPluginsReq_Sort) String() string { return proto.CompactTextString(m) }
func (*ListPluginsReq_Sort) ProtoMessage()    {}
func (*ListPluginsReq_Sort) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{12, 1}
}

func (m *ListPluginsReq_Sort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPluginsReq_Sort.Unmarshal(m, b)
}
func (m *ListPluginsReq_Sort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPluginsReq_Sort.Marshal(b, m, deterministic)
}
func (m *ListPluginsReq_Sort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPluginsReq_Sort.Merge(m, src)
}
func (m *ListPluginsReq_Sort) XXX_Size() int {
	return xxx_messageInfo_ListPluginsReq_Sort.Size(m)
}
func (m *ListPluginsReq_Sort) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPluginsReq_Sort.DiscardUnknown(m)
}

var xxx_messageInfo_ListPluginsReq_Sort proto.InternalMessageInfo

func (m *ListPluginsReq_Sort) GetName() SortDirection {
	if m != nil {
		return m.Name
	}
	return SortDirection_NO_SORT
}

func (m *ListPluginsReq_Sort) GetCreatedAt() SortDirection {
	if m != nil {
		return m.CreatedAt
	}
	return SortDirection_NO_SORT
}

type ListPluginsRes struct {
	Plugins              []*Plugin `protobuf:"bytes,1,rep,name=plugins,proto3" json:"plugins,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListPluginsRes) Reset()         { *m = ListPluginsRes{} }
func (m *ListPluginsRes) String() string { return proto.CompactTextString(m) }
func (*ListPluginsRes) ProtoMessage()    {}
func (*ListPluginsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{13}
}

func (m *ListPluginsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPluginsRes.Unmarshal(m, b)
}
func (m *ListPluginsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPluginsRes.Marshal(b, m, deterministic)
}
func (m *ListPluginsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPluginsRes.Merge(m, src)
}
func (m *ListPluginsRes) XXX_Size() int {
	return xxx_messageInfo_ListPluginsRes.Size(m)
}
func (m *ListPluginsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPluginsRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListPluginsRes proto.InternalMessageInfo

func (m *ListPluginsRes) GetPlugins() []*Plugin {
	if m != nil {
		return m.Plugins
	}
	return nil
}

type GetFlowReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFlowReq) Reset()         { *m = GetFlowReq{} }
func (m *GetFlowReq) String() string { return proto.CompactTextString(m) }
func (*GetFlowReq) ProtoMessage()    {}
func (*GetFlowReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{14}
}

func (m *GetFlowReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlowReq.Unmarshal(m, b)
}
func (m *GetFlowReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlowReq.Marshal(b, m, deterministic)
}
func (m *GetFlowReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlowReq.Merge(m, src)
}
func (m *GetFlowReq) XXX_Size() int {
	return xxx_messageInfo_GetFlowReq.Size(m)
}
func (m *GetFlowReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlowReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlowReq proto.InternalMessageInfo

func (m *GetFlowReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AddFlowReq struct {
	FlowDescriptorId     string   `protobuf:"bytes,1,opt,name=flow_descriptor_id,json=flowDescriptorId,proto3" json:"flow_descriptor_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFlowReq) Reset()         { *m = AddFlowReq{} }
func (m *AddFlowReq) String() string { return proto.CompactTextString(m) }
func (*AddFlowReq) ProtoMessage()    {}
func (*AddFlowReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{15}
}

func (m *AddFlowReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFlowReq.Unmarshal(m, b)
}
func (m *AddFlowReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFlowReq.Marshal(b, m, deterministic)
}
func (m *AddFlowReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFlowReq.Merge(m, src)
}
func (m *AddFlowReq) XXX_Size() int {
	return xxx_messageInfo_AddFlowReq.Size(m)
}
func (m *AddFlowReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFlowReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddFlowReq proto.InternalMessageInfo

func (m *AddFlowReq) GetFlowDescriptorId() string {
	if m != nil {
		return m.FlowDescriptorId
	}
	return ""
}

type AddFlowRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFlowRes) Reset()         { *m = AddFlowRes{} }
func (m *AddFlowRes) String() string { return proto.CompactTextString(m) }
func (*AddFlowRes) ProtoMessage()    {}
func (*AddFlowRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{16}
}

func (m *AddFlowRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFlowRes.Unmarshal(m, b)
}
func (m *AddFlowRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFlowRes.Marshal(b, m, deterministic)
}
func (m *AddFlowRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFlowRes.Merge(m, src)
}
func (m *AddFlowRes) XXX_Size() int {
	return xxx_messageInfo_AddFlowRes.Size(m)
}
func (m *AddFlowRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFlowRes.DiscardUnknown(m)
}

var xxx_messageInfo_AddFlowRes proto.InternalMessageInfo

func (m *AddFlowRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AddFlowRes) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SetFlowStatusReq struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               FlowStatus `protobuf:"varint,2,opt,name=status,proto3,enum=schema.FlowStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SetFlowStatusReq) Reset()         { *m = SetFlowStatusReq{} }
func (m *SetFlowStatusReq) String() string { return proto.CompactTextString(m) }
func (*SetFlowStatusReq) ProtoMessage()    {}
func (*SetFlowStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{17}
}

func (m *SetFlowStatusReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFlowStatusReq.Unmarshal(m, b)
}
func (m *SetFlowStatusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFlowStatusReq.Marshal(b, m, deterministic)
}
func (m *SetFlowStatusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFlowStatusReq.Merge(m, src)
}
func (m *SetFlowStatusReq) XXX_Size() int {
	return xxx_messageInfo_SetFlowStatusReq.Size(m)
}
func (m *SetFlowStatusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFlowStatusReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetFlowStatusReq proto.InternalMessageInfo

func (m *SetFlowStatusReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SetFlowStatusReq) GetStatus() FlowStatus {
	if m != nil {
		return m.Status
	}
	return FlowStatus_STOPPED
}

type SetFlowStatusRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFlowStatusRes) Reset()         { *m = SetFlowStatusRes{} }
func (m *SetFlowStatusRes) String() string { return proto.CompactTextString(m) }
func (*SetFlowStatusRes) ProtoMessage()    {}
func (*SetFlowStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{18}
}

func (m *SetFlowStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFlowStatusRes.Unmarshal(m, b)
}
func (m *SetFlowStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFlowStatusRes.Marshal(b, m, deterministic)
}
func (m *SetFlowStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFlowStatusRes.Merge(m, src)
}
func (m *SetFlowStatusRes) XXX_Size() int {
	return xxx_messageInfo_SetFlowStatusRes.Size(m)
}
func (m *SetFlowStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFlowStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_SetFlowStatusRes proto.InternalMessageInfo

func (m *SetFlowStatusRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type SetFlowVariableReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value                *Any     `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFlowVariableReq) Reset()         { *m = SetFlowVariableReq{} }
func (m *SetFlowVariableReq) String() string { return proto.CompactTextString(m) }
func (*SetFlowVariableReq) ProtoMessage()    {}
func (*SetFlowVariableReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{19}
}

func (m *SetFlowVariableReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFlowVariableReq.Unmarshal(m, b)
}
func (m *SetFlowVariableReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFlowVariableReq.Marshal(b, m, deterministic)
}
func (m *SetFlowVariableReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFlowVariableReq.Merge(m, src)
}
func (m *SetFlowVariableReq) XXX_Size() int {
	return xxx_messageInfo_SetFlowVariableReq.Size(m)
}
func (m *SetFlowVariableReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFlowVariableReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetFlowVariableReq proto.InternalMessageInfo

func (m *SetFlowVariableReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SetFlowVariableReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SetFlowVariableReq) GetValue() *Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type SetFlowVariableRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFlowVariableRes) Reset()         { *m = SetFlowVariableRes{} }
func (m *SetFlowVariableRes) String() string { return proto.CompactTextString(m) }
func (*SetFlowVariableRes) ProtoMessage()    {}
func (*SetFlowVariableRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{20}
}

func (m *SetFlowVariableRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFlowVariableRes.Unmarshal(m, b)
}
func (m *SetFlowVariableRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFlowVariableRes.Marshal(b, m, deterministic)
}
func (m *SetFlowVariableRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFlowVariableRes.Merge(m, src)
}
func (m *SetFlowVariableRes) XXX_Size() int {
	return xxx_messageInfo_SetFlowVariableRes.Size(m)
}
func (m *SetFlowVariableRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFlowVariableRes.DiscardUnknown(m)
}

var xxx_messageInfo_SetFlowVariableRes proto.InternalMessageInfo

func (m *SetFlowVariableRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type SetFlowVariablesReq struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Variables            map[string]*Any `protobuf:"bytes,2,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SetFlowVariablesReq) Reset()         { *m = SetFlowVariablesReq{} }
func (m *SetFlowVariablesReq) String() string { return proto.CompactTextString(m) }
func (*SetFlowVariablesReq) ProtoMessage()    {}
func (*SetFlowVariablesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{21}
}

func (m *SetFlowVariablesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFlowVariablesReq.Unmarshal(m, b)
}
func (m *SetFlowVariablesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFlowVariablesReq.Marshal(b, m, deterministic)
}
func (m *SetFlowVariablesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFlowVariablesReq.Merge(m, src)
}
func (m *SetFlowVariablesReq) XXX_Size() int {
	return xxx_messageInfo_SetFlowVariablesReq.Size(m)
}
func (m *SetFlowVariablesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFlowVariablesReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetFlowVariablesReq proto.InternalMessageInfo

func (m *SetFlowVariablesReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SetFlowVariablesReq) GetVariables() map[string]*Any {
	if m != nil {
		return m.Variables
	}
	return nil
}

type WatchFlowVariableReq struct {
	// flow id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// variable name
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchFlowVariableReq) Reset()         { *m = WatchFlowVariableReq{} }
func (m *WatchFlowVariableReq) String() string { return proto.CompactTextString(m) }
func (*WatchFlowVariableReq) ProtoMessage()    {}
func (*WatchFlowVariableReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{22}
}

func (m *WatchFlowVariableReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchFlowVariableReq.Unmarshal(m, b)
}
func (m *WatchFlowVariableReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchFlowVariableReq.Marshal(b, m, deterministic)
}
func (m *WatchFlowVariableReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchFlowVariableReq.Merge(m, src)
}
func (m *WatchFlowVariableReq) XXX_Size() int {
	return xxx_messageInfo_WatchFlowVariableReq.Size(m)
}
func (m *WatchFlowVariableReq) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchFlowVariableReq.DiscardUnknown(m)
}

var xxx_messageInfo_WatchFlowVariableReq proto.InternalMessageInfo

func (m *WatchFlowVariableReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *WatchFlowVariableReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type WatchFlowVariableRes struct {
	// variable value
	Value                *Any     `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchFlowVariableRes) Reset()         { *m = WatchFlowVariableRes{} }
func (m *WatchFlowVariableRes) String() string { return proto.CompactTextString(m) }
func (*WatchFlowVariableRes) ProtoMessage()    {}
func (*WatchFlowVariableRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{23}
}

func (m *WatchFlowVariableRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchFlowVariableRes.Unmarshal(m, b)
}
func (m *WatchFlowVariableRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchFlowVariableRes.Marshal(b, m, deterministic)
}
func (m *WatchFlowVariableRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchFlowVariableRes.Merge(m, src)
}
func (m *WatchFlowVariableRes) XXX_Size() int {
	return xxx_messageInfo_WatchFlowVariableRes.Size(m)
}
func (m *WatchFlowVariableRes) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchFlowVariableRes.DiscardUnknown(m)
}

var xxx_messageInfo_WatchFlowVariableRes proto.InternalMessageInfo

func (m *WatchFlowVariableRes) GetValue() *Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type SetFlowVariablesRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFlowVariablesRes) Reset()         { *m = SetFlowVariablesRes{} }
func (m *SetFlowVariablesRes) String() string { return proto.CompactTextString(m) }
func (*SetFlowVariablesRes) ProtoMessage()    {}
func (*SetFlowVariablesRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{24}
}

func (m *SetFlowVariablesRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFlowVariablesRes.Unmarshal(m, b)
}
func (m *SetFlowVariablesRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFlowVariablesRes.Marshal(b, m, deterministic)
}
func (m *SetFlowVariablesRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFlowVariablesRes.Merge(m, src)
}
func (m *SetFlowVariablesRes) XXX_Size() int {
	return xxx_messageInfo_SetFlowVariablesRes.Size(m)
}
func (m *SetFlowVariablesRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFlowVariablesRes.DiscardUnknown(m)
}

var xxx_messageInfo_SetFlowVariablesRes proto.InternalMessageInfo

func (m *SetFlowVariablesRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type RemoveFlowReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveFlowReq) Reset()         { *m = RemoveFlowReq{} }
func (m *RemoveFlowReq) String() string { return proto.CompactTextString(m) }
func (*RemoveFlowReq) ProtoMessage()    {}
func (*RemoveFlowReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{25}
}

func (m *RemoveFlowReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveFlowReq.Unmarshal(m, b)
}
func (m *RemoveFlowReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveFlowReq.Marshal(b, m, deterministic)
}
func (m *RemoveFlowReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveFlowReq.Merge(m, src)
}
func (m *RemoveFlowReq) XXX_Size() int {
	return xxx_messageInfo_RemoveFlowReq.Size(m)
}
func (m *RemoveFlowReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveFlowReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveFlowReq proto.InternalMessageInfo

func (m *RemoveFlowReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemoveFlowRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveFlowRes) Reset()         { *m = RemoveFlowRes{} }
func (m *RemoveFlowRes) String() string { return proto.CompactTextString(m) }
func (*RemoveFlowRes) ProtoMessage()    {}
func (*RemoveFlowRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{26}
}

func (m *RemoveFlowRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveFlowRes.Unmarshal(m, b)
}
func (m *RemoveFlowRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveFlowRes.Marshal(b, m, deterministic)
}
func (m *RemoveFlowRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveFlowRes.Merge(m, src)
}
func (m *RemoveFlowRes) XXX_Size() int {
	return xxx_messageInfo_RemoveFlowRes.Size(m)
}
func (m *RemoveFlowRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveFlowRes.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveFlowRes proto.InternalMessageInfo

func (m *RemoveFlowRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type GetFlowDescriptorReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFlowDescriptorReq) Reset()         { *m = GetFlowDescriptorReq{} }
func (m *GetFlowDescriptorReq) String() string { return proto.CompactTextString(m) }
func (*GetFlowDescriptorReq) ProtoMessage()    {}
func (*GetFlowDescriptorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{27}
}

func (m *GetFlowDescriptorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlowDescriptorReq.Unmarshal(m, b)
}
func (m *GetFlowDescriptorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlowDescriptorReq.Marshal(b, m, deterministic)
}
func (m *GetFlowDescriptorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlowDescriptorReq.Merge(m, src)
}
func (m *GetFlowDescriptorReq) XXX_Size() int {
	return xxx_messageInfo_GetFlowDescriptorReq.Size(m)
}
func (m *GetFlowDescriptorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlowDescriptorReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlowDescriptorReq proto.InternalMessageInfo

func (m *GetFlowDescriptorReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AddFlowDescriptorReq struct {
	Name                 string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Variables            []*FlowVariableDescriptor `protobuf:"bytes,2,rep,name=variables,proto3" json:"variables,omitempty"`
	Pipes                []*Pipe                   `protobuf:"bytes,3,rep,name=pipes,proto3" json:"pipes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AddFlowDescriptorReq) Reset()         { *m = AddFlowDescriptorReq{} }
func (m *AddFlowDescriptorReq) String() string { return proto.CompactTextString(m) }
func (*AddFlowDescriptorReq) ProtoMessage()    {}
func (*AddFlowDescriptorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{28}
}

func (m *AddFlowDescriptorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFlowDescriptorReq.Unmarshal(m, b)
}
func (m *AddFlowDescriptorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFlowDescriptorReq.Marshal(b, m, deterministic)
}
func (m *AddFlowDescriptorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFlowDescriptorReq.Merge(m, src)
}
func (m *AddFlowDescriptorReq) XXX_Size() int {
	return xxx_messageInfo_AddFlowDescriptorReq.Size(m)
}
func (m *AddFlowDescriptorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFlowDescriptorReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddFlowDescriptorReq proto.InternalMessageInfo

func (m *AddFlowDescriptorReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddFlowDescriptorReq) GetVariables() []*FlowVariableDescriptor {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *AddFlowDescriptorReq) GetPipes() []*Pipe {
	if m != nil {
		return m.Pipes
	}
	return nil
}

type AddFlowDescriptorRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFlowDescriptorRes) Reset()         { *m = AddFlowDescriptorRes{} }
func (m *AddFlowDescriptorRes) String() string { return proto.CompactTextString(m) }
func (*AddFlowDescriptorRes) ProtoMessage()    {}
func (*AddFlowDescriptorRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{29}
}

func (m *AddFlowDescriptorRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFlowDescriptorRes.Unmarshal(m, b)
}
func (m *AddFlowDescriptorRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFlowDescriptorRes.Marshal(b, m, deterministic)
}
func (m *AddFlowDescriptorRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFlowDescriptorRes.Merge(m, src)
}
func (m *AddFlowDescriptorRes) XXX_Size() int {
	return xxx_messageInfo_AddFlowDescriptorRes.Size(m)
}
func (m *AddFlowDescriptorRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFlowDescriptorRes.DiscardUnknown(m)
}

var xxx_messageInfo_AddFlowDescriptorRes proto.InternalMessageInfo

func (m *AddFlowDescriptorRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AddFlowDescriptorRes) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UpdateFlowDescriptorReq struct {
	Id                   string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Variables            []*FlowVariableDescriptor `protobuf:"bytes,3,rep,name=variables,proto3" json:"variables,omitempty"`
	Pipes                []*Pipe                   `protobuf:"bytes,4,rep,name=pipes,proto3" json:"pipes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UpdateFlowDescriptorReq) Reset()         { *m = UpdateFlowDescriptorReq{} }
func (m *UpdateFlowDescriptorReq) String() string { return proto.CompactTextString(m) }
func (*UpdateFlowDescriptorReq) ProtoMessage()    {}
func (*UpdateFlowDescriptorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{30}
}

func (m *UpdateFlowDescriptorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateFlowDescriptorReq.Unmarshal(m, b)
}
func (m *UpdateFlowDescriptorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateFlowDescriptorReq.Marshal(b, m, deterministic)
}
func (m *UpdateFlowDescriptorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateFlowDescriptorReq.Merge(m, src)
}
func (m *UpdateFlowDescriptorReq) XXX_Size() int {
	return xxx_messageInfo_UpdateFlowDescriptorReq.Size(m)
}
func (m *UpdateFlowDescriptorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateFlowDescriptorReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateFlowDescriptorReq proto.InternalMessageInfo

func (m *UpdateFlowDescriptorReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateFlowDescriptorReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateFlowDescriptorReq) GetVariables() []*FlowVariableDescriptor {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *UpdateFlowDescriptorReq) GetPipes() []*Pipe {
	if m != nil {
		return m.Pipes
	}
	return nil
}

type UpdateFlowDescriptorRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateFlowDescriptorRes) Reset()         { *m = UpdateFlowDescriptorRes{} }
func (m *UpdateFlowDescriptorRes) String() string { return proto.CompactTextString(m) }
func (*UpdateFlowDescriptorRes) ProtoMessage()    {}
func (*UpdateFlowDescriptorRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{31}
}

func (m *UpdateFlowDescriptorRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateFlowDescriptorRes.Unmarshal(m, b)
}
func (m *UpdateFlowDescriptorRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateFlowDescriptorRes.Marshal(b, m, deterministic)
}
func (m *UpdateFlowDescriptorRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateFlowDescriptorRes.Merge(m, src)
}
func (m *UpdateFlowDescriptorRes) XXX_Size() int {
	return xxx_messageInfo_UpdateFlowDescriptorRes.Size(m)
}
func (m *UpdateFlowDescriptorRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateFlowDescriptorRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateFlowDescriptorRes proto.InternalMessageInfo

func (m *UpdateFlowDescriptorRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type RemoveFlowDescriptorReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveFlowDescriptorReq) Reset()         { *m = RemoveFlowDescriptorReq{} }
func (m *RemoveFlowDescriptorReq) String() string { return proto.CompactTextString(m) }
func (*RemoveFlowDescriptorReq) ProtoMessage()    {}
func (*RemoveFlowDescriptorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{32}
}

func (m *RemoveFlowDescriptorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveFlowDescriptorReq.Unmarshal(m, b)
}
func (m *RemoveFlowDescriptorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveFlowDescriptorReq.Marshal(b, m, deterministic)
}
func (m *RemoveFlowDescriptorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveFlowDescriptorReq.Merge(m, src)
}
func (m *RemoveFlowDescriptorReq) XXX_Size() int {
	return xxx_messageInfo_RemoveFlowDescriptorReq.Size(m)
}
func (m *RemoveFlowDescriptorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveFlowDescriptorReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveFlowDescriptorReq proto.InternalMessageInfo

func (m *RemoveFlowDescriptorReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemoveFlowDescriptorRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveFlowDescriptorRes) Reset()         { *m = RemoveFlowDescriptorRes{} }
func (m *RemoveFlowDescriptorRes) String() string { return proto.CompactTextString(m) }
func (*RemoveFlowDescriptorRes) ProtoMessage()    {}
func (*RemoveFlowDescriptorRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{33}
}

func (m *RemoveFlowDescriptorRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveFlowDescriptorRes.Unmarshal(m, b)
}
func (m *RemoveFlowDescriptorRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveFlowDescriptorRes.Marshal(b, m, deterministic)
}
func (m *RemoveFlowDescriptorRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveFlowDescriptorRes.Merge(m, src)
}
func (m *RemoveFlowDescriptorRes) XXX_Size() int {
	return xxx_messageInfo_RemoveFlowDescriptorRes.Size(m)
}
func (m *RemoveFlowDescriptorRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveFlowDescriptorRes.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveFlowDescriptorRes proto.InternalMessageInfo

func (m *RemoveFlowDescriptorRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type ListFlowDescriptorsReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Sort                 *Sort    `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Page                 *Page    `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFlowDescriptorsReq) Reset()         { *m = ListFlowDescriptorsReq{} }
func (m *ListFlowDescriptorsReq) String() string { return proto.CompactTextString(m) }
func (*ListFlowDescriptorsReq) ProtoMessage()    {}
func (*ListFlowDescriptorsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{34}
}

func (m *ListFlowDescriptorsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFlowDescriptorsReq.Unmarshal(m, b)
}
func (m *ListFlowDescriptorsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFlowDescriptorsReq.Marshal(b, m, deterministic)
}
func (m *ListFlowDescriptorsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFlowDescriptorsReq.Merge(m, src)
}
func (m *ListFlowDescriptorsReq) XXX_Size() int {
	return xxx_messageInfo_ListFlowDescriptorsReq.Size(m)
}
func (m *ListFlowDescriptorsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFlowDescriptorsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListFlowDescriptorsReq proto.InternalMessageInfo

func (m *ListFlowDescriptorsReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ListFlowDescriptorsReq) GetSort() *Sort {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *ListFlowDescriptorsReq) GetPage() *Page {
	if m != nil {
		return m.Page
	}
	return nil
}

type ListFlowDescriptorsRes struct {
	FlowDescriptors      []*FlowDescriptor `protobuf:"bytes,1,rep,name=flow_descriptors,json=flowDescriptors,proto3" json:"flow_descriptors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListFlowDescriptorsRes) Reset()         { *m = ListFlowDescriptorsRes{} }
func (m *ListFlowDescriptorsRes) String() string { return proto.CompactTextString(m) }
func (*ListFlowDescriptorsRes) ProtoMessage()    {}
func (*ListFlowDescriptorsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{35}
}

func (m *ListFlowDescriptorsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFlowDescriptorsRes.Unmarshal(m, b)
}
func (m *ListFlowDescriptorsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFlowDescriptorsRes.Marshal(b, m, deterministic)
}
func (m *ListFlowDescriptorsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFlowDescriptorsRes.Merge(m, src)
}
func (m *ListFlowDescriptorsRes) XXX_Size() int {
	return xxx_messageInfo_ListFlowDescriptorsRes.Size(m)
}
func (m *ListFlowDescriptorsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFlowDescriptorsRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListFlowDescriptorsRes proto.InternalMessageInfo

func (m *ListFlowDescriptorsRes) GetFlowDescriptors() []*FlowDescriptor {
	if m != nil {
		return m.FlowDescriptors
	}
	return nil
}

type GetPipeDescriptorReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPipeDescriptorReq) Reset()         { *m = GetPipeDescriptorReq{} }
func (m *GetPipeDescriptorReq) String() string { return proto.CompactTextString(m) }
func (*GetPipeDescriptorReq) ProtoMessage()    {}
func (*GetPipeDescriptorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{36}
}

func (m *GetPipeDescriptorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPipeDescriptorReq.Unmarshal(m, b)
}
func (m *GetPipeDescriptorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPipeDescriptorReq.Marshal(b, m, deterministic)
}
func (m *GetPipeDescriptorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPipeDescriptorReq.Merge(m, src)
}
func (m *GetPipeDescriptorReq) XXX_Size() int {
	return xxx_messageInfo_GetPipeDescriptorReq.Size(m)
}
func (m *GetPipeDescriptorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPipeDescriptorReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPipeDescriptorReq proto.InternalMessageInfo

func (m *GetPipeDescriptorReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AddPipeDescriptorReq struct {
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PluginId             string                 `protobuf:"bytes,3,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	Description          string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Params               []*PipeDescriptorParam `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty"`
	Inputs               []string               `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs              []string               `protobuf:"bytes,7,rep,name=outputs,proto3" json:"outputs,omitempty"`
	NeedInit             bool                   `protobuf:"varint,8,opt,name=need_init,json=needInit,proto3" json:"need_init,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AddPipeDescriptorReq) Reset()         { *m = AddPipeDescriptorReq{} }
func (m *AddPipeDescriptorReq) String() string { return proto.CompactTextString(m) }
func (*AddPipeDescriptorReq) ProtoMessage()    {}
func (*AddPipeDescriptorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{37}
}

func (m *AddPipeDescriptorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPipeDescriptorReq.Unmarshal(m, b)
}
func (m *AddPipeDescriptorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPipeDescriptorReq.Marshal(b, m, deterministic)
}
func (m *AddPipeDescriptorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPipeDescriptorReq.Merge(m, src)
}
func (m *AddPipeDescriptorReq) XXX_Size() int {
	return xxx_messageInfo_AddPipeDescriptorReq.Size(m)
}
func (m *AddPipeDescriptorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPipeDescriptorReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddPipeDescriptorReq proto.InternalMessageInfo

func (m *AddPipeDescriptorReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddPipeDescriptorReq) GetPluginId() string {
	if m != nil {
		return m.PluginId
	}
	return ""
}

func (m *AddPipeDescriptorReq) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AddPipeDescriptorReq) GetParams() []*PipeDescriptorParam {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *AddPipeDescriptorReq) GetInputs() []string {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *AddPipeDescriptorReq) GetOutputs() []string {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *AddPipeDescriptorReq) GetNeedInit() bool {
	if m != nil {
		return m.NeedInit
	}
	return false
}

type AddPipeDescriptorRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPipeDescriptorRes) Reset()         { *m = AddPipeDescriptorRes{} }
func (m *AddPipeDescriptorRes) String() string { return proto.CompactTextString(m) }
func (*AddPipeDescriptorRes) ProtoMessage()    {}
func (*AddPipeDescriptorRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{38}
}

func (m *AddPipeDescriptorRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPipeDescriptorRes.Unmarshal(m, b)
}
func (m *AddPipeDescriptorRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPipeDescriptorRes.Marshal(b, m, deterministic)
}
func (m *AddPipeDescriptorRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPipeDescriptorRes.Merge(m, src)
}
func (m *AddPipeDescriptorRes) XXX_Size() int {
	return xxx_messageInfo_AddPipeDescriptorRes.Size(m)
}
func (m *AddPipeDescriptorRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPipeDescriptorRes.DiscardUnknown(m)
}

var xxx_messageInfo_AddPipeDescriptorRes proto.InternalMessageInfo

func (m *AddPipeDescriptorRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AddPipeDescriptorRes) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UpdatePipeDescriptorReq struct {
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PluginId             string                 `protobuf:"bytes,3,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	Description          string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Params               []*PipeDescriptorParam `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty"`
	Inputs               []string               `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs              []string               `protobuf:"bytes,7,rep,name=outputs,proto3" json:"outputs,omitempty"`
	NeedInit             bool                   `protobuf:"varint,8,opt,name=need_init,json=needInit,proto3" json:"need_init,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdatePipeDescriptorReq) Reset()         { *m = UpdatePipeDescriptorReq{} }
func (m *UpdatePipeDescriptorReq) String() string { return proto.CompactTextString(m) }
func (*UpdatePipeDescriptorReq) ProtoMessage()    {}
func (*UpdatePipeDescriptorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{39}
}

func (m *UpdatePipeDescriptorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePipeDescriptorReq.Unmarshal(m, b)
}
func (m *UpdatePipeDescriptorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePipeDescriptorReq.Marshal(b, m, deterministic)
}
func (m *UpdatePipeDescriptorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePipeDescriptorReq.Merge(m, src)
}
func (m *UpdatePipeDescriptorReq) XXX_Size() int {
	return xxx_messageInfo_UpdatePipeDescriptorReq.Size(m)
}
func (m *UpdatePipeDescriptorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePipeDescriptorReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePipeDescriptorReq proto.InternalMessageInfo

func (m *UpdatePipeDescriptorReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdatePipeDescriptorReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdatePipeDescriptorReq) GetPluginId() string {
	if m != nil {
		return m.PluginId
	}
	return ""
}

func (m *UpdatePipeDescriptorReq) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdatePipeDescriptorReq) GetParams() []*PipeDescriptorParam {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *UpdatePipeDescriptorReq) GetInputs() []string {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *UpdatePipeDescriptorReq) GetOutputs() []string {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *UpdatePipeDescriptorReq) GetNeedInit() bool {
	if m != nil {
		return m.NeedInit
	}
	return false
}

type UpdatePipeDescriptorRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePipeDescriptorRes) Reset()         { *m = UpdatePipeDescriptorRes{} }
func (m *UpdatePipeDescriptorRes) String() string { return proto.CompactTextString(m) }
func (*UpdatePipeDescriptorRes) ProtoMessage()    {}
func (*UpdatePipeDescriptorRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{40}
}

func (m *UpdatePipeDescriptorRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePipeDescriptorRes.Unmarshal(m, b)
}
func (m *UpdatePipeDescriptorRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePipeDescriptorRes.Marshal(b, m, deterministic)
}
func (m *UpdatePipeDescriptorRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePipeDescriptorRes.Merge(m, src)
}
func (m *UpdatePipeDescriptorRes) XXX_Size() int {
	return xxx_messageInfo_UpdatePipeDescriptorRes.Size(m)
}
func (m *UpdatePipeDescriptorRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePipeDescriptorRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePipeDescriptorRes proto.InternalMessageInfo

func (m *UpdatePipeDescriptorRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type RemovePipeDescriptorReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePipeDescriptorReq) Reset()         { *m = RemovePipeDescriptorReq{} }
func (m *RemovePipeDescriptorReq) String() string { return proto.CompactTextString(m) }
func (*RemovePipeDescriptorReq) ProtoMessage()    {}
func (*RemovePipeDescriptorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{41}
}

func (m *RemovePipeDescriptorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePipeDescriptorReq.Unmarshal(m, b)
}
func (m *RemovePipeDescriptorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePipeDescriptorReq.Marshal(b, m, deterministic)
}
func (m *RemovePipeDescriptorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePipeDescriptorReq.Merge(m, src)
}
func (m *RemovePipeDescriptorReq) XXX_Size() int {
	return xxx_messageInfo_RemovePipeDescriptorReq.Size(m)
}
func (m *RemovePipeDescriptorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePipeDescriptorReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePipeDescriptorReq proto.InternalMessageInfo

func (m *RemovePipeDescriptorReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemovePipeDescriptorRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePipeDescriptorRes) Reset()         { *m = RemovePipeDescriptorRes{} }
func (m *RemovePipeDescriptorRes) String() string { return proto.CompactTextString(m) }
func (*RemovePipeDescriptorRes) ProtoMessage()    {}
func (*RemovePipeDescriptorRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{42}
}

func (m *RemovePipeDescriptorRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePipeDescriptorRes.Unmarshal(m, b)
}
func (m *RemovePipeDescriptorRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePipeDescriptorRes.Marshal(b, m, deterministic)
}
func (m *RemovePipeDescriptorRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePipeDescriptorRes.Merge(m, src)
}
func (m *RemovePipeDescriptorRes) XXX_Size() int {
	return xxx_messageInfo_RemovePipeDescriptorRes.Size(m)
}
func (m *RemovePipeDescriptorRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePipeDescriptorRes.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePipeDescriptorRes proto.InternalMessageInfo

func (m *RemovePipeDescriptorRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type ListPipeDescriptorsReq struct {
	Filter               *ListPipeDescriptorsReq_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Sort                 *ListPipeDescriptorsReq_Sort   `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Page                 *Page                          `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ListPipeDescriptorsReq) Reset()         { *m = ListPipeDescriptorsReq{} }
func (m *ListPipeDescriptorsReq) String() string { return proto.CompactTextString(m) }
func (*ListPipeDescriptorsReq) ProtoMessage()    {}
func (*ListPipeDescriptorsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{43}
}

func (m *ListPipeDescriptorsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipeDescriptorsReq.Unmarshal(m, b)
}
func (m *ListPipeDescriptorsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipeDescriptorsReq.Marshal(b, m, deterministic)
}
func (m *ListPipeDescriptorsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipeDescriptorsReq.Merge(m, src)
}
func (m *ListPipeDescriptorsReq) XXX_Size() int {
	return xxx_messageInfo_ListPipeDescriptorsReq.Size(m)
}
func (m *ListPipeDescriptorsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipeDescriptorsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipeDescriptorsReq proto.InternalMessageInfo

func (m *ListPipeDescriptorsReq) GetFilter() *ListPipeDescriptorsReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ListPipeDescriptorsReq) GetSort() *ListPipeDescriptorsReq_Sort {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *ListPipeDescriptorsReq) GetPage() *Page {
	if m != nil {
		return m.Page
	}
	return nil
}

type ListPipeDescriptorsReq_Filter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PluginId             string   `protobuf:"bytes,2,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPipeDescriptorsReq_Filter) Reset()         { *m = ListPipeDescriptorsReq_Filter{} }
func (m *ListPipeDescriptorsReq_Filter) String() string { return proto.CompactTextString(m) }
func (*ListPipeDescriptorsReq_Filter) ProtoMessage()    {}
func (*ListPipeDescriptorsReq_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{43, 0}
}

func (m *ListPipeDescriptorsReq_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipeDescriptorsReq_Filter.Unmarshal(m, b)
}
func (m *ListPipeDescriptorsReq_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipeDescriptorsReq_Filter.Marshal(b, m, deterministic)
}
func (m *ListPipeDescriptorsReq_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipeDescriptorsReq_Filter.Merge(m, src)
}
func (m *ListPipeDescriptorsReq_Filter) XXX_Size() int {
	return xxx_messageInfo_ListPipeDescriptorsReq_Filter.Size(m)
}
func (m *ListPipeDescriptorsReq_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipeDescriptorsReq_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipeDescriptorsReq_Filter proto.InternalMessageInfo

func (m *ListPipeDescriptorsReq_Filter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListPipeDescriptorsReq_Filter) GetPluginId() string {
	if m != nil {
		return m.PluginId
	}
	return ""
}

type ListPipeDescriptorsReq_Sort struct {
	Name                 SortDirection `protobuf:"varint,2,opt,name=name,proto3,enum=schema.SortDirection" json:"name,omitempty"`
	CreatedAt            SortDirection `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3,enum=schema.SortDirection" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListPipeDescriptorsReq_Sort) Reset()         { *m = ListPipeDescriptorsReq_Sort{} }
func (m *ListPipeDescriptorsReq_Sort) String() string { return proto.CompactTextString(m) }
func (*ListPipeDescriptorsReq_Sort) ProtoMessage()    {}
func (*ListPipeDescriptorsReq_Sort) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{43, 1}
}

func (m *ListPipeDescriptorsReq_Sort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipeDescriptorsReq_Sort.Unmarshal(m, b)
}
func (m *ListPipeDescriptorsReq_Sort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipeDescriptorsReq_Sort.Marshal(b, m, deterministic)
}
func (m *ListPipeDescriptorsReq_Sort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipeDescriptorsReq_Sort.Merge(m, src)
}
func (m *ListPipeDescriptorsReq_Sort) XXX_Size() int {
	return xxx_messageInfo_ListPipeDescriptorsReq_Sort.Size(m)
}
func (m *ListPipeDescriptorsReq_Sort) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipeDescriptorsReq_Sort.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipeDescriptorsReq_Sort proto.InternalMessageInfo

func (m *ListPipeDescriptorsReq_Sort) GetName() SortDirection {
	if m != nil {
		return m.Name
	}
	return SortDirection_NO_SORT
}

func (m *ListPipeDescriptorsReq_Sort) GetCreatedAt() SortDirection {
	if m != nil {
		return m.CreatedAt
	}
	return SortDirection_NO_SORT
}

type ListPipeDescriptorsRes struct {
	PipeDescriptors      []*PipeDescriptor `protobuf:"bytes,1,rep,name=pipe_descriptors,json=pipeDescriptors,proto3" json:"pipe_descriptors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListPipeDescriptorsRes) Reset()         { *m = ListPipeDescriptorsRes{} }
func (m *ListPipeDescriptorsRes) String() string { return proto.CompactTextString(m) }
func (*ListPipeDescriptorsRes) ProtoMessage()    {}
func (*ListPipeDescriptorsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{44}
}

func (m *ListPipeDescriptorsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPipeDescriptorsRes.Unmarshal(m, b)
}
func (m *ListPipeDescriptorsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPipeDescriptorsRes.Marshal(b, m, deterministic)
}
func (m *ListPipeDescriptorsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPipeDescriptorsRes.Merge(m, src)
}
func (m *ListPipeDescriptorsRes) XXX_Size() int {
	return xxx_messageInfo_ListPipeDescriptorsRes.Size(m)
}
func (m *ListPipeDescriptorsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPipeDescriptorsRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListPipeDescriptorsRes proto.InternalMessageInfo

func (m *ListPipeDescriptorsRes) GetPipeDescriptors() []*PipeDescriptor {
	if m != nil {
		return m.PipeDescriptors
	}
	return nil
}

type GetDeviceTypeReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceTypeReq) Reset()         { *m = GetDeviceTypeReq{} }
func (m *GetDeviceTypeReq) String() string { return proto.CompactTextString(m) }
func (*GetDeviceTypeReq) ProtoMessage()    {}
func (*GetDeviceTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{45}
}

func (m *GetDeviceTypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceTypeReq.Unmarshal(m, b)
}
func (m *GetDeviceTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceTypeReq.Marshal(b, m, deterministic)
}
func (m *GetDeviceTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceTypeReq.Merge(m, src)
}
func (m *GetDeviceTypeReq) XXX_Size() int {
	return xxx_messageInfo_GetDeviceTypeReq.Size(m)
}
func (m *GetDeviceTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceTypeReq proto.InternalMessageInfo

func (m *GetDeviceTypeReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AddDeviceTypeReq struct {
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FlowDescriptorId     string   `protobuf:"bytes,4,opt,name=flow_descriptor_id,json=flowDescriptorId,proto3" json:"flow_descriptor_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDeviceTypeReq) Reset()         { *m = AddDeviceTypeReq{} }
func (m *AddDeviceTypeReq) String() string { return proto.CompactTextString(m) }
func (*AddDeviceTypeReq) ProtoMessage()    {}
func (*AddDeviceTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{46}
}

func (m *AddDeviceTypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDeviceTypeReq.Unmarshal(m, b)
}
func (m *AddDeviceTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDeviceTypeReq.Marshal(b, m, deterministic)
}
func (m *AddDeviceTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDeviceTypeReq.Merge(m, src)
}
func (m *AddDeviceTypeReq) XXX_Size() int {
	return xxx_messageInfo_AddDeviceTypeReq.Size(m)
}
func (m *AddDeviceTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDeviceTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddDeviceTypeReq proto.InternalMessageInfo

func (m *AddDeviceTypeReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddDeviceTypeReq) GetFlowDescriptorId() string {
	if m != nil {
		return m.FlowDescriptorId
	}
	return ""
}

type AddDeviceTypeRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDeviceTypeRes) Reset()         { *m = AddDeviceTypeRes{} }
func (m *AddDeviceTypeRes) String() string { return proto.CompactTextString(m) }
func (*AddDeviceTypeRes) ProtoMessage()    {}
func (*AddDeviceTypeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{47}
}

func (m *AddDeviceTypeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDeviceTypeRes.Unmarshal(m, b)
}
func (m *AddDeviceTypeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDeviceTypeRes.Marshal(b, m, deterministic)
}
func (m *AddDeviceTypeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDeviceTypeRes.Merge(m, src)
}
func (m *AddDeviceTypeRes) XXX_Size() int {
	return xxx_messageInfo_AddDeviceTypeRes.Size(m)
}
func (m *AddDeviceTypeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDeviceTypeRes.DiscardUnknown(m)
}

var xxx_messageInfo_AddDeviceTypeRes proto.InternalMessageInfo

func (m *AddDeviceTypeRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AddDeviceTypeRes) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UpdateDeviceTypeReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceTypeReq) Reset()         { *m = UpdateDeviceTypeReq{} }
func (m *UpdateDeviceTypeReq) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceTypeReq) ProtoMessage()    {}
func (*UpdateDeviceTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{48}
}

func (m *UpdateDeviceTypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceTypeReq.Unmarshal(m, b)
}
func (m *UpdateDeviceTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceTypeReq.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceTypeReq.Merge(m, src)
}
func (m *UpdateDeviceTypeReq) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceTypeReq.Size(m)
}
func (m *UpdateDeviceTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceTypeReq proto.InternalMessageInfo

func (m *UpdateDeviceTypeReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateDeviceTypeReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateDeviceTypeRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceTypeRes) Reset()         { *m = UpdateDeviceTypeRes{} }
func (m *UpdateDeviceTypeRes) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceTypeRes) ProtoMessage()    {}
func (*UpdateDeviceTypeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{49}
}

func (m *UpdateDeviceTypeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceTypeRes.Unmarshal(m, b)
}
func (m *UpdateDeviceTypeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceTypeRes.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceTypeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceTypeRes.Merge(m, src)
}
func (m *UpdateDeviceTypeRes) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceTypeRes.Size(m)
}
func (m *UpdateDeviceTypeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceTypeRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceTypeRes proto.InternalMessageInfo

func (m *UpdateDeviceTypeRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type RemoveDeviceTypeReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveDeviceTypeReq) Reset()         { *m = RemoveDeviceTypeReq{} }
func (m *RemoveDeviceTypeReq) String() string { return proto.CompactTextString(m) }
func (*RemoveDeviceTypeReq) ProtoMessage()    {}
func (*RemoveDeviceTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{50}
}

func (m *RemoveDeviceTypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDeviceTypeReq.Unmarshal(m, b)
}
func (m *RemoveDeviceTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDeviceTypeReq.Marshal(b, m, deterministic)
}
func (m *RemoveDeviceTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDeviceTypeReq.Merge(m, src)
}
func (m *RemoveDeviceTypeReq) XXX_Size() int {
	return xxx_messageInfo_RemoveDeviceTypeReq.Size(m)
}
func (m *RemoveDeviceTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDeviceTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDeviceTypeReq proto.InternalMessageInfo

func (m *RemoveDeviceTypeReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemoveDeviceTypeRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveDeviceTypeRes) Reset()         { *m = RemoveDeviceTypeRes{} }
func (m *RemoveDeviceTypeRes) String() string { return proto.CompactTextString(m) }
func (*RemoveDeviceTypeRes) ProtoMessage()    {}
func (*RemoveDeviceTypeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{51}
}

func (m *RemoveDeviceTypeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDeviceTypeRes.Unmarshal(m, b)
}
func (m *RemoveDeviceTypeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDeviceTypeRes.Marshal(b, m, deterministic)
}
func (m *RemoveDeviceTypeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDeviceTypeRes.Merge(m, src)
}
func (m *RemoveDeviceTypeRes) XXX_Size() int {
	return xxx_messageInfo_RemoveDeviceTypeRes.Size(m)
}
func (m *RemoveDeviceTypeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDeviceTypeRes.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDeviceTypeRes proto.InternalMessageInfo

func (m *RemoveDeviceTypeRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type ListDeviceTypesReq struct {
	Filter               *ListDeviceTypesReq_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Sort                 *ListDeviceTypesReq_Sort   `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Page                 *Page                      `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ListDeviceTypesReq) Reset()         { *m = ListDeviceTypesReq{} }
func (m *ListDeviceTypesReq) String() string { return proto.CompactTextString(m) }
func (*ListDeviceTypesReq) ProtoMessage()    {}
func (*ListDeviceTypesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{52}
}

func (m *ListDeviceTypesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceTypesReq.Unmarshal(m, b)
}
func (m *ListDeviceTypesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceTypesReq.Marshal(b, m, deterministic)
}
func (m *ListDeviceTypesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceTypesReq.Merge(m, src)
}
func (m *ListDeviceTypesReq) XXX_Size() int {
	return xxx_messageInfo_ListDeviceTypesReq.Size(m)
}
func (m *ListDeviceTypesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceTypesReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceTypesReq proto.InternalMessageInfo

func (m *ListDeviceTypesReq) GetFilter() *ListDeviceTypesReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ListDeviceTypesReq) GetSort() *ListDeviceTypesReq_Sort {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *ListDeviceTypesReq) GetPage() *Page {
	if m != nil {
		return m.Page
	}
	return nil
}

type ListDeviceTypesReq_Filter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDeviceTypesReq_Filter) Reset()         { *m = ListDeviceTypesReq_Filter{} }
func (m *ListDeviceTypesReq_Filter) String() string { return proto.CompactTextString(m) }
func (*ListDeviceTypesReq_Filter) ProtoMessage()    {}
func (*ListDeviceTypesReq_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{52, 0}
}

func (m *ListDeviceTypesReq_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceTypesReq_Filter.Unmarshal(m, b)
}
func (m *ListDeviceTypesReq_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceTypesReq_Filter.Marshal(b, m, deterministic)
}
func (m *ListDeviceTypesReq_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceTypesReq_Filter.Merge(m, src)
}
func (m *ListDeviceTypesReq_Filter) XXX_Size() int {
	return xxx_messageInfo_ListDeviceTypesReq_Filter.Size(m)
}
func (m *ListDeviceTypesReq_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceTypesReq_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceTypesReq_Filter proto.InternalMessageInfo

func (m *ListDeviceTypesReq_Filter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListDeviceTypesReq_Filter) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ListDeviceTypesReq_Sort struct {
	Name                 SortDirection `protobuf:"varint,2,opt,name=name,proto3,enum=schema.SortDirection" json:"name,omitempty"`
	CreatedAt            SortDirection `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3,enum=schema.SortDirection" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListDeviceTypesReq_Sort) Reset()         { *m = ListDeviceTypesReq_Sort{} }
func (m *ListDeviceTypesReq_Sort) String() string { return proto.CompactTextString(m) }
func (*ListDeviceTypesReq_Sort) ProtoMessage()    {}
func (*ListDeviceTypesReq_Sort) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{52, 1}
}

func (m *ListDeviceTypesReq_Sort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceTypesReq_Sort.Unmarshal(m, b)
}
func (m *ListDeviceTypesReq_Sort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceTypesReq_Sort.Marshal(b, m, deterministic)
}
func (m *ListDeviceTypesReq_Sort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceTypesReq_Sort.Merge(m, src)
}
func (m *ListDeviceTypesReq_Sort) XXX_Size() int {
	return xxx_messageInfo_ListDeviceTypesReq_Sort.Size(m)
}
func (m *ListDeviceTypesReq_Sort) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceTypesReq_Sort.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceTypesReq_Sort proto.InternalMessageInfo

func (m *ListDeviceTypesReq_Sort) GetName() SortDirection {
	if m != nil {
		return m.Name
	}
	return SortDirection_NO_SORT
}

func (m *ListDeviceTypesReq_Sort) GetCreatedAt() SortDirection {
	if m != nil {
		return m.CreatedAt
	}
	return SortDirection_NO_SORT
}

type ListDeviceTypesRes struct {
	DeviceTypes          []*DeviceType `protobuf:"bytes,1,rep,name=device_types,json=deviceTypes,proto3" json:"device_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListDeviceTypesRes) Reset()         { *m = ListDeviceTypesRes{} }
func (m *ListDeviceTypesRes) String() string { return proto.CompactTextString(m) }
func (*ListDeviceTypesRes) ProtoMessage()    {}
func (*ListDeviceTypesRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{53}
}

func (m *ListDeviceTypesRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceTypesRes.Unmarshal(m, b)
}
func (m *ListDeviceTypesRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceTypesRes.Marshal(b, m, deterministic)
}
func (m *ListDeviceTypesRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceTypesRes.Merge(m, src)
}
func (m *ListDeviceTypesRes) XXX_Size() int {
	return xxx_messageInfo_ListDeviceTypesRes.Size(m)
}
func (m *ListDeviceTypesRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceTypesRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceTypesRes proto.InternalMessageInfo

func (m *ListDeviceTypesRes) GetDeviceTypes() []*DeviceType {
	if m != nil {
		return m.DeviceTypes
	}
	return nil
}

type GetDeviceReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceReq) Reset()         { *m = GetDeviceReq{} }
func (m *GetDeviceReq) String() string { return proto.CompactTextString(m) }
func (*GetDeviceReq) ProtoMessage()    {}
func (*GetDeviceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{54}
}

func (m *GetDeviceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceReq.Unmarshal(m, b)
}
func (m *GetDeviceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceReq.Marshal(b, m, deterministic)
}
func (m *GetDeviceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceReq.Merge(m, src)
}
func (m *GetDeviceReq) XXX_Size() int {
	return xxx_messageInfo_GetDeviceReq.Size(m)
}
func (m *GetDeviceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceReq proto.InternalMessageInfo

func (m *GetDeviceReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AddDeviceReq struct {
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DeviceTypeId         string   `protobuf:"bytes,3,opt,name=device_type_id,json=deviceTypeId,proto3" json:"device_type_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDeviceReq) Reset()         { *m = AddDeviceReq{} }
func (m *AddDeviceReq) String() string { return proto.CompactTextString(m) }
func (*AddDeviceReq) ProtoMessage()    {}
func (*AddDeviceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{55}
}

func (m *AddDeviceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDeviceReq.Unmarshal(m, b)
}
func (m *AddDeviceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDeviceReq.Marshal(b, m, deterministic)
}
func (m *AddDeviceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDeviceReq.Merge(m, src)
}
func (m *AddDeviceReq) XXX_Size() int {
	return xxx_messageInfo_AddDeviceReq.Size(m)
}
func (m *AddDeviceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDeviceReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddDeviceReq proto.InternalMessageInfo

func (m *AddDeviceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddDeviceReq) GetDeviceTypeId() string {
	if m != nil {
		return m.DeviceTypeId
	}
	return ""
}

type AddDeviceRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDeviceRes) Reset()         { *m = AddDeviceRes{} }
func (m *AddDeviceRes) String() string { return proto.CompactTextString(m) }
func (*AddDeviceRes) ProtoMessage()    {}
func (*AddDeviceRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{56}
}

func (m *AddDeviceRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDeviceRes.Unmarshal(m, b)
}
func (m *AddDeviceRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDeviceRes.Marshal(b, m, deterministic)
}
func (m *AddDeviceRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDeviceRes.Merge(m, src)
}
func (m *AddDeviceRes) XXX_Size() int {
	return xxx_messageInfo_AddDeviceRes.Size(m)
}
func (m *AddDeviceRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDeviceRes.DiscardUnknown(m)
}

var xxx_messageInfo_AddDeviceRes proto.InternalMessageInfo

func (m *AddDeviceRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AddDeviceRes) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UpdateDeviceReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceReq) Reset()         { *m = UpdateDeviceReq{} }
func (m *UpdateDeviceReq) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceReq) ProtoMessage()    {}
func (*UpdateDeviceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{57}
}

func (m *UpdateDeviceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceReq.Unmarshal(m, b)
}
func (m *UpdateDeviceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceReq.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceReq.Merge(m, src)
}
func (m *UpdateDeviceReq) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceReq.Size(m)
}
func (m *UpdateDeviceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceReq proto.InternalMessageInfo

func (m *UpdateDeviceReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateDeviceReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateDeviceRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDeviceRes) Reset()         { *m = UpdateDeviceRes{} }
func (m *UpdateDeviceRes) String() string { return proto.CompactTextString(m) }
func (*UpdateDeviceRes) ProtoMessage()    {}
func (*UpdateDeviceRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{58}
}

func (m *UpdateDeviceRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeviceRes.Unmarshal(m, b)
}
func (m *UpdateDeviceRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeviceRes.Marshal(b, m, deterministic)
}
func (m *UpdateDeviceRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeviceRes.Merge(m, src)
}
func (m *UpdateDeviceRes) XXX_Size() int {
	return xxx_messageInfo_UpdateDeviceRes.Size(m)
}
func (m *UpdateDeviceRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeviceRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeviceRes proto.InternalMessageInfo

func (m *UpdateDeviceRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type RemoveDeviceReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveDeviceReq) Reset()         { *m = RemoveDeviceReq{} }
func (m *RemoveDeviceReq) String() string { return proto.CompactTextString(m) }
func (*RemoveDeviceReq) ProtoMessage()    {}
func (*RemoveDeviceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{59}
}

func (m *RemoveDeviceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDeviceReq.Unmarshal(m, b)
}
func (m *RemoveDeviceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDeviceReq.Marshal(b, m, deterministic)
}
func (m *RemoveDeviceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDeviceReq.Merge(m, src)
}
func (m *RemoveDeviceReq) XXX_Size() int {
	return xxx_messageInfo_RemoveDeviceReq.Size(m)
}
func (m *RemoveDeviceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDeviceReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDeviceReq proto.InternalMessageInfo

func (m *RemoveDeviceReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemoveDeviceRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveDeviceRes) Reset()         { *m = RemoveDeviceRes{} }
func (m *RemoveDeviceRes) String() string { return proto.CompactTextString(m) }
func (*RemoveDeviceRes) ProtoMessage()    {}
func (*RemoveDeviceRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{60}
}

func (m *RemoveDeviceRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDeviceRes.Unmarshal(m, b)
}
func (m *RemoveDeviceRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDeviceRes.Marshal(b, m, deterministic)
}
func (m *RemoveDeviceRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDeviceRes.Merge(m, src)
}
func (m *RemoveDeviceRes) XXX_Size() int {
	return xxx_messageInfo_RemoveDeviceRes.Size(m)
}
func (m *RemoveDeviceRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDeviceRes.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDeviceRes proto.InternalMessageInfo

func (m *RemoveDeviceRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type ListDevicesReq struct {
	Filter               *ListDevicesReq_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Sort                 *ListDevicesReq_Sort   `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Page                 *Page                  `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListDevicesReq) Reset()         { *m = ListDevicesReq{} }
func (m *ListDevicesReq) String() string { return proto.CompactTextString(m) }
func (*ListDevicesReq) ProtoMessage()    {}
func (*ListDevicesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{61}
}

func (m *ListDevicesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDevicesReq.Unmarshal(m, b)
}
func (m *ListDevicesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDevicesReq.Marshal(b, m, deterministic)
}
func (m *ListDevicesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDevicesReq.Merge(m, src)
}
func (m *ListDevicesReq) XXX_Size() int {
	return xxx_messageInfo_ListDevicesReq.Size(m)
}
func (m *ListDevicesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDevicesReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListDevicesReq proto.InternalMessageInfo

func (m *ListDevicesReq) GetFilter() *ListDevicesReq_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ListDevicesReq) GetSort() *ListDevicesReq_Sort {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *ListDevicesReq) GetPage() *Page {
	if m != nil {
		return m.Page
	}
	return nil
}

type ListDevicesReq_Filter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDevicesReq_Filter) Reset()         { *m = ListDevicesReq_Filter{} }
func (m *ListDevicesReq_Filter) String() string { return proto.CompactTextString(m) }
func (*ListDevicesReq_Filter) ProtoMessage()    {}
func (*ListDevicesReq_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{61, 0}
}

func (m *ListDevicesReq_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDevicesReq_Filter.Unmarshal(m, b)
}
func (m *ListDevicesReq_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDevicesReq_Filter.Marshal(b, m, deterministic)
}
func (m *ListDevicesReq_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDevicesReq_Filter.Merge(m, src)
}
func (m *ListDevicesReq_Filter) XXX_Size() int {
	return xxx_messageInfo_ListDevicesReq_Filter.Size(m)
}
func (m *ListDevicesReq_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDevicesReq_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListDevicesReq_Filter proto.InternalMessageInfo

func (m *ListDevicesReq_Filter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListDevicesReq_Filter) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ListDevicesReq_Sort struct {
	Name                 SortDirection `protobuf:"varint,2,opt,name=name,proto3,enum=schema.SortDirection" json:"name,omitempty"`
	CreatedAt            SortDirection `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3,enum=schema.SortDirection" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListDevicesReq_Sort) Reset()         { *m = ListDevicesReq_Sort{} }
func (m *ListDevicesReq_Sort) String() string { return proto.CompactTextString(m) }
func (*ListDevicesReq_Sort) ProtoMessage()    {}
func (*ListDevicesReq_Sort) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{61, 1}
}

func (m *ListDevicesReq_Sort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDevicesReq_Sort.Unmarshal(m, b)
}
func (m *ListDevicesReq_Sort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDevicesReq_Sort.Marshal(b, m, deterministic)
}
func (m *ListDevicesReq_Sort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDevicesReq_Sort.Merge(m, src)
}
func (m *ListDevicesReq_Sort) XXX_Size() int {
	return xxx_messageInfo_ListDevicesReq_Sort.Size(m)
}
func (m *ListDevicesReq_Sort) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDevicesReq_Sort.DiscardUnknown(m)
}

var xxx_messageInfo_ListDevicesReq_Sort proto.InternalMessageInfo

func (m *ListDevicesReq_Sort) GetName() SortDirection {
	if m != nil {
		return m.Name
	}
	return SortDirection_NO_SORT
}

func (m *ListDevicesReq_Sort) GetCreatedAt() SortDirection {
	if m != nil {
		return m.CreatedAt
	}
	return SortDirection_NO_SORT
}

type ListDevicesRes struct {
	Devices              []*Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListDevicesRes) Reset()         { *m = ListDevicesRes{} }
func (m *ListDevicesRes) String() string { return proto.CompactTextString(m) }
func (*ListDevicesRes) ProtoMessage()    {}
func (*ListDevicesRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d3d93aa3a80b7c3, []int{62}
}

func (m *ListDevicesRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDevicesRes.Unmarshal(m, b)
}
func (m *ListDevicesRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDevicesRes.Marshal(b, m, deterministic)
}
func (m *ListDevicesRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDevicesRes.Merge(m, src)
}
func (m *ListDevicesRes) XXX_Size() int {
	return xxx_messageInfo_ListDevicesRes.Size(m)
}
func (m *ListDevicesRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDevicesRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListDevicesRes proto.InternalMessageInfo

func (m *ListDevicesRes) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

func init() {
	proto.RegisterType((*GetTokenReq)(nil), "schema.GetTokenReq")
	proto.RegisterType((*StartFlowReq)(nil), "schema.StartFlowReq")
	proto.RegisterType((*StartFlowRes)(nil), "schema.StartFlowRes")
	proto.RegisterType((*StopFlowReq)(nil), "schema.StopFlowReq")
	proto.RegisterType((*StopFlowRes)(nil), "schema.StopFlowRes")
	proto.RegisterType((*GetPluginReq)(nil), "schema.GetPluginReq")
	proto.RegisterType((*AddPluginReq)(nil), "schema.AddPluginReq")
	proto.RegisterType((*AddPluginRes)(nil), "schema.AddPluginRes")
	proto.RegisterType((*UpdatePluginReq)(nil), "schema.UpdatePluginReq")
	proto.RegisterType((*UpdatePluginRes)(nil), "schema.UpdatePluginRes")
	proto.RegisterType((*RemovePluginReq)(nil), "schema.RemovePluginReq")
	proto.RegisterType((*RemovePluginRes)(nil), "schema.RemovePluginRes")
	proto.RegisterType((*ListPluginsReq)(nil), "schema.ListPluginsReq")
	proto.RegisterType((*ListPluginsReq_Filter)(nil), "schema.ListPluginsReq.Filter")
	proto.RegisterType((*ListPluginsReq_Sort)(nil), "schema.ListPluginsReq.Sort")
	proto.RegisterType((*ListPluginsRes)(nil), "schema.ListPluginsRes")
	proto.RegisterType((*GetFlowReq)(nil), "schema.GetFlowReq")
	proto.RegisterType((*AddFlowReq)(nil), "schema.AddFlowReq")
	proto.RegisterType((*AddFlowRes)(nil), "schema.AddFlowRes")
	proto.RegisterType((*SetFlowStatusReq)(nil), "schema.SetFlowStatusReq")
	proto.RegisterType((*SetFlowStatusRes)(nil), "schema.SetFlowStatusRes")
	proto.RegisterType((*SetFlowVariableReq)(nil), "schema.SetFlowVariableReq")
	proto.RegisterType((*SetFlowVariableRes)(nil), "schema.SetFlowVariableRes")
	proto.RegisterType((*SetFlowVariablesReq)(nil), "schema.SetFlowVariablesReq")
	proto.RegisterMapType((map[string]*Any)(nil), "schema.SetFlowVariablesReq.VariablesEntry")
	proto.RegisterType((*WatchFlowVariableReq)(nil), "schema.WatchFlowVariableReq")
	proto.RegisterType((*WatchFlowVariableRes)(nil), "schema.WatchFlowVariableRes")
	proto.RegisterType((*SetFlowVariablesRes)(nil), "schema.SetFlowVariablesRes")
	proto.RegisterType((*RemoveFlowReq)(nil), "schema.RemoveFlowReq")
	proto.RegisterType((*RemoveFlowRes)(nil), "schema.RemoveFlowRes")
	proto.RegisterType((*GetFlowDescriptorReq)(nil), "schema.GetFlowDescriptorReq")
	proto.RegisterType((*AddFlowDescriptorReq)(nil), "schema.AddFlowDescriptorReq")
	proto.RegisterType((*AddFlowDescriptorRes)(nil), "schema.AddFlowDescriptorRes")
	proto.RegisterType((*UpdateFlowDescriptorReq)(nil), "schema.UpdateFlowDescriptorReq")
	proto.RegisterType((*UpdateFlowDescriptorRes)(nil), "schema.UpdateFlowDescriptorRes")
	proto.RegisterType((*RemoveFlowDescriptorReq)(nil), "schema.RemoveFlowDescriptorReq")
	proto.RegisterType((*RemoveFlowDescriptorRes)(nil), "schema.RemoveFlowDescriptorRes")
	proto.RegisterType((*ListFlowDescriptorsReq)(nil), "schema.ListFlowDescriptorsReq")
	proto.RegisterType((*ListFlowDescriptorsRes)(nil), "schema.ListFlowDescriptorsRes")
	proto.RegisterType((*GetPipeDescriptorReq)(nil), "schema.GetPipeDescriptorReq")
	proto.RegisterType((*AddPipeDescriptorReq)(nil), "schema.AddPipeDescriptorReq")
	proto.RegisterType((*AddPipeDescriptorRes)(nil), "schema.AddPipeDescriptorRes")
	proto.RegisterType((*UpdatePipeDescriptorReq)(nil), "schema.UpdatePipeDescriptorReq")
	proto.RegisterType((*UpdatePipeDescriptorRes)(nil), "schema.UpdatePipeDescriptorRes")
	proto.RegisterType((*RemovePipeDescriptorReq)(nil), "schema.RemovePipeDescriptorReq")
	proto.RegisterType((*RemovePipeDescriptorRes)(nil), "schema.RemovePipeDescriptorRes")
	proto.RegisterType((*ListPipeDescriptorsReq)(nil), "schema.ListPipeDescriptorsReq")
	proto.RegisterType((*ListPipeDescriptorsReq_Filter)(nil), "schema.ListPipeDescriptorsReq.Filter")
	proto.RegisterType((*ListPipeDescriptorsReq_Sort)(nil), "schema.ListPipeDescriptorsReq.Sort")
	proto.RegisterType((*ListPipeDescriptorsRes)(nil), "schema.ListPipeDescriptorsRes")
	proto.RegisterType((*GetDeviceTypeReq)(nil), "schema.GetDeviceTypeReq")
	proto.RegisterType((*AddDeviceTypeReq)(nil), "schema.AddDeviceTypeReq")
	proto.RegisterType((*AddDeviceTypeRes)(nil), "schema.AddDeviceTypeRes")
	proto.RegisterType((*UpdateDeviceTypeReq)(nil), "schema.UpdateDeviceTypeReq")
	proto.RegisterType((*UpdateDeviceTypeRes)(nil), "schema.UpdateDeviceTypeRes")
	proto.RegisterType((*RemoveDeviceTypeReq)(nil), "schema.RemoveDeviceTypeReq")
	proto.RegisterType((*RemoveDeviceTypeRes)(nil), "schema.RemoveDeviceTypeRes")
	proto.RegisterType((*ListDeviceTypesReq)(nil), "schema.ListDeviceTypesReq")
	proto.RegisterType((*ListDeviceTypesReq_Filter)(nil), "schema.ListDeviceTypesReq.Filter")
	proto.RegisterType((*ListDeviceTypesReq_Sort)(nil), "schema.ListDeviceTypesReq.Sort")
	proto.RegisterType((*ListDeviceTypesRes)(nil), "schema.ListDeviceTypesRes")
	proto.RegisterType((*GetDeviceReq)(nil), "schema.GetDeviceReq")
	proto.RegisterType((*AddDeviceReq)(nil), "schema.AddDeviceReq")
	proto.RegisterType((*AddDeviceRes)(nil), "schema.AddDeviceRes")
	proto.RegisterType((*UpdateDeviceReq)(nil), "schema.UpdateDeviceReq")
	proto.RegisterType((*UpdateDeviceRes)(nil), "schema.UpdateDeviceRes")
	proto.RegisterType((*RemoveDeviceReq)(nil), "schema.RemoveDeviceReq")
	proto.RegisterType((*RemoveDeviceRes)(nil), "schema.RemoveDeviceRes")
	proto.RegisterType((*ListDevicesReq)(nil), "schema.ListDevicesReq")
	proto.RegisterType((*ListDevicesReq_Filter)(nil), "schema.ListDevicesReq.Filter")
	proto.RegisterType((*ListDevicesReq_Sort)(nil), "schema.ListDevicesReq.Sort")
	proto.RegisterType((*ListDevicesRes)(nil), "schema.ListDevicesRes")
}

func init() { proto.RegisterFile("eviot_service.proto", fileDescriptor_8d3d93aa3a80b7c3) }

var fileDescriptor_8d3d93aa3a80b7c3 = []byte{
	// 1740 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x59, 0xdb, 0x72, 0x1b, 0x45,
	0x13, 0xfe, 0x25, 0xcb, 0xb2, 0xd4, 0x92, 0x4f, 0xe3, 0x93, 0xfe, 0x71, 0x9c, 0xd8, 0x4b, 0x4c,
	0xc5, 0x21, 0x65, 0x88, 0x13, 0x13, 0xec, 0x22, 0x55, 0x38, 0x24, 0x71, 0x5c, 0xa4, 0x20, 0xc8,
	0x0e, 0x50, 0xe4, 0x42, 0xb5, 0xf1, 0x6e, 0x9c, 0x2d, 0xdb, 0x5a, 0xb1, 0xb3, 0x72, 0xca, 0x77,
	0x3c, 0x00, 0x37, 0x3c, 0x01, 0xef, 0xc1, 0x03, 0xf0, 0x08, 0xbc, 0x05, 0xef, 0x40, 0xcd, 0x61,
	0x77, 0x66, 0xe7, 0xb0, 0x4a, 0x72, 0xc1, 0x45, 0xee, 0xb4, 0xd3, 0x5f, 0xf7, 0xcc, 0x74, 0xf7,
	0xcc, 0x74, 0x7f, 0x82, 0xb9, 0xf0, 0x22, 0x8a, 0xd3, 0x1e, 0x09, 0x93, 0x8b, 0xe8, 0x38, 0xdc,
	0x1c, 0x24, 0x71, 0x1a, 0xa3, 0x3a, 0x39, 0x7e, 0x1d, 0x9e, 0xfb, 0xb8, 0x95, 0xc6, 0xa7, 0x61,
	0x9f, 0x0f, 0xe2, 0x76, 0x10, 0x4a, 0x08, 0x9e, 0xe5, 0x5f, 0xbd, 0xf4, 0x72, 0x90, 0x0d, 0xc1,
	0xab, 0xb3, 0xf8, 0x8d, 0xf8, 0xbd, 0x40, 0x7f, 0xf7, 0x82, 0x90, 0x1c, 0x27, 0xd1, 0x20, 0x8d,
	0x93, 0x0c, 0x32, 0x88, 0x72, 0xf8, 0x02, 0xfd, 0x6d, 0x42, 0xda, 0x83, 0xb3, 0xe1, 0x49, 0x94,
	0x4d, 0x3a, 0xf9, 0x3a, 0x3c, 0x1b, 0x84, 0x09, 0x11, 0x9f, 0x4d, 0xbf, 0x7f, 0xc9, 0x7f, 0x7a,
	0x11, 0xb4, 0xf6, 0xc3, 0xf4, 0x88, 0x2e, 0xb0, 0x1b, 0xfe, 0x82, 0x16, 0x61, 0xfc, 0xc2, 0x3f,
	0x1b, 0x86, 0x9d, 0xca, 0x6a, 0xe5, 0x46, 0xf3, 0xc9, 0xff, 0xba, 0xfc, 0x13, 0xad, 0x40, 0x33,
	0xf5, 0x93, 0x93, 0x30, 0xed, 0x45, 0x41, 0xa7, 0x2a, 0x64, 0x0d, 0x3e, 0x74, 0x10, 0xa0, 0xff,
	0xc3, 0xc4, 0x90, 0x84, 0x09, 0x15, 0xd6, 0x84, 0xb0, 0x4e, 0x07, 0x0e, 0x82, 0x07, 0x0d, 0xa8,
	0xbf, 0x8a, 0xce, 0xd2, 0x30, 0xf1, 0xae, 0x42, 0xfb, 0x30, 0xf5, 0x93, 0xf4, 0xf1, 0x59, 0xfc,
	0x86, 0xce, 0x35, 0x05, 0xd5, 0x28, 0xe0, 0x13, 0x75, 0xab, 0x51, 0xe0, 0x4d, 0x15, 0xe4, 0xc4,
	0x5b, 0x81, 0xd6, 0x61, 0x1a, 0x0f, 0x5c, 0xf0, 0x49, 0x55, 0x4c, 0xa8, 0xf5, 0xfd, 0x30, 0x7d,
	0xc6, 0x76, 0x6d, 0x83, 0xef, 0x41, 0x7b, 0x2f, 0x08, 0xa4, 0x1c, 0x41, 0xad, 0xef, 0x9f, 0x8b,
	0x8d, 0x76, 0xd9, 0x6f, 0xb4, 0x02, 0xc0, 0xdd, 0xd6, 0x1b, 0x26, 0x11, 0xdf, 0x66, 0xb7, 0xc9,
	0x47, 0x9e, 0x27, 0x91, 0xb7, 0x59, 0x30, 0x41, 0xe8, 0x14, 0xf1, 0x29, 0x33, 0xd0, 0xe8, 0x56,
	0xe3, 0x53, 0x31, 0x65, 0x35, 0x9f, 0xf2, 0x08, 0xa6, 0x9f, 0x0f, 0x02, 0x3f, 0x0d, 0x9d, 0xab,
	0xca, 0x57, 0x51, 0x75, 0xae, 0x62, 0x4c, 0x5f, 0xc5, 0x9a, 0x6e, 0xd5, 0x58, 0x08, 0x85, 0x74,
	0xc3, 0xf3, 0xf8, 0xc2, 0x3d, 0xb1, 0x09, 0x31, 0xad, 0xfc, 0x59, 0x85, 0xa9, 0xa7, 0x11, 0x11,
	0x3e, 0x25, 0xd4, 0xca, 0x76, 0x16, 0x4c, 0x06, 0x6b, 0x6d, 0xad, 0x6c, 0xf2, 0x14, 0xdf, 0x2c,
	0xe2, 0x36, 0x1f, 0x33, 0x50, 0x57, 0x80, 0xd1, 0xa7, 0x50, 0x23, 0x71, 0x92, 0xb2, 0xdc, 0x68,
	0x6d, 0x2d, 0x3b, 0x94, 0x0e, 0xe3, 0x24, 0xed, 0x32, 0x20, 0x5a, 0x85, 0xda, 0xc0, 0x3f, 0x09,
	0x3b, 0xe3, 0x4c, 0xa1, 0x9d, 0x29, 0x3c, 0xf3, 0x4f, 0xc2, 0x2e, 0x93, 0xe0, 0x6d, 0xa8, 0xf3,
	0x49, 0xac, 0x81, 0x5c, 0x92, 0xf9, 0xc8, 0x3d, 0x2b, 0xb2, 0x11, 0x9f, 0x40, 0x8d, 0x4e, 0x83,
	0x36, 0x14, 0xbf, 0x4f, 0x6d, 0x2d, 0x64, 0x13, 0x50, 0xd9, 0xc3, 0x28, 0x09, 0x8f, 0xd3, 0x28,
	0xee, 0x0b, 0x5b, 0x77, 0x01, 0x8e, 0x93, 0xd0, 0x4f, 0xc3, 0xa0, 0xe7, 0xa7, 0x6c, 0x16, 0xa7,
	0x42, 0x53, 0x00, 0xf7, 0x52, 0x6f, 0x57, 0xf3, 0x1d, 0x41, 0x37, 0x60, 0x82, 0x07, 0x91, 0x74,
	0x2a, 0xab, 0x63, 0x37, 0x5a, 0x5b, 0x53, 0xf9, 0xb6, 0x78, 0x08, 0x32, 0xb1, 0x77, 0x05, 0x60,
	0x3f, 0x74, 0x1e, 0x93, 0x5d, 0x80, 0xbd, 0x20, 0xc8, 0xa4, 0xb7, 0x00, 0x69, 0x77, 0x44, 0x2f,
	0x47, 0xcf, 0x50, 0xc9, 0xc3, 0x5c, 0x70, 0x10, 0x78, 0xb7, 0x14, 0xdd, 0xd1, 0xf9, 0xfb, 0x2d,
	0xcc, 0x1c, 0xf2, 0x75, 0x1c, 0xa6, 0x7e, 0x3a, 0x24, 0xb6, 0x04, 0xbe, 0x09, 0x75, 0xc2, 0x84,
	0xc2, 0x95, 0x28, 0xdb, 0x94, 0xa2, 0x26, 0x10, 0x9e, 0x67, 0xd8, 0x33, 0x93, 0xee, 0x05, 0x20,
	0x81, 0xf9, 0xc1, 0x4f, 0x22, 0xff, 0xe5, 0x59, 0xf8, 0xb6, 0xc7, 0x66, 0x2d, 0xbb, 0xba, 0xc6,
	0x58, 0xd2, 0xb4, 0xb2, 0x85, 0xec, 0xf5, 0x2f, 0xc5, 0x2d, 0xe6, 0x5d, 0xb7, 0x18, 0xb7, 0xe4,
	0x7d, 0x05, 0xe6, 0x34, 0x98, 0x75, 0xeb, 0x4f, 0xa0, 0x79, 0x91, 0xc9, 0x3b, 0x55, 0x16, 0xd2,
	0x9b, 0x79, 0x5e, 0x98, 0xfa, 0x9b, 0xf9, 0xc7, 0xa3, 0x7e, 0x9a, 0x5c, 0x76, 0xa5, 0x32, 0x3e,
	0x80, 0xa9, 0xa2, 0x10, 0xcd, 0xc0, 0xd8, 0x69, 0x78, 0x29, 0x26, 0xa3, 0x3f, 0xe5, 0xf6, 0xaa,
	0xae, 0xed, 0xed, 0x56, 0xbf, 0xa8, 0x78, 0xbb, 0x30, 0xff, 0xa3, 0x9f, 0x1e, 0xbf, 0x7e, 0x0f,
	0x0f, 0x7a, 0x3b, 0x56, 0x5d, 0x22, 0xa7, 0xae, 0x38, 0x3d, 0xbb, 0x6e, 0x73, 0x99, 0xe9, 0xda,
	0x6b, 0x30, 0xc9, 0x6f, 0x1d, 0x57, 0x72, 0x6b, 0x00, 0xd3, 0xc2, 0xc7, 0x30, 0x2f, 0xce, 0x86,
	0x4c, 0x6c, 0x9b, 0xa1, 0xdf, 0x2a, 0x30, 0x2f, 0x52, 0xbd, 0x08, 0xb4, 0x5d, 0x17, 0x5f, 0x9a,
	0x91, 0xbc, 0xaa, 0xe6, 0x71, 0xb6, 0x27, 0xc5, 0x92, 0x54, 0x40, 0x1e, 0x8c, 0xd3, 0x37, 0x98,
	0x74, 0xc6, 0x98, 0xa6, 0xbc, 0xad, 0xa2, 0x41, 0xd8, 0xe5, 0x22, 0xef, 0x73, 0xeb, 0x6a, 0x46,
	0x1f, 0xc1, 0x3f, 0x2a, 0xb0, 0xc4, 0x6f, 0xfb, 0x91, 0x5b, 0xb6, 0x1e, 0x8a, 0xc2, 0xce, 0xc6,
	0xde, 0x7b, 0x67, 0x35, 0xf7, 0xce, 0x36, 0x5c, 0x0b, 0x34, 0x63, 0xb7, 0x01, 0x4b, 0x32, 0xb8,
	0xe5, 0xe1, 0x73, 0x42, 0x4d, 0xab, 0x43, 0x58, 0xa4, 0x37, 0x6d, 0x11, 0xc8, 0x0e, 0xac, 0xf2,
	0x0a, 0x54, 0xd4, 0x57, 0x80, 0x3e, 0x2f, 0xca, 0x7b, 0xd4, 0x56, 0x2f, 0xf3, 0xb7, 0x7d, 0x80,
	0xbc, 0x17, 0x8e, 0x69, 0x09, 0xda, 0x83, 0x19, 0xed, 0x4a, 0xce, 0x6e, 0xfc, 0x45, 0xd5, 0xf5,
	0xca, 0xae, 0xa6, 0x8b, 0x17, 0x35, 0x11, 0x59, 0x4e, 0xdd, 0x5c, 0xee, 0xa6, 0x7f, 0x78, 0x96,
	0x9b, 0x40, 0x5b, 0x2e, 0x2c, 0x83, 0xa8, 0x22, 0xa8, 0x43, 0x78, 0x59, 0xd1, 0xe0, 0x03, 0xcc,
	0x25, 0xad, 0x6c, 0xbd, 0x51, 0xdc, 0xe7, 0x55, 0x5c, 0x57, 0x1d, 0x42, 0x77, 0xa0, 0x3e, 0xf0,
	0x13, 0xff, 0x9c, 0x74, 0xc6, 0xd9, 0x66, 0x96, 0xd5, 0x6c, 0x90, 0xb3, 0x3f, 0xa3, 0x98, 0xae,
	0x80, 0xa2, 0x45, 0xa8, 0x47, 0xfd, 0xc1, 0x30, 0x25, 0x9d, 0xfa, 0xea, 0x18, 0x8d, 0x00, 0xff,
	0x42, 0x1d, 0x98, 0x88, 0x87, 0x29, 0x13, 0x4c, 0x30, 0x41, 0xf6, 0x49, 0x57, 0xd9, 0x0f, 0xc3,
	0xa0, 0x17, 0xf5, 0xa3, 0xb4, 0xd3, 0x60, 0x51, 0x6e, 0xd0, 0x81, 0x83, 0x7e, 0x94, 0x8a, 0x63,
	0xa4, 0x6f, 0x77, 0xf4, 0x31, 0xfa, 0xb5, 0x9a, 0x65, 0xe9, 0x48, 0x9f, 0x7e, 0xa8, 0xae, 0xdb,
	0x70, 0x79, 0xa0, 0xe4, 0x9c, 0x8e, 0x4e, 0x40, 0x27, 0xd4, 0xb4, 0xfa, 0x77, 0x95, 0x9f, 0x98,
	0x22, 0x92, 0x1d, 0xd4, 0xfb, 0x5a, 0x59, 0xb9, 0x5e, 0xa8, 0x10, 0x0d, 0xbc, 0x5e, 0x5e, 0xde,
	0x2b, 0x1c, 0xe7, 0x8f, 0x46, 0x28, 0xbf, 0x53, 0x99, 0xb9, 0x53, 0x5a, 0x66, 0x16, 0xd2, 0xa2,
	0x5a, 0x4c, 0x8b, 0xff, 0xae, 0xd4, 0x7c, 0xe1, 0xf0, 0x2b, 0xbb, 0x89, 0xb4, 0xee, 0xd0, 0xb8,
	0x89, 0xb4, 0xb8, 0x4d, 0x0f, 0x8a, 0x56, 0x68, 0xcd, 0xb6, 0x1f, 0xa6, 0x0f, 0x59, 0x97, 0x7a,
	0x74, 0x39, 0xb0, 0xd5, 0x12, 0xde, 0x11, 0xcc, 0xec, 0x05, 0x41, 0x11, 0x63, 0x3b, 0x45, 0xf6,
	0x5a, 0xb5, 0xe6, 0xa8, 0x55, 0xb7, 0x0c, 0xab, 0xa3, 0xcf, 0xf9, 0x0e, 0xcc, 0xf1, 0x24, 0x2f,
	0x5d, 0xb0, 0xb5, 0xf8, 0x59, 0xb7, 0xa9, 0x9a, 0x59, 0xbc, 0x0e, 0x73, 0x3c, 0xe1, 0xcb, 0x5d,
	0x62, 0x85, 0x99, 0xd6, 0xfe, 0xaa, 0x02, 0xa2, 0xb1, 0x93, 0x28, 0x76, 0x1e, 0x76, 0xb4, 0xf3,
	0xb0, 0xa6, 0xa6, 0x74, 0x11, 0xab, 0x9f, 0x85, 0x3b, 0x85, 0xb3, 0x70, 0xad, 0x44, 0xf1, 0x83,
	0x6a, 0xb7, 0xbe, 0xb1, 0xf8, 0x91, 0xa0, 0x6d, 0x68, 0x2b, 0xfc, 0x4a, 0x96, 0xfb, 0x79, 0x8b,
	0xa2, 0xc4, 0xa6, 0x15, 0x48, 0x4d, 0x41, 0x25, 0x70, 0xa9, 0x2d, 0xb8, 0x4f, 0x18, 0x0f, 0x20,
	0xe5, 0xb6, 0x5c, 0xbf, 0x0e, 0x53, 0xca, 0xd4, 0xf2, 0xd9, 0x68, 0xcb, 0x89, 0x0e, 0x02, 0xc1,
	0x28, 0x64, 0x96, 0x46, 0xe7, 0xf7, 0x76, 0xd6, 0xfb, 0x3b, 0x17, 0x67, 0xcd, 0xed, 0x35, 0x5d,
	0xad, 0x84, 0x32, 0x70, 0x6f, 0xdb, 0x80, 0xb8, 0x29, 0x03, 0x8e, 0x18, 0x4d, 0x19, 0x48, 0xdc,
	0x3b, 0x50, 0x06, 0x8a, 0xd2, 0x87, 0x48, 0x19, 0xe4, 0xdb, 0x63, 0x94, 0x01, 0x4f, 0x17, 0x83,
	0x32, 0x10, 0x21, 0xc8, 0xc4, 0x5b, 0xbf, 0xcf, 0x41, 0xfb, 0xd1, 0x45, 0x14, 0xa7, 0x87, 0x9c,
	0x81, 0x44, 0x9b, 0xd0, 0xc8, 0x78, 0x3d, 0x34, 0x97, 0x69, 0x29, 0x4c, 0x1f, 0x9e, 0xcc, 0x06,
	0x39, 0xe6, 0x36, 0x34, 0x73, 0xfa, 0x0c, 0xcd, 0x2b, 0x0a, 0x39, 0x85, 0x84, 0x35, 0xbe, 0x02,
	0xdd, 0x83, 0x66, 0x4e, 0x87, 0x49, 0x15, 0x95, 0x64, 0xc3, 0xb6, 0x51, 0x82, 0xbe, 0x82, 0xb6,
	0xca, 0x60, 0xa1, 0xa5, 0x0c, 0xa5, 0xb1, 0x65, 0xd8, 0x21, 0x60, 0x16, 0x54, 0xf6, 0x4a, 0x5a,
	0xd0, 0x68, 0x2f, 0xec, 0x10, 0x10, 0x74, 0x1f, 0x5a, 0x0a, 0x3f, 0x83, 0x16, 0xed, 0x9c, 0x14,
	0xb6, 0x8f, 0x13, 0xf4, 0x09, 0x4c, 0x88, 0x36, 0x14, 0x21, 0xc5, 0x59, 0xa2, 0xad, 0xc5, 0x6d,
	0xb5, 0xd0, 0x47, 0xb7, 0x61, 0x42, 0x34, 0x7f, 0x12, 0x2c, 0x29, 0x1c, 0x6c, 0x8e, 0x11, 0xf4,
	0x35, 0x4c, 0x16, 0xa8, 0x12, 0xd4, 0xd1, 0x98, 0x85, 0x9c, 0x91, 0xc1, 0x2e, 0x09, 0x41, 0x07,
	0x30, 0xad, 0x35, 0xe5, 0x08, 0x3b, 0x08, 0x0a, 0x6a, 0xc8, 0x2d, 0x23, 0xe8, 0x69, 0x4e, 0xdd,
	0xe4, 0xfd, 0x3d, 0x5a, 0x2e, 0x21, 0x3b, 0x70, 0x89, 0x90, 0xa0, 0xef, 0x61, 0xd6, 0x20, 0x1a,
	0xd0, 0x95, 0x4c, 0xc3, 0xc6, 0x5f, 0xe0, 0x32, 0x29, 0xf9, 0xac, 0x82, 0x76, 0x01, 0x64, 0xc3,
	0x88, 0x16, 0x8a, 0x61, 0xcf, 0x3c, 0x6d, 0x1d, 0x26, 0x34, 0x91, 0x73, 0xe2, 0x59, 0x26, 0xb2,
	0xca, 0x55, 0x63, 0xdb, 0x28, 0x41, 0x77, 0xa1, 0x91, 0x51, 0xd0, 0xf2, 0x90, 0x29, 0x9c, 0x35,
	0xb6, 0x0c, 0xd2, 0xb0, 0xcc, 0x1a, 0x14, 0x86, 0xdc, 0xbd, 0x8d, 0xdd, 0xc0, 0x8e, 0xc6, 0x11,
	0x7d, 0x07, 0xb3, 0x06, 0xad, 0x20, 0x4d, 0xd9, 0xf8, 0x0f, 0x5c, 0x26, 0x25, 0xe8, 0x27, 0x98,
	0xb7, 0x75, 0xf3, 0xe8, 0x5a, 0xf1, 0x24, 0x9a, 0x66, 0x47, 0x00, 0x98, 0x65, 0x5b, 0x47, 0x2f,
	0x2d, 0x3b, 0xa8, 0x01, 0x3c, 0x02, 0x40, 0xd0, 0x73, 0x98, 0xb3, 0x74, 0xe2, 0xe8, 0xaa, 0x7a,
	0x74, 0x4d, 0x76, 0x00, 0x97, 0xcb, 0xb3, 0x30, 0x15, 0xeb, 0xe3, 0x42, 0x98, 0x8c, 0xee, 0x08,
	0x3b, 0xaa, 0x6a, 0x11, 0x26, 0x97, 0x29, 0x5b, 0x03, 0x8f, 0xcb, 0xa4, 0x4a, 0x98, 0x34, 0x9b,
	0x5a, 0x14, 0x4c, 0xb3, 0x23, 0x00, 0x4a, 0x98, 0x5c, 0x96, 0x1d, 0x9d, 0x21, 0x1e, 0x01, 0xc8,
	0xc3, 0xa4, 0xb5, 0x29, 0xc5, 0x30, 0x99, 0xed, 0x1a, 0x2e, 0x97, 0xd3, 0x8b, 0x7c, 0xb2, 0xd0,
	0xa0, 0xc8, 0x9b, 0x52, 0xef, 0x5b, 0xb0, 0xa5, 0xf0, 0xa3, 0x17, 0x6d, 0xa1, 0xcb, 0x90, 0xea,
	0x7a, 0x4b, 0x83, 0x5d, 0x12, 0x76, 0x3b, 0xea, 0xbd, 0x83, 0xbc, 0x1d, 0x2d, 0x0d, 0x09, 0x2e,
	0x11, 0x32, 0x6b, 0x7a, 0xef, 0x20, 0xad, 0x59, 0x9a, 0x0f, 0x5c, 0x22, 0x64, 0x8f, 0x80, 0x56,
	0x19, 0xcb, 0x47, 0xc0, 0xec, 0x0a, 0xb0, 0x5b, 0x46, 0x44, 0x8d, 0xc0, 0x07, 0x0b, 0x35, 0x42,
	0x5e, 0x33, 0x62, 0xad, 0x40, 0x11, 0x35, 0x82, 0xae, 0xa2, 0x56, 0xcf, 0xd8, 0x36, 0xaa, 0xd4,
	0x08, 0x42, 0x77, 0xc9, 0xe6, 0x31, 0x4b, 0x8d, 0x50, 0xb0, 0xa0, 0xfa, 0x43, 0xaf, 0x11, 0x2c,
	0x16, 0xf4, 0xea, 0x56, 0xd4, 0x08, 0xa2, 0x20, 0x2b, 0xd6, 0x08, 0xb2, 0x08, 0xc5, 0xf6, 0x71,
	0xf2, 0xa0, 0xfe, 0x73, 0xed, 0xc4, 0x1f, 0x44, 0x2f, 0xeb, 0xec, 0x9f, 0xd6, 0x3b, 0xff, 0x06,
	0x00, 0x00, 0xff, 0xff, 0xb3, 0xbc, 0x09, 0x19, 0x24, 0x1e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EviotServiceClient is the client API for EviotService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EviotServiceClient interface {
	GetToken(ctx context.Context, in *GetTokenReq, opts ...grpc.CallOption) (*Token, error)
	GetPlugin(ctx context.Context, in *GetPluginReq, opts ...grpc.CallOption) (*Plugin, error)
	AddPlugin(ctx context.Context, in *AddPluginReq, opts ...grpc.CallOption) (*AddPluginRes, error)
	UpdatePlugin(ctx context.Context, in *UpdatePluginReq, opts ...grpc.CallOption) (*UpdatePluginRes, error)
	RemovePlugin(ctx context.Context, in *RemovePluginReq, opts ...grpc.CallOption) (*RemovePluginRes, error)
	ListPlugins(ctx context.Context, in *ListPluginsReq, opts ...grpc.CallOption) (*ListPluginsRes, error)
	GetFlow(ctx context.Context, in *GetFlowReq, opts ...grpc.CallOption) (*Flow, error)
	AddFlow(ctx context.Context, in *AddFlowReq, opts ...grpc.CallOption) (*AddFlowRes, error)
	SetFlowStatus(ctx context.Context, in *SetFlowStatusReq, opts ...grpc.CallOption) (*SetFlowStatusRes, error)
	SetFlowVariable(ctx context.Context, in *SetFlowVariableReq, opts ...grpc.CallOption) (*SetFlowVariableRes, error)
	SetFlowVariables(ctx context.Context, in *SetFlowVariablesReq, opts ...grpc.CallOption) (*SetFlowVariablesRes, error)
	WatchFlowVariable(ctx context.Context, in *WatchFlowVariableReq, opts ...grpc.CallOption) (EviotService_WatchFlowVariableClient, error)
	// unimplemented
	RemoveFlow(ctx context.Context, in *RemoveFlowReq, opts ...grpc.CallOption) (*RemoveFlowRes, error)
	StartFlow(ctx context.Context, in *StartFlowReq, opts ...grpc.CallOption) (*StartFlowRes, error)
	// unimplemented
	StopFlow(ctx context.Context, in *StopFlowReq, opts ...grpc.CallOption) (*StopFlowRes, error)
	GetFlowDescriptor(ctx context.Context, in *GetFlowDescriptorReq, opts ...grpc.CallOption) (*FlowDescriptor, error)
	AddFlowDescriptor(ctx context.Context, in *AddFlowDescriptorReq, opts ...grpc.CallOption) (*AddFlowDescriptorRes, error)
	UpdateFlowDescriptor(ctx context.Context, in *UpdateFlowDescriptorReq, opts ...grpc.CallOption) (*UpdateFlowDescriptorRes, error)
	RemoveFlowDescriptor(ctx context.Context, in *RemoveFlowDescriptorReq, opts ...grpc.CallOption) (*RemoveFlowDescriptorRes, error)
	// unimplemented
	ListFlowDescriptors(ctx context.Context, in *ListFlowDescriptorsReq, opts ...grpc.CallOption) (*ListFlowDescriptorsRes, error)
	GetPipeDescriptor(ctx context.Context, in *GetPipeDescriptorReq, opts ...grpc.CallOption) (*PipeDescriptor, error)
	AddPipeDescriptor(ctx context.Context, in *AddPipeDescriptorReq, opts ...grpc.CallOption) (*AddPipeDescriptorRes, error)
	// unimplemented
	UpdatePipeDescriptor(ctx context.Context, in *UpdatePipeDescriptorReq, opts ...grpc.CallOption) (*UpdatePipeDescriptorRes, error)
	RemovePipeDescriptor(ctx context.Context, in *RemovePipeDescriptorReq, opts ...grpc.CallOption) (*RemovePipeDescriptorRes, error)
	ListPipeDescriptors(ctx context.Context, in *ListPipeDescriptorsReq, opts ...grpc.CallOption) (*ListPipeDescriptorsRes, error)
	GetDeviceType(ctx context.Context, in *GetDeviceTypeReq, opts ...grpc.CallOption) (*DeviceType, error)
	AddDeviceType(ctx context.Context, in *AddDeviceTypeReq, opts ...grpc.CallOption) (*AddDeviceTypeRes, error)
	UpdateDeviceType(ctx context.Context, in *UpdateDeviceTypeReq, opts ...grpc.CallOption) (*UpdateDeviceTypeRes, error)
	RemoveDeviceType(ctx context.Context, in *RemoveDeviceTypeReq, opts ...grpc.CallOption) (*RemoveDeviceTypeRes, error)
	ListDeviceTypes(ctx context.Context, in *ListDeviceTypesReq, opts ...grpc.CallOption) (*ListDeviceTypesRes, error)
	GetDevice(ctx context.Context, in *GetDeviceReq, opts ...grpc.CallOption) (*Device, error)
	AddDevice(ctx context.Context, in *AddDeviceReq, opts ...grpc.CallOption) (*AddDeviceRes, error)
	UpdateDevice(ctx context.Context, in *UpdateDeviceReq, opts ...grpc.CallOption) (*UpdateDeviceRes, error)
	RemoveDevice(ctx context.Context, in *RemoveDeviceReq, opts ...grpc.CallOption) (*RemoveDeviceRes, error)
	ListDevices(ctx context.Context, in *ListDevicesReq, opts ...grpc.CallOption) (*ListDevicesRes, error)
}

type eviotServiceClient struct {
	cc *grpc.ClientConn
}

func NewEviotServiceClient(cc *grpc.ClientConn) EviotServiceClient {
	return &eviotServiceClient{cc}
}

func (c *eviotServiceClient) GetToken(ctx context.Context, in *GetTokenReq, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/schema.EviotService/GetToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) GetPlugin(ctx context.Context, in *GetPluginReq, opts ...grpc.CallOption) (*Plugin, error) {
	out := new(Plugin)
	err := c.cc.Invoke(ctx, "/schema.EviotService/GetPlugin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) AddPlugin(ctx context.Context, in *AddPluginReq, opts ...grpc.CallOption) (*AddPluginRes, error) {
	out := new(AddPluginRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/AddPlugin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) UpdatePlugin(ctx context.Context, in *UpdatePluginReq, opts ...grpc.CallOption) (*UpdatePluginRes, error) {
	out := new(UpdatePluginRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/UpdatePlugin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) RemovePlugin(ctx context.Context, in *RemovePluginReq, opts ...grpc.CallOption) (*RemovePluginRes, error) {
	out := new(RemovePluginRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/RemovePlugin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) ListPlugins(ctx context.Context, in *ListPluginsReq, opts ...grpc.CallOption) (*ListPluginsRes, error) {
	out := new(ListPluginsRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/ListPlugins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) GetFlow(ctx context.Context, in *GetFlowReq, opts ...grpc.CallOption) (*Flow, error) {
	out := new(Flow)
	err := c.cc.Invoke(ctx, "/schema.EviotService/GetFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) AddFlow(ctx context.Context, in *AddFlowReq, opts ...grpc.CallOption) (*AddFlowRes, error) {
	out := new(AddFlowRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/AddFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) SetFlowStatus(ctx context.Context, in *SetFlowStatusReq, opts ...grpc.CallOption) (*SetFlowStatusRes, error) {
	out := new(SetFlowStatusRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/SetFlowStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) SetFlowVariable(ctx context.Context, in *SetFlowVariableReq, opts ...grpc.CallOption) (*SetFlowVariableRes, error) {
	out := new(SetFlowVariableRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/SetFlowVariable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) SetFlowVariables(ctx context.Context, in *SetFlowVariablesReq, opts ...grpc.CallOption) (*SetFlowVariablesRes, error) {
	out := new(SetFlowVariablesRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/SetFlowVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) WatchFlowVariable(ctx context.Context, in *WatchFlowVariableReq, opts ...grpc.CallOption) (EviotService_WatchFlowVariableClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EviotService_serviceDesc.Streams[0], "/schema.EviotService/WatchFlowVariable", opts...)
	if err != nil {
		return nil, err
	}
	x := &eviotServiceWatchFlowVariableClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EviotService_WatchFlowVariableClient interface {
	Recv() (*WatchFlowVariableRes, error)
	grpc.ClientStream
}

type eviotServiceWatchFlowVariableClient struct {
	grpc.ClientStream
}

func (x *eviotServiceWatchFlowVariableClient) Recv() (*WatchFlowVariableRes, error) {
	m := new(WatchFlowVariableRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *eviotServiceClient) RemoveFlow(ctx context.Context, in *RemoveFlowReq, opts ...grpc.CallOption) (*RemoveFlowRes, error) {
	out := new(RemoveFlowRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/RemoveFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) StartFlow(ctx context.Context, in *StartFlowReq, opts ...grpc.CallOption) (*StartFlowRes, error) {
	out := new(StartFlowRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/StartFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) StopFlow(ctx context.Context, in *StopFlowReq, opts ...grpc.CallOption) (*StopFlowRes, error) {
	out := new(StopFlowRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/StopFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) GetFlowDescriptor(ctx context.Context, in *GetFlowDescriptorReq, opts ...grpc.CallOption) (*FlowDescriptor, error) {
	out := new(FlowDescriptor)
	err := c.cc.Invoke(ctx, "/schema.EviotService/GetFlowDescriptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) AddFlowDescriptor(ctx context.Context, in *AddFlowDescriptorReq, opts ...grpc.CallOption) (*AddFlowDescriptorRes, error) {
	out := new(AddFlowDescriptorRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/AddFlowDescriptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) UpdateFlowDescriptor(ctx context.Context, in *UpdateFlowDescriptorReq, opts ...grpc.CallOption) (*UpdateFlowDescriptorRes, error) {
	out := new(UpdateFlowDescriptorRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/UpdateFlowDescriptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) RemoveFlowDescriptor(ctx context.Context, in *RemoveFlowDescriptorReq, opts ...grpc.CallOption) (*RemoveFlowDescriptorRes, error) {
	out := new(RemoveFlowDescriptorRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/RemoveFlowDescriptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) ListFlowDescriptors(ctx context.Context, in *ListFlowDescriptorsReq, opts ...grpc.CallOption) (*ListFlowDescriptorsRes, error) {
	out := new(ListFlowDescriptorsRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/ListFlowDescriptors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) GetPipeDescriptor(ctx context.Context, in *GetPipeDescriptorReq, opts ...grpc.CallOption) (*PipeDescriptor, error) {
	out := new(PipeDescriptor)
	err := c.cc.Invoke(ctx, "/schema.EviotService/GetPipeDescriptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) AddPipeDescriptor(ctx context.Context, in *AddPipeDescriptorReq, opts ...grpc.CallOption) (*AddPipeDescriptorRes, error) {
	out := new(AddPipeDescriptorRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/AddPipeDescriptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) UpdatePipeDescriptor(ctx context.Context, in *UpdatePipeDescriptorReq, opts ...grpc.CallOption) (*UpdatePipeDescriptorRes, error) {
	out := new(UpdatePipeDescriptorRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/UpdatePipeDescriptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) RemovePipeDescriptor(ctx context.Context, in *RemovePipeDescriptorReq, opts ...grpc.CallOption) (*RemovePipeDescriptorRes, error) {
	out := new(RemovePipeDescriptorRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/RemovePipeDescriptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) ListPipeDescriptors(ctx context.Context, in *ListPipeDescriptorsReq, opts ...grpc.CallOption) (*ListPipeDescriptorsRes, error) {
	out := new(ListPipeDescriptorsRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/ListPipeDescriptors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) GetDeviceType(ctx context.Context, in *GetDeviceTypeReq, opts ...grpc.CallOption) (*DeviceType, error) {
	out := new(DeviceType)
	err := c.cc.Invoke(ctx, "/schema.EviotService/GetDeviceType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) AddDeviceType(ctx context.Context, in *AddDeviceTypeReq, opts ...grpc.CallOption) (*AddDeviceTypeRes, error) {
	out := new(AddDeviceTypeRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/AddDeviceType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) UpdateDeviceType(ctx context.Context, in *UpdateDeviceTypeReq, opts ...grpc.CallOption) (*UpdateDeviceTypeRes, error) {
	out := new(UpdateDeviceTypeRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/UpdateDeviceType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) RemoveDeviceType(ctx context.Context, in *RemoveDeviceTypeReq, opts ...grpc.CallOption) (*RemoveDeviceTypeRes, error) {
	out := new(RemoveDeviceTypeRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/RemoveDeviceType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) ListDeviceTypes(ctx context.Context, in *ListDeviceTypesReq, opts ...grpc.CallOption) (*ListDeviceTypesRes, error) {
	out := new(ListDeviceTypesRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/ListDeviceTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) GetDevice(ctx context.Context, in *GetDeviceReq, opts ...grpc.CallOption) (*Device, error) {
	out := new(Device)
	err := c.cc.Invoke(ctx, "/schema.EviotService/GetDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) AddDevice(ctx context.Context, in *AddDeviceReq, opts ...grpc.CallOption) (*AddDeviceRes, error) {
	out := new(AddDeviceRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/AddDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) UpdateDevice(ctx context.Context, in *UpdateDeviceReq, opts ...grpc.CallOption) (*UpdateDeviceRes, error) {
	out := new(UpdateDeviceRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/UpdateDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) RemoveDevice(ctx context.Context, in *RemoveDeviceReq, opts ...grpc.CallOption) (*RemoveDeviceRes, error) {
	out := new(RemoveDeviceRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/RemoveDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eviotServiceClient) ListDevices(ctx context.Context, in *ListDevicesReq, opts ...grpc.CallOption) (*ListDevicesRes, error) {
	out := new(ListDevicesRes)
	err := c.cc.Invoke(ctx, "/schema.EviotService/ListDevices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EviotServiceServer is the server API for EviotService service.
type EviotServiceServer interface {
	GetToken(context.Context, *GetTokenReq) (*Token, error)
	GetPlugin(context.Context, *GetPluginReq) (*Plugin, error)
	AddPlugin(context.Context, *AddPluginReq) (*AddPluginRes, error)
	UpdatePlugin(context.Context, *UpdatePluginReq) (*UpdatePluginRes, error)
	RemovePlugin(context.Context, *RemovePluginReq) (*RemovePluginRes, error)
	ListPlugins(context.Context, *ListPluginsReq) (*ListPluginsRes, error)
	GetFlow(context.Context, *GetFlowReq) (*Flow, error)
	AddFlow(context.Context, *AddFlowReq) (*AddFlowRes, error)
	SetFlowStatus(context.Context, *SetFlowStatusReq) (*SetFlowStatusRes, error)
	SetFlowVariable(context.Context, *SetFlowVariableReq) (*SetFlowVariableRes, error)
	SetFlowVariables(context.Context, *SetFlowVariablesReq) (*SetFlowVariablesRes, error)
	WatchFlowVariable(*WatchFlowVariableReq, EviotService_WatchFlowVariableServer) error
	// unimplemented
	RemoveFlow(context.Context, *RemoveFlowReq) (*RemoveFlowRes, error)
	StartFlow(context.Context, *StartFlowReq) (*StartFlowRes, error)
	// unimplemented
	StopFlow(context.Context, *StopFlowReq) (*StopFlowRes, error)
	GetFlowDescriptor(context.Context, *GetFlowDescriptorReq) (*FlowDescriptor, error)
	AddFlowDescriptor(context.Context, *AddFlowDescriptorReq) (*AddFlowDescriptorRes, error)
	UpdateFlowDescriptor(context.Context, *UpdateFlowDescriptorReq) (*UpdateFlowDescriptorRes, error)
	RemoveFlowDescriptor(context.Context, *RemoveFlowDescriptorReq) (*RemoveFlowDescriptorRes, error)
	// unimplemented
	ListFlowDescriptors(context.Context, *ListFlowDescriptorsReq) (*ListFlowDescriptorsRes, error)
	GetPipeDescriptor(context.Context, *GetPipeDescriptorReq) (*PipeDescriptor, error)
	AddPipeDescriptor(context.Context, *AddPipeDescriptorReq) (*AddPipeDescriptorRes, error)
	// unimplemented
	UpdatePipeDescriptor(context.Context, *UpdatePipeDescriptorReq) (*UpdatePipeDescriptorRes, error)
	RemovePipeDescriptor(context.Context, *RemovePipeDescriptorReq) (*RemovePipeDescriptorRes, error)
	ListPipeDescriptors(context.Context, *ListPipeDescriptorsReq) (*ListPipeDescriptorsRes, error)
	GetDeviceType(context.Context, *GetDeviceTypeReq) (*DeviceType, error)
	AddDeviceType(context.Context, *AddDeviceTypeReq) (*AddDeviceTypeRes, error)
	UpdateDeviceType(context.Context, *UpdateDeviceTypeReq) (*UpdateDeviceTypeRes, error)
	RemoveDeviceType(context.Context, *RemoveDeviceTypeReq) (*RemoveDeviceTypeRes, error)
	ListDeviceTypes(context.Context, *ListDeviceTypesReq) (*ListDeviceTypesRes, error)
	GetDevice(context.Context, *GetDeviceReq) (*Device, error)
	AddDevice(context.Context, *AddDeviceReq) (*AddDeviceRes, error)
	UpdateDevice(context.Context, *UpdateDeviceReq) (*UpdateDeviceRes, error)
	RemoveDevice(context.Context, *RemoveDeviceReq) (*RemoveDeviceRes, error)
	ListDevices(context.Context, *ListDevicesReq) (*ListDevicesRes, error)
}

// UnimplementedEviotServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEviotServiceServer struct {
}

func (*UnimplementedEviotServiceServer) GetToken(ctx context.Context, req *GetTokenReq) (*Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetToken not implemented")
}
func (*UnimplementedEviotServiceServer) GetPlugin(ctx context.Context, req *GetPluginReq) (*Plugin, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlugin not implemented")
}
func (*UnimplementedEviotServiceServer) AddPlugin(ctx context.Context, req *AddPluginReq) (*AddPluginRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPlugin not implemented")
}
func (*UnimplementedEviotServiceServer) UpdatePlugin(ctx context.Context, req *UpdatePluginReq) (*UpdatePluginRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePlugin not implemented")
}
func (*UnimplementedEviotServiceServer) RemovePlugin(ctx context.Context, req *RemovePluginReq) (*RemovePluginRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePlugin not implemented")
}
func (*UnimplementedEviotServiceServer) ListPlugins(ctx context.Context, req *ListPluginsReq) (*ListPluginsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPlugins not implemented")
}
func (*UnimplementedEviotServiceServer) GetFlow(ctx context.Context, req *GetFlowReq) (*Flow, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFlow not implemented")
}
func (*UnimplementedEviotServiceServer) AddFlow(ctx context.Context, req *AddFlowReq) (*AddFlowRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFlow not implemented")
}
func (*UnimplementedEviotServiceServer) SetFlowStatus(ctx context.Context, req *SetFlowStatusReq) (*SetFlowStatusRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetFlowStatus not implemented")
}
func (*UnimplementedEviotServiceServer) SetFlowVariable(ctx context.Context, req *SetFlowVariableReq) (*SetFlowVariableRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetFlowVariable not implemented")
}
func (*UnimplementedEviotServiceServer) SetFlowVariables(ctx context.Context, req *SetFlowVariablesReq) (*SetFlowVariablesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetFlowVariables not implemented")
}
func (*UnimplementedEviotServiceServer) WatchFlowVariable(req *WatchFlowVariableReq, srv EviotService_WatchFlowVariableServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchFlowVariable not implemented")
}
func (*UnimplementedEviotServiceServer) RemoveFlow(ctx context.Context, req *RemoveFlowReq) (*RemoveFlowRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFlow not implemented")
}
func (*UnimplementedEviotServiceServer) StartFlow(ctx context.Context, req *StartFlowReq) (*StartFlowRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartFlow not implemented")
}
func (*UnimplementedEviotServiceServer) StopFlow(ctx context.Context, req *StopFlowReq) (*StopFlowRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopFlow not implemented")
}
func (*UnimplementedEviotServiceServer) GetFlowDescriptor(ctx context.Context, req *GetFlowDescriptorReq) (*FlowDescriptor, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFlowDescriptor not implemented")
}
func (*UnimplementedEviotServiceServer) AddFlowDescriptor(ctx context.Context, req *AddFlowDescriptorReq) (*AddFlowDescriptorRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFlowDescriptor not implemented")
}
func (*UnimplementedEviotServiceServer) UpdateFlowDescriptor(ctx context.Context, req *UpdateFlowDescriptorReq) (*UpdateFlowDescriptorRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFlowDescriptor not implemented")
}
func (*UnimplementedEviotServiceServer) RemoveFlowDescriptor(ctx context.Context, req *RemoveFlowDescriptorReq) (*RemoveFlowDescriptorRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFlowDescriptor not implemented")
}
func (*UnimplementedEviotServiceServer) ListFlowDescriptors(ctx context.Context, req *ListFlowDescriptorsReq) (*ListFlowDescriptorsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFlowDescriptors not implemented")
}
func (*UnimplementedEviotServiceServer) GetPipeDescriptor(ctx context.Context, req *GetPipeDescriptorReq) (*PipeDescriptor, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPipeDescriptor not implemented")
}
func (*UnimplementedEviotServiceServer) AddPipeDescriptor(ctx context.Context, req *AddPipeDescriptorReq) (*AddPipeDescriptorRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPipeDescriptor not implemented")
}
func (*UnimplementedEviotServiceServer) UpdatePipeDescriptor(ctx context.Context, req *UpdatePipeDescriptorReq) (*UpdatePipeDescriptorRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePipeDescriptor not implemented")
}
func (*UnimplementedEviotServiceServer) RemovePipeDescriptor(ctx context.Context, req *RemovePipeDescriptorReq) (*RemovePipeDescriptorRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePipeDescriptor not implemented")
}
func (*UnimplementedEviotServiceServer) ListPipeDescriptors(ctx context.Context, req *ListPipeDescriptorsReq) (*ListPipeDescriptorsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPipeDescriptors not implemented")
}
func (*UnimplementedEviotServiceServer) GetDeviceType(ctx context.Context, req *GetDeviceTypeReq) (*DeviceType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceType not implemented")
}
func (*UnimplementedEviotServiceServer) AddDeviceType(ctx context.Context, req *AddDeviceTypeReq) (*AddDeviceTypeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDeviceType not implemented")
}
func (*UnimplementedEviotServiceServer) UpdateDeviceType(ctx context.Context, req *UpdateDeviceTypeReq) (*UpdateDeviceTypeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeviceType not implemented")
}
func (*UnimplementedEviotServiceServer) RemoveDeviceType(ctx context.Context, req *RemoveDeviceTypeReq) (*RemoveDeviceTypeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDeviceType not implemented")
}
func (*UnimplementedEviotServiceServer) ListDeviceTypes(ctx context.Context, req *ListDeviceTypesReq) (*ListDeviceTypesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDeviceTypes not implemented")
}
func (*UnimplementedEviotServiceServer) GetDevice(ctx context.Context, req *GetDeviceReq) (*Device, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDevice not implemented")
}
func (*UnimplementedEviotServiceServer) AddDevice(ctx context.Context, req *AddDeviceReq) (*AddDeviceRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDevice not implemented")
}
func (*UnimplementedEviotServiceServer) UpdateDevice(ctx context.Context, req *UpdateDeviceReq) (*UpdateDeviceRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDevice not implemented")
}
func (*UnimplementedEviotServiceServer) RemoveDevice(ctx context.Context, req *RemoveDeviceReq) (*RemoveDeviceRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDevice not implemented")
}
func (*UnimplementedEviotServiceServer) ListDevices(ctx context.Context, req *ListDevicesReq) (*ListDevicesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDevices not implemented")
}

func RegisterEviotServiceServer(s *grpc.Server, srv EviotServiceServer) {
	s.RegisterService(&_EviotService_serviceDesc, srv)
}

func _EviotService_GetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTokenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).GetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/GetToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).GetToken(ctx, req.(*GetTokenReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_GetPlugin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPluginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).GetPlugin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/GetPlugin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).GetPlugin(ctx, req.(*GetPluginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_AddPlugin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPluginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).AddPlugin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/AddPlugin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).AddPlugin(ctx, req.(*AddPluginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_UpdatePlugin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePluginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).UpdatePlugin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/UpdatePlugin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).UpdatePlugin(ctx, req.(*UpdatePluginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_RemovePlugin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePluginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).RemovePlugin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/RemovePlugin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).RemovePlugin(ctx, req.(*RemovePluginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_ListPlugins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPluginsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).ListPlugins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/ListPlugins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).ListPlugins(ctx, req.(*ListPluginsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_GetFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFlowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).GetFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/GetFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).GetFlow(ctx, req.(*GetFlowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_AddFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFlowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).AddFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/AddFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).AddFlow(ctx, req.(*AddFlowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_SetFlowStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetFlowStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).SetFlowStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/SetFlowStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).SetFlowStatus(ctx, req.(*SetFlowStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_SetFlowVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetFlowVariableReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).SetFlowVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/SetFlowVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).SetFlowVariable(ctx, req.(*SetFlowVariableReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_SetFlowVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetFlowVariablesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).SetFlowVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/SetFlowVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).SetFlowVariables(ctx, req.(*SetFlowVariablesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_WatchFlowVariable_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchFlowVariableReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EviotServiceServer).WatchFlowVariable(m, &eviotServiceWatchFlowVariableServer{stream})
}

type EviotService_WatchFlowVariableServer interface {
	Send(*WatchFlowVariableRes) error
	grpc.ServerStream
}

type eviotServiceWatchFlowVariableServer struct {
	grpc.ServerStream
}

func (x *eviotServiceWatchFlowVariableServer) Send(m *WatchFlowVariableRes) error {
	return x.ServerStream.SendMsg(m)
}

func _EviotService_RemoveFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveFlowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).RemoveFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/RemoveFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).RemoveFlow(ctx, req.(*RemoveFlowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_StartFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartFlowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).StartFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/StartFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).StartFlow(ctx, req.(*StartFlowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_StopFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopFlowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).StopFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/StopFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).StopFlow(ctx, req.(*StopFlowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_GetFlowDescriptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFlowDescriptorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).GetFlowDescriptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/GetFlowDescriptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).GetFlowDescriptor(ctx, req.(*GetFlowDescriptorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_AddFlowDescriptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFlowDescriptorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).AddFlowDescriptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/AddFlowDescriptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).AddFlowDescriptor(ctx, req.(*AddFlowDescriptorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_UpdateFlowDescriptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFlowDescriptorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).UpdateFlowDescriptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/UpdateFlowDescriptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).UpdateFlowDescriptor(ctx, req.(*UpdateFlowDescriptorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_RemoveFlowDescriptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveFlowDescriptorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).RemoveFlowDescriptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/RemoveFlowDescriptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).RemoveFlowDescriptor(ctx, req.(*RemoveFlowDescriptorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_ListFlowDescriptors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFlowDescriptorsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).ListFlowDescriptors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/ListFlowDescriptors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).ListFlowDescriptors(ctx, req.(*ListFlowDescriptorsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_GetPipeDescriptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPipeDescriptorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).GetPipeDescriptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/GetPipeDescriptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).GetPipeDescriptor(ctx, req.(*GetPipeDescriptorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_AddPipeDescriptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPipeDescriptorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).AddPipeDescriptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/AddPipeDescriptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).AddPipeDescriptor(ctx, req.(*AddPipeDescriptorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_UpdatePipeDescriptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePipeDescriptorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).UpdatePipeDescriptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/UpdatePipeDescriptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).UpdatePipeDescriptor(ctx, req.(*UpdatePipeDescriptorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_RemovePipeDescriptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePipeDescriptorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).RemovePipeDescriptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/RemovePipeDescriptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).RemovePipeDescriptor(ctx, req.(*RemovePipeDescriptorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_ListPipeDescriptors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPipeDescriptorsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).ListPipeDescriptors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/ListPipeDescriptors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).ListPipeDescriptors(ctx, req.(*ListPipeDescriptorsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_GetDeviceType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceTypeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).GetDeviceType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/GetDeviceType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).GetDeviceType(ctx, req.(*GetDeviceTypeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_AddDeviceType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDeviceTypeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).AddDeviceType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/AddDeviceType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).AddDeviceType(ctx, req.(*AddDeviceTypeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_UpdateDeviceType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceTypeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).UpdateDeviceType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/UpdateDeviceType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).UpdateDeviceType(ctx, req.(*UpdateDeviceTypeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_RemoveDeviceType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveDeviceTypeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).RemoveDeviceType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/RemoveDeviceType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).RemoveDeviceType(ctx, req.(*RemoveDeviceTypeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_ListDeviceTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceTypesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).ListDeviceTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/ListDeviceTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).ListDeviceTypes(ctx, req.(*ListDeviceTypesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_GetDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).GetDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/GetDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).GetDevice(ctx, req.(*GetDeviceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_AddDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDeviceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).AddDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/AddDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).AddDevice(ctx, req.(*AddDeviceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_UpdateDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).UpdateDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/UpdateDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).UpdateDevice(ctx, req.(*UpdateDeviceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_RemoveDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveDeviceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).RemoveDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/RemoveDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).RemoveDevice(ctx, req.(*RemoveDeviceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _EviotService_ListDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDevicesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EviotServiceServer).ListDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.EviotService/ListDevices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EviotServiceServer).ListDevices(ctx, req.(*ListDevicesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _EviotService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "schema.EviotService",
	HandlerType: (*EviotServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetToken",
			Handler:    _EviotService_GetToken_Handler,
		},
		{
			MethodName: "GetPlugin",
			Handler:    _EviotService_GetPlugin_Handler,
		},
		{
			MethodName: "AddPlugin",
			Handler:    _EviotService_AddPlugin_Handler,
		},
		{
			MethodName: "UpdatePlugin",
			Handler:    _EviotService_UpdatePlugin_Handler,
		},
		{
			MethodName: "RemovePlugin",
			Handler:    _EviotService_RemovePlugin_Handler,
		},
		{
			MethodName: "ListPlugins",
			Handler:    _EviotService_ListPlugins_Handler,
		},
		{
			MethodName: "GetFlow",
			Handler:    _EviotService_GetFlow_Handler,
		},
		{
			MethodName: "AddFlow",
			Handler:    _EviotService_AddFlow_Handler,
		},
		{
			MethodName: "SetFlowStatus",
			Handler:    _EviotService_SetFlowStatus_Handler,
		},
		{
			MethodName: "SetFlowVariable",
			Handler:    _EviotService_SetFlowVariable_Handler,
		},
		{
			MethodName: "SetFlowVariables",
			Handler:    _EviotService_SetFlowVariables_Handler,
		},
		{
			MethodName: "RemoveFlow",
			Handler:    _EviotService_RemoveFlow_Handler,
		},
		{
			MethodName: "StartFlow",
			Handler:    _EviotService_StartFlow_Handler,
		},
		{
			MethodName: "StopFlow",
			Handler:    _EviotService_StopFlow_Handler,
		},
		{
			MethodName: "GetFlowDescriptor",
			Handler:    _EviotService_GetFlowDescriptor_Handler,
		},
		{
			MethodName: "AddFlowDescriptor",
			Handler:    _EviotService_AddFlowDescriptor_Handler,
		},
		{
			MethodName: "UpdateFlowDescriptor",
			Handler:    _EviotService_UpdateFlowDescriptor_Handler,
		},
		{
			MethodName: "RemoveFlowDescriptor",
			Handler:    _EviotService_RemoveFlowDescriptor_Handler,
		},
		{
			MethodName: "ListFlowDescriptors",
			Handler:    _EviotService_ListFlowDescriptors_Handler,
		},
		{
			MethodName: "GetPipeDescriptor",
			Handler:    _EviotService_GetPipeDescriptor_Handler,
		},
		{
			MethodName: "AddPipeDescriptor",
			Handler:    _EviotService_AddPipeDescriptor_Handler,
		},
		{
			MethodName: "UpdatePipeDescriptor",
			Handler:    _EviotService_UpdatePipeDescriptor_Handler,
		},
		{
			MethodName: "RemovePipeDescriptor",
			Handler:    _EviotService_RemovePipeDescriptor_Handler,
		},
		{
			MethodName: "ListPipeDescriptors",
			Handler:    _EviotService_ListPipeDescriptors_Handler,
		},
		{
			MethodName: "GetDeviceType",
			Handler:    _EviotService_GetDeviceType_Handler,
		},
		{
			MethodName: "AddDeviceType",
			Handler:    _EviotService_AddDeviceType_Handler,
		},
		{
			MethodName: "UpdateDeviceType",
			Handler:    _EviotService_UpdateDeviceType_Handler,
		},
		{
			MethodName: "RemoveDeviceType",
			Handler:    _EviotService_RemoveDeviceType_Handler,
		},
		{
			MethodName: "ListDeviceTypes",
			Handler:    _EviotService_ListDeviceTypes_Handler,
		},
		{
			MethodName: "GetDevice",
			Handler:    _EviotService_GetDevice_Handler,
		},
		{
			MethodName: "AddDevice",
			Handler:    _EviotService_AddDevice_Handler,
		},
		{
			MethodName: "UpdateDevice",
			Handler:    _EviotService_UpdateDevice_Handler,
		},
		{
			MethodName: "RemoveDevice",
			Handler:    _EviotService_RemoveDevice_Handler,
		},
		{
			MethodName: "ListDevices",
			Handler:    _EviotService_ListDevices_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchFlowVariable",
			Handler:       _EviotService_WatchFlowVariable_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "eviot_service.proto",
}
